{"abi": [{"inputs": [{"internalType": "address", "name": "_notional", "type": "address"}, {"internalType": "address", "name": "_manager", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [], "name": "NOTIONAL", "outputs": [{"internalType": "contract NotionalProxy", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "NOTIONAL_MANAGER", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "currencyId", "type": "uint256"}], "name": "getCurrencySettings", "outputs": [{"components": [{"components": [{"internalType": "uint8", "name": "kinkUtilization1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkUtilization2", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate2", "type": "uint8"}, {"internalType": "uint8", "name": "maxRateUnits", "type": "uint8"}, {"internalType": "uint8", "name": "minFeeRate5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxFeeRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "feeRatePercent", "type": "uint8"}], "internalType": "struct InterestRateCurveSettings", "name": "primeDebtCurve", "type": "tuple"}, {"internalType": "contract IPrimeCashHoldingsOracle", "name": "primeCashOracle", "type": "address"}, {"components": [{"internalType": "uint8", "name": "maxMarketIndex", "type": "uint8"}, {"internalType": "uint8", "name": "rateOracleTimeWindow5Min", "type": "uint8"}, {"internalType": "uint8", "name": "maxDiscountFactor5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "reserveFeeShare", "type": "uint8"}, {"internalType": "uint8", "name": "debtBuffer25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "fCashHaircut25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "minOracleRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "liquidationfCashHaircut25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "liquidationDebtBuffer25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxOracleRate25BPS", "type": "uint8"}], "internalType": "struct CashGroupSettings", "name": "cashGroupSettings", "type": "tuple"}, {"internalType": "uint8", "name": "rateOracleTimeWindow5Min", "type": "uint8"}, {"internalType": "bool", "name": "allowPrimeDebt", "type": "bool"}, {"internalType": "string", "name": "underlyingName", "type": "string"}, {"internalType": "string", "name": "underlyingSymbol", "type": "string"}, {"components": [{"internalType": "uint8", "name": "kinkUtilization1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkUtilization2", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate2", "type": "uint8"}, {"internalType": "uint8", "name": "maxRateUnits", "type": "uint8"}, {"internalType": "uint8", "name": "minFeeRate5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxFeeRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "feeRatePercent", "type": "uint8"}], "internalType": "struct InterestRateCurveSettings[]", "name": "fCashCurves", "type": "tuple[]"}, {"components": [{"internalType": "uint40", "name": "maturity", "type": "uint40"}, {"internalType": "uint80", "name": "totalfCashDebt", "type": "uint80"}], "internalType": "struct TotalfCashDebt[]", "name": "fCashDebts", "type": "tuple[]"}], "internalType": "struct CurrencySettings", "name": "", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"internalType": "bool", "name": "checkRateDiff", "type": "bool"}], "name": "getfCashCurveUpdate", "outputs": [{"components": [{"internalType": "uint8", "name": "kinkUtilization1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkUtilization2", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate2", "type": "uint8"}, {"internalType": "uint8", "name": "maxRateUnits", "type": "uint8"}, {"internalType": "uint8", "name": "minFeeRate5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxFeeRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "feeRatePercent", "type": "uint8"}], "internalType": "struct InterestRateCurveSettings[]", "name": "finalCurves", "type": "tuple[]"}, {"internalType": "uint256[]", "name": "finalRates", "type": "uint256[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "currencyId", "type": "uint256"}, {"components": [{"components": [{"internalType": "uint8", "name": "kinkUtilization1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkUtilization2", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate2", "type": "uint8"}, {"internalType": "uint8", "name": "maxRateUnits", "type": "uint8"}, {"internalType": "uint8", "name": "minFeeRate5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxFeeRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "feeRatePercent", "type": "uint8"}], "internalType": "struct InterestRateCurveSettings", "name": "primeDebtCurve", "type": "tuple"}, {"internalType": "contract IPrimeCashHoldingsOracle", "name": "primeCashOracle", "type": "address"}, {"components": [{"internalType": "uint8", "name": "maxMarketIndex", "type": "uint8"}, {"internalType": "uint8", "name": "rateOracleTimeWindow5Min", "type": "uint8"}, {"internalType": "uint8", "name": "maxDiscountFactor5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "reserveFeeShare", "type": "uint8"}, {"internalType": "uint8", "name": "debtBuffer25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "fCashHaircut25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "minOracleRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "liquidationfCashHaircut25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "liquidationDebtBuffer25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxOracleRate25BPS", "type": "uint8"}], "internalType": "struct CashGroupSettings", "name": "cashGroupSettings", "type": "tuple"}, {"internalType": "uint8", "name": "rateOracleTimeWindow5Min", "type": "uint8"}, {"internalType": "bool", "name": "allowPrimeDebt", "type": "bool"}, {"internalType": "string", "name": "underlyingName", "type": "string"}, {"internalType": "string", "name": "underlyingSymbol", "type": "string"}, {"components": [{"internalType": "uint8", "name": "kinkUtilization1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkUtilization2", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate1", "type": "uint8"}, {"internalType": "uint8", "name": "kinkRate2", "type": "uint8"}, {"internalType": "uint8", "name": "maxRateUnits", "type": "uint8"}, {"internalType": "uint8", "name": "minFeeRate5BPS", "type": "uint8"}, {"internalType": "uint8", "name": "maxFeeRate25BPS", "type": "uint8"}, {"internalType": "uint8", "name": "feeRatePercent", "type": "uint8"}], "internalType": "struct InterestRateCurveSettings[]", "name": "fCashCurves", "type": "tuple[]"}, {"components": [{"internalType": "uint40", "name": "maturity", "type": "uint40"}, {"internalType": "uint80", "name": "totalfCashDebt", "type": "uint80"}], "internalType": "struct TotalfCashDebt[]", "name": "fCashDebts", "type": "tuple[]"}], "internalType": "struct CurrencySettings", "name": "settings", "type": "tuple"}], "name": "setMigrationSettings", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "currencyId", "type": "uint256"}, {"components": [{"internalType": "uint40", "name": "maturity", "type": "uint40"}, {"internalType": "uint80", "name": "totalfCashDebt", "type": "uint80"}], "internalType": "struct TotalfCashDebt[]", "name": "fCashDebts", "type": "tuple[]"}], "name": "updateTotalfCashDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/Users/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/math/SafeMath.sol", "11": "contracts/external/patchfix/migrate-v3/MigrationSettings.sol", "12": "contracts/external/proxies/BaseERC4626Proxy.sol", "13": "contracts/global/Constants.sol", "14": "contracts/global/Deployments.sol", "15": "contracts/global/LibStorage.sol", "18": "contracts/global/Types.sol", "19": "contracts/internal/AccountContextHandler.sol", "20": "contracts/internal/Emitter.sol", "21": "contracts/internal/balances/BalanceHandler.sol", "22": "contracts/internal/balances/Incentives.sol", "23": "contracts/internal/balances/TokenHandler.sol", "24": "contracts/internal/balances/protocols/CompoundHandler.sol", "25": "contracts/internal/balances/protocols/GenericToken.sol", "26": "contracts/internal/markets/CashGroup.sol", "27": "contracts/internal/markets/DateTime.sol", "29": "contracts/internal/markets/InterestRateCurve.sol", "30": "contracts/internal/markets/Market.sol", "32": "contracts/internal/nToken/nTokenHandler.sol", "33": "contracts/internal/nToken/nTokenSupply.sol", "34": "contracts/internal/pCash/PrimeCashExchangeRate.sol", "35": "contracts/internal/pCash/PrimeRateLib.sol", "37": "contracts/internal/portfolio/PortfolioHandler.sol", "39": "contracts/internal/valuation/AssetHandler.sol", "40": "contracts/math/ABDKMath64x64.sol", "41": "contracts/math/Bitmap.sol", "42": "contracts/math/FloatingPoint.sol", "43": "contracts/math/SafeInt256.sol", "44": "contracts/math/SafeUint256.sol", "48": "contracts/proxy/beacon/IBeacon.sol", "52": "interfaces/IEIP20NonStandard.sol", "53": "interfaces/IERC20.sol", "55": "interfaces/WETH9.sol", "56": "interfaces/aave/ILendingPool.sol", "57": "interfaces/chainlink/AggregatorInterface.sol", "58": "interfaces/chainlink/AggregatorV2V3Interface.sol", "59": "interfaces/chainlink/AggregatorV3Interface.sol", "60": "interfaces/compound/CErc20Interface.sol", "62": "interfaces/compound/CTokenInterface.sol", "64": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "65": "interfaces/notional/IRewarder.sol", "66": "interfaces/notional/IVaultController.sol", "67": "interfaces/notional/NotionalCalculations.sol", "68": "interfaces/notional/NotionalGovernance.sol", "69": "interfaces/notional/NotionalProxy.sol", "7": "contracts/external/MigrateIncentives.sol", "70": "interfaces/notional/NotionalTreasury.sol", "71": "interfaces/notional/NotionalViews.sol", "72": "interfaces/notional/nERC1155Interface.sol", "73": "interfaces/notional/nTokenERC20.sol"}, "ast": {"absolutePath": "contracts/external/patchfix/migrate-v3/MigrationSettings.sol", "exportedSymbols": {"AssetRateStorage": [4265], "CashGroupSettings": [4286], "Constants": [6679], "CurrencySettings": [2033], "IPrimeCashHoldingsOracle": [20183], "InterestRateCurve": [14548], "InterestRateCurveSettings": [4377], "InterestRateParameters": [4360], "MarketParameters": [4236], "MigrationSettings": [2948], "NotionalProxy": [6048], "SafeInt256": [19003], "SafeUint256": [19490], "TotalfCashDebt": [2012]}, "id": 2949, "license": "GPL-3.0-only", "nodeType": "SourceUnit", "nodes": [{"id": 1988, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "41:23:11"}, {"id": 1989, "literals": ["abicoder", "v2"], "nodeType": "PragmaDirective", "src": "65:19:11"}, {"absolutePath": "contracts/global/Types.sol", "file": "../../../global/Types.sol", "id": 1995, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 4667, "src": "86:169:11", "symbolAliases": [{"foreign": {"id": 1990, "name": "InterestRateCurveSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "99:25:11", "typeDescriptions": {}}}, {"foreign": {"id": 1991, "name": "InterestRateParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "130:22:11", "typeDescriptions": {}}}, {"foreign": {"id": 1992, "name": "CashGroupSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "158:17:11", "typeDescriptions": {}}}, {"foreign": {"id": 1993, "name": "MarketParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "181:16:11", "typeDescriptions": {}}}, {"foreign": {"id": 1994, "name": "AssetRateStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "203:16:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/global/Constants.sol", "file": "../../../global/Constants.sol", "id": 1997, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 6680, "src": "256:56:11", "symbolAliases": [{"foreign": {"id": 1996, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "264:9:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeUint256.sol", "file": "../../../math/SafeUint256.sol", "id": 1999, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 19491, "src": "313:58:11", "symbolAliases": [{"foreign": {"id": 1998, "name": "SafeUint256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "321:11:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeInt256.sol", "file": "../../../math/SafeInt256.sol", "id": 2001, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 19004, "src": "372:56:11", "symbolAliases": [{"foreign": {"id": 2000, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "380:10:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/notional/NotionalProxy.sol", "file": "../../../../interfaces/notional/NotionalProxy.sol", "id": 2003, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 6049, "src": "430:80:11", "symbolAliases": [{"foreign": {"id": 2002, "name": "NotionalProxy", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "438:13:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "file": "../../../../interfaces/notional/IPrimeCashHoldingsOracle.sol", "id": 2005, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 20184, "src": "511:102:11", "symbolAliases": [{"foreign": {"id": 2004, "name": "IPrimeCashHoldingsOracle", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "519:24:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/InterestRateCurve.sol", "file": "../../../internal/markets/InterestRateCurve.sol", "id": 2007, "nodeType": "ImportDirective", "scope": 2949, "sourceUnit": 14549, "src": "614:82:11", "symbolAliases": [{"foreign": {"id": 2006, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "622:17:11", "typeDescriptions": {}}}], "unitAlias": ""}, {"canonicalName": "TotalfCashDebt", "id": 2012, "members": [{"constant": false, "id": 2009, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 2012, "src": "726:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 2008, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "726:6:11", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 2011, "mutability": "mutable", "name": "totalfCashDebt", "nodeType": "VariableDeclaration", "scope": 2012, "src": "747:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}, "typeName": {"id": 2010, "name": "uint80", "nodeType": "ElementaryTypeName", "src": "747:6:11", "typeDescriptions": {"typeIdentifier": "t_uint80", "typeString": "uint80"}}, "visibility": "internal"}], "name": "TotalfCashDebt", "nodeType": "StructDefinition", "scope": 2949, "src": "698:73:11", "visibility": "public"}, {"canonicalName": "CurrencySettings", "id": 2033, "members": [{"constant": false, "id": 2014, "mutability": "mutable", "name": "primeDebtCurve", "nodeType": "VariableDeclaration", "scope": 2033, "src": "803:40:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}, "typeName": {"id": 2013, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "803:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "visibility": "internal"}, {"constant": false, "id": 2016, "mutability": "mutable", "name": "primeCashOracle", "nodeType": "VariableDeclaration", "scope": 2033, "src": "849:40:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IPrimeCashHoldingsOracle_$20183", "typeString": "contract IPrimeCashHoldingsOracle"}, "typeName": {"id": 2015, "name": "IPrimeCashHoldingsOracle", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 20183, "src": "849:24:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IPrimeCashHoldingsOracle_$20183", "typeString": "contract IPrimeCashHoldingsOracle"}}, "visibility": "internal"}, {"constant": false, "id": 2018, "mutability": "mutable", "name": "cashGroupSettings", "nodeType": "VariableDeclaration", "scope": 2033, "src": "895:35:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupSettings_$4286_storage_ptr", "typeString": "struct CashGroupSettings"}, "typeName": {"id": 2017, "name": "CashGroupSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4286, "src": "895:17:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupSettings_$4286_storage_ptr", "typeString": "struct CashGroupSettings"}}, "visibility": "internal"}, {"constant": false, "id": 2020, "mutability": "mutable", "name": "rateOracleTimeWindow5Min", "nodeType": "VariableDeclaration", "scope": 2033, "src": "936:30:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 2019, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "936:5:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 2022, "mutability": "mutable", "name": "allowPrimeDebt", "nodeType": "VariableDeclaration", "scope": 2033, "src": "972:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2021, "name": "bool", "nodeType": "ElementaryTypeName", "src": "972:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 2024, "mutability": "mutable", "name": "underlyingName", "nodeType": "VariableDeclaration", "scope": 2033, "src": "997:21:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 2023, "name": "string", "nodeType": "ElementaryTypeName", "src": "997:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 2026, "mutability": "mutable", "name": "underlyingSymbol", "nodeType": "VariableDeclaration", "scope": 2033, "src": "1024:23:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 2025, "name": "string", "nodeType": "ElementaryTypeName", "src": "1024:6:11", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 2029, "mutability": "mutable", "name": "fCashCurves", "nodeType": "VariableDeclaration", "scope": 2033, "src": "1053:39:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}, "typeName": {"baseType": {"id": 2027, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "1053:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "id": 2028, "nodeType": "ArrayTypeName", "src": "1053:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}}, "visibility": "internal"}, {"constant": false, "id": 2032, "mutability": "mutable", "name": "fCashDebts", "nodeType": "VariableDeclaration", "scope": 2033, "src": "1098:27:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage_ptr", "typeString": "struct TotalfCashDebt[]"}, "typeName": {"baseType": {"id": 2030, "name": "TotalfCashDebt", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2012, "src": "1098:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_storage_ptr", "typeString": "struct TotalfCashDebt"}}, "id": 2031, "nodeType": "ArrayTypeName", "src": "1098:16:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage_ptr", "typeString": "struct TotalfCashDebt[]"}}, "visibility": "internal"}], "name": "CurrencySettings", "nodeType": "StructDefinition", "scope": 2949, "src": "773:355:11", "visibility": "public"}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 2948, "linearizedBaseContracts": [2948], "name": "MigrationSettings", "nodeType": "ContractDefinition", "nodes": [{"id": 2036, "libraryName": {"id": 2034, "name": "SafeUint256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19490, "src": "1169:11:11", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeUint256_$19490", "typeString": "library SafeUint256"}}, "nodeType": "UsingForDirective", "src": "1163:30:11", "typeName": {"id": 2035, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1185:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 2039, "libraryName": {"id": 2037, "name": "SafeInt256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 19003, "src": "1204:10:11", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeInt256_$19003", "typeString": "library SafeInt256"}}, "nodeType": "UsingForDirective", "src": "1198:28:11", "typeName": {"id": 2038, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1219:6:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"constant": false, "functionSelector": "858dccb3", "id": 2041, "mutability": "immutable", "name": "NOTIONAL", "nodeType": "VariableDeclaration", "scope": 2948, "src": "1232:39:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}, "typeName": {"id": 2040, "name": "NotionalProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 6048, "src": "1232:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "visibility": "public"}, {"constant": false, "functionSelector": "7fb9cb12", "id": 2043, "mutability": "immutable", "name": "NOTIONAL_MANAGER", "nodeType": "VariableDeclaration", "scope": 2948, "src": "1277:41:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2042, "name": "address", "nodeType": "ElementaryTypeName", "src": "1277:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": true, "id": 2053, "mutability": "constant", "name": "MAX_KINK_DIFF", "nodeType": "VariableDeclaration", "scope": 2948, "src": "1406:68:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2044, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1406:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2052, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "323530", "id": 2045, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1448:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_250_by_1", "typeString": "int_const 250"}, "value": "250"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_rational_100000_by_1", "typeString": "int_const 100000"}, "id": 2050, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "316539", "id": 2048, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1462:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000_by_1", "typeString": "int_const 1000000000"}, "value": "1e9"}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "3130303030", "id": 2049, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1468:5:11", "typeDescriptions": {"typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000"}, "value": "10000"}, "src": "1462:11:11", "typeDescriptions": {"typeIdentifier": "t_rational_100000_by_1", "typeString": "int_const 100000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_100000_by_1", "typeString": "int_const 100000"}], "id": 2047, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1454:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2046, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1454:7:11", "typeDescriptions": {}}}, "id": 2051, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1454:20:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1448:26:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2057, "mutability": "mutable", "name": "currencySettings", "nodeType": "VariableDeclaration", "scope": 2948, "src": "1512:62:11", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings)"}, "typeName": {"id": 2056, "keyType": {"id": 2054, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1520:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "1512:36:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings)"}, "valueType": {"id": 2055, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "1531:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}}, "visibility": "internal"}, {"body": {"id": 2074, "nodeType": "Block", "src": "1630:89:11", "statements": [{"expression": {"id": 2068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2064, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2041, "src": "1640:8:11", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 2066, "name": "_notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2059, "src": "1665:9:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2065, "name": "NotionalProxy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6048, "src": "1651:13:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_NotionalProxy_$6048_$", "typeString": "type(contract NotionalProxy)"}}, "id": 2067, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1651:24:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "src": "1640:35:11", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "id": 2069, "nodeType": "ExpressionStatement", "src": "1640:35:11"}, {"expression": {"id": 2072, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2070, "name": "NOTIONAL_MANAGER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2043, "src": "1685:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2071, "name": "_manager", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2061, "src": "1704:8:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1685:27:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 2073, "nodeType": "ExpressionStatement", "src": "1685:27:11"}]}, "id": 2075, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 2062, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2059, "mutability": "mutable", "name": "_notional", "nodeType": "VariableDeclaration", "scope": 2075, "src": "1593:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2058, "name": "address", "nodeType": "ElementaryTypeName", "src": "1593:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2061, "mutability": "mutable", "name": "_manager", "nodeType": "VariableDeclaration", "scope": 2075, "src": "1612:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2060, "name": "address", "nodeType": "ElementaryTypeName", "src": "1612:7:11", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1592:37:11"}, "returnParameters": {"id": 2063, "nodeType": "ParameterList", "parameters": [], "src": "1630:0:11"}, "scope": 2948, "src": "1581:138:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 2086, "nodeType": "Block", "src": "1822:52:11", "statements": [{"expression": {"baseExpression": {"id": 2082, "name": "currencySettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2057, "src": "1839:16:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings storage ref)"}}, "id": 2084, "indexExpression": {"id": 2083, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2077, "src": "1856:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1839:28:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage", "typeString": "struct CurrencySettings storage ref"}}, "functionReturnParameters": 2081, "id": 2085, "nodeType": "Return", "src": "1832:35:11"}]}, "functionSelector": "eb8457ba", "id": 2087, "implemented": true, "kind": "function", "modifiers": [], "name": "getCurrencySettings", "nodeType": "FunctionDefinition", "parameters": {"id": 2078, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2077, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 2087, "src": "1754:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2076, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1754:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1753:20:11"}, "returnParameters": {"id": 2081, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2080, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2087, "src": "1797:23:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings"}, "typeName": {"id": 2079, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "1797:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}, "visibility": "internal"}], "src": "1796:25:11"}, "scope": 2948, "src": "1725:149:11", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 2251, "nodeType": "Block", "src": "2039:1363:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2099, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2096, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2121:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2121:10:11", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 2098, "name": "NOTIONAL_MANAGER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2043, "src": "2135:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2121:30:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2095, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2113:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2100, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2113:39:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2101, "nodeType": "ExpressionStatement", "src": "2113:39:11"}, {"assignments": [2103], "declarations": [{"constant": false, "id": 2103, "mutability": "mutable", "name": "_storageSettings", "nodeType": "VariableDeclaration", "scope": 2251, "src": "2163:41:11", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}, "typeName": {"id": 2102, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "2163:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}, "visibility": "internal"}], "id": 2107, "initialValue": {"baseExpression": {"id": 2104, "name": "currencySettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2057, "src": "2207:16:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings storage ref)"}}, "id": 2106, "indexExpression": {"id": 2105, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2090, "src": "2224:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2207:28:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage", "typeString": "struct CurrencySettings storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "2163:72:11"}, {"expression": {"id": 2113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2108, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2245:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2110, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "primeDebtCurve", "nodeType": "MemberAccess", "referencedDeclaration": 2014, "src": "2245:31:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage", "typeString": "struct InterestRateCurveSettings storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2111, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2279:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2112, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "primeDebtCurve", "nodeType": "MemberAccess", "referencedDeclaration": 2014, "src": "2279:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "src": "2245:57:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage", "typeString": "struct InterestRateCurveSettings storage ref"}}, "id": 2114, "nodeType": "ExpressionStatement", "src": "2245:57:11"}, {"expression": {"id": 2120, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2115, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2312:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2117, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "primeCashOracle", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "2312:32:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IPrimeCashHoldingsOracle_$20183", "typeString": "contract IPrimeCashHoldingsOracle"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2118, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2347:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2119, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "primeCashOracle", "nodeType": "MemberAccess", "referencedDeclaration": 2016, "src": "2347:24:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IPrimeCashHoldingsOracle_$20183", "typeString": "contract IPrimeCashHoldingsOracle"}}, "src": "2312:59:11", "typeDescriptions": {"typeIdentifier": "t_contract$_IPrimeCashHoldingsOracle_$20183", "typeString": "contract IPrimeCashHoldingsOracle"}}, "id": 2121, "nodeType": "ExpressionStatement", "src": "2312:59:11"}, {"expression": {"id": 2127, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2122, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2381:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2124, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cashGroupSettings", "nodeType": "MemberAccess", "referencedDeclaration": 2018, "src": "2381:34:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupSettings_$4286_storage", "typeString": "struct CashGroupSettings storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2125, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2418:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2126, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroupSettings", "nodeType": "MemberAccess", "referencedDeclaration": 2018, "src": "2418:26:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupSettings_$4286_memory_ptr", "typeString": "struct CashGroupSettings memory"}}, "src": "2381:63:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupSettings_$4286_storage", "typeString": "struct CashGroupSettings storage ref"}}, "id": 2128, "nodeType": "ExpressionStatement", "src": "2381:63:11"}, {"expression": {"id": 2134, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2129, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2454:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2131, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "allowPrimeDebt", "nodeType": "MemberAccess", "referencedDeclaration": 2022, "src": "2454:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2132, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2488:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2133, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "allowPrimeDebt", "nodeType": "MemberAccess", "referencedDeclaration": 2022, "src": "2488:23:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "2454:57:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2135, "nodeType": "ExpressionStatement", "src": "2454:57:11"}, {"expression": {"id": 2141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2136, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2521:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2138, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "underlyingName", "nodeType": "MemberAccess", "referencedDeclaration": 2024, "src": "2521:31:11", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2139, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2555:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2140, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "underlyingName", "nodeType": "MemberAccess", "referencedDeclaration": 2024, "src": "2555:23:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2521:57:11", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 2142, "nodeType": "ExpressionStatement", "src": "2521:57:11"}, {"expression": {"id": 2148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2143, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2588:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2145, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "underlyingSymbol", "nodeType": "MemberAccess", "referencedDeclaration": 2026, "src": "2588:33:11", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2146, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2624:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2147, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "underlyingSymbol", "nodeType": "MemberAccess", "referencedDeclaration": 2026, "src": "2624:25:11", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "2588:61:11", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 2149, "nodeType": "ExpressionStatement", "src": "2588:61:11"}, {"expression": {"id": 2155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2150, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2659:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2152, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "rateOracleTimeWindow5Min", "nodeType": "MemberAccess", "referencedDeclaration": 2020, "src": "2659:41:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2153, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2703:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2154, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateOracleTimeWindow5Min", "nodeType": "MemberAccess", "referencedDeclaration": 2020, "src": "2703:33:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "2659:77:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 2156, "nodeType": "ExpressionStatement", "src": "2659:77:11"}, {"assignments": [2158], "declarations": [{"constant": false, "id": 2158, "mutability": "mutable", "name": "existingLength", "nodeType": "VariableDeclaration", "scope": 2251, "src": "2779:22:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2157, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2779:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2162, "initialValue": {"expression": {"expression": {"id": 2159, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2804:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2160, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "2804:28:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage", "typeString": "struct InterestRateCurveSettings storage ref[] storage ref"}}, "id": 2161, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2804:35:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2779:60:11"}, {"body": {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"expression": {"id": 2172, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "2891:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2175, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "2891:28:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage", "typeString": "struct InterestRateCurveSettings storage ref[] storage ref"}}, "id": 2176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pop", "nodeType": "MemberAccess", "src": "2891:32:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2891:34:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2178, "nodeType": "ExpressionStatement", "src": "2891:34:11"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2166, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "2865:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2167, "name": "existingLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2158, "src": "2869:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2865:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2179, "initializationExpression": {"assignments": [2164], "declarations": [{"constant": false, "id": 2164, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2179, "src": "2854:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2163, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2854:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2165, "nodeType": "VariableDeclarationStatement", "src": "2854:9:11"}, "loopExpression": {"expression": {"id": 2170, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2885:3:11", "subExpression": {"id": 2169, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2164, "src": "2885:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2171, "nodeType": "ExpressionStatement", "src": "2885:3:11"}, "nodeType": "ForStatement", "src": "2849:76:11"}, {"body": {"id": 2202, "nodeType": "Block", "src": "2990:83:11", "statements": [{"expression": {"arguments": [{"baseExpression": {"expression": {"id": 2196, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "3038:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2197, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "3038:20:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2199, "indexExpression": {"id": 2198, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2181, "src": "3059:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3038:23:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}], "expression": {"expression": {"id": 2191, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "3004:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2194, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "3004:28:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage", "typeString": "struct InterestRateCurveSettings storage ref[] storage ref"}}, "id": 2195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "3004:33:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_InterestRateCurveSettings_$4377_storage_$returns$__$", "typeString": "function (struct InterestRateCurveSettings storage ref)"}}, "id": 2200, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3004:58:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2201, "nodeType": "ExpressionStatement", "src": "3004:58:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2183, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2181, "src": "2952:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 2184, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "2956:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2185, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "2956:20:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2186, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2956:27:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2952:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2203, "initializationExpression": {"assignments": [2181], "declarations": [{"constant": false, "id": 2181, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2203, "src": "2941:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2180, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2941:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2182, "nodeType": "VariableDeclarationStatement", "src": "2941:9:11"}, "loopExpression": {"expression": {"id": 2189, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "2985:3:11", "subExpression": {"id": 2188, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2181, "src": "2985:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2190, "nodeType": "ExpressionStatement", "src": "2985:3:11"}, "nodeType": "ForStatement", "src": "2936:137:11"}, {"expression": {"id": 2208, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2204, "name": "existingLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2158, "src": "3115:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"expression": {"id": 2205, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "3132:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2206, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3132:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2207, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3132:34:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3115:51:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2209, "nodeType": "ExpressionStatement", "src": "3115:51:11"}, {"body": {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"expression": {"id": 2219, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "3218:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2222, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3218:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pop", "nodeType": "MemberAccess", "src": "3218:31:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2224, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3218:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2225, "nodeType": "ExpressionStatement", "src": "3218:33:11"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2213, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2211, "src": "3192:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2214, "name": "existingLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2158, "src": "3196:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3192:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2226, "initializationExpression": {"assignments": [2211], "declarations": [{"constant": false, "id": 2211, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2226, "src": "3181:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2210, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3181:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2212, "nodeType": "VariableDeclarationStatement", "src": "3181:9:11"}, "loopExpression": {"expression": {"id": 2217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3212:3:11", "subExpression": {"id": 2216, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2211, "src": "3212:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2218, "nodeType": "ExpressionStatement", "src": "3212:3:11"}, "nodeType": "ForStatement", "src": "3176:75:11"}, {"body": {"id": 2249, "nodeType": "Block", "src": "3315:81:11", "statements": [{"expression": {"arguments": [{"baseExpression": {"expression": {"id": 2243, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "3362:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2244, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3362:19:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_memory_ptr_$dyn_memory_ptr", "typeString": "struct TotalfCashDebt memory[] memory"}}, "id": 2246, "indexExpression": {"id": 2245, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2228, "src": "3382:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3362:22:11", "typeDescriptions": {"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_memory_ptr", "typeString": "struct TotalfCashDebt memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_memory_ptr", "typeString": "struct TotalfCashDebt memory"}], "expression": {"expression": {"id": 2238, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2103, "src": "3329:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2241, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3329:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "3329:32:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TotalfCashDebt_$2012_storage_$returns$__$", "typeString": "function (struct TotalfCashDebt storage ref)"}}, "id": 2247, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3329:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2248, "nodeType": "ExpressionStatement", "src": "3329:56:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2230, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2228, "src": "3278:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"id": 2231, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2092, "src": "3282:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2232, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3282:19:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_memory_ptr_$dyn_memory_ptr", "typeString": "struct TotalfCashDebt memory[] memory"}}, "id": 2233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3282:26:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3278:30:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2250, "initializationExpression": {"assignments": [2228], "declarations": [{"constant": false, "id": 2228, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2250, "src": "3267:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2227, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3267:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2229, "nodeType": "VariableDeclarationStatement", "src": "3267:9:11"}, "loopExpression": {"expression": {"id": 2236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3310:3:11", "subExpression": {"id": 2235, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2228, "src": "3310:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2237, "nodeType": "ExpressionStatement", "src": "3310:3:11"}, "nodeType": "ForStatement", "src": "3262:134:11"}]}, "documentation": {"id": 2088, "nodeType": "StructuredDocumentation", "src": "1880:61:11", "text": "@notice Sets migration settings for the given currency id"}, "functionSelector": "689954e1", "id": 2252, "implemented": true, "kind": "function", "modifiers": [], "name": "setMigrationSettings", "nodeType": "FunctionDefinition", "parameters": {"id": 2093, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2090, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 2252, "src": "1976:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2089, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1976:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2092, "mutability": "mutable", "name": "settings", "nodeType": "VariableDeclaration", "scope": 2252, "src": "1996:32:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings"}, "typeName": {"id": 2091, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "1996:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}, "visibility": "internal"}], "src": "1975:54:11"}, "returnParameters": {"id": 2094, "nodeType": "ParameterList", "parameters": [], "src": "2039:0:11"}, "scope": 2948, "src": "1946:1456:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 2319, "nodeType": "Block", "src": "3633:526:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2262, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3726:3:11", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2263, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "3726:10:11", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 2264, "name": "NOTIONAL_MANAGER", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2043, "src": "3740:16:11", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3726:30:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 2261, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3718:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 2266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3718:39:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2267, "nodeType": "ExpressionStatement", "src": "3718:39:11"}, {"assignments": [2269], "declarations": [{"constant": false, "id": 2269, "mutability": "mutable", "name": "_storageSettings", "nodeType": "VariableDeclaration", "scope": 2319, "src": "3767:41:11", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}, "typeName": {"id": 2268, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "3767:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}, "visibility": "internal"}], "id": 2273, "initialValue": {"baseExpression": {"id": 2270, "name": "currencySettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2057, "src": "3811:16:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings storage ref)"}}, "id": 2272, "indexExpression": {"id": 2271, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2255, "src": "3828:10:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3811:28:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage", "typeString": "struct CurrencySettings storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "3767:72:11"}, {"assignments": [2275], "declarations": [{"constant": false, "id": 2275, "mutability": "mutable", "name": "existingLength", "nodeType": "VariableDeclaration", "scope": 2319, "src": "3882:22:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2274, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3882:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2279, "initialValue": {"expression": {"expression": {"id": 2276, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2269, "src": "3907:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2277, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3907:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3907:34:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3882:59:11"}, {"body": {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"expression": {"id": 2289, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2269, "src": "3993:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2292, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "3993:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2293, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "pop", "nodeType": "MemberAccess", "src": "3993:31:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2294, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3993:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2295, "nodeType": "ExpressionStatement", "src": "3993:33:11"}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2285, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2283, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2281, "src": "3967:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2284, "name": "existingLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2275, "src": "3971:14:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3967:18:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2296, "initializationExpression": {"assignments": [2281], "declarations": [{"constant": false, "id": 2281, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2296, "src": "3956:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2280, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3956:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2282, "nodeType": "VariableDeclarationStatement", "src": "3956:9:11"}, "loopExpression": {"expression": {"id": 2287, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3987:3:11", "subExpression": {"id": 2286, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2281, "src": "3987:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2288, "nodeType": "ExpressionStatement", "src": "3987:3:11"}, "nodeType": "ForStatement", "src": "3951:75:11"}, {"body": {"id": 2317, "nodeType": "Block", "src": "4081:72:11", "statements": [{"expression": {"arguments": [{"baseExpression": {"id": 2312, "name": "fCashDebts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2258, "src": "4128:10:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_memory_ptr_$dyn_memory_ptr", "typeString": "struct TotalfCashDebt memory[] memory"}}, "id": 2314, "indexExpression": {"id": 2313, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2298, "src": "4139:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4128:13:11", "typeDescriptions": {"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_memory_ptr", "typeString": "struct TotalfCashDebt memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_memory_ptr", "typeString": "struct TotalfCashDebt memory"}], "expression": {"expression": {"id": 2307, "name": "_storageSettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2269, "src": "4095:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings storage pointer"}}, "id": 2310, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashDebts", "nodeType": "MemberAccess", "referencedDeclaration": 2032, "src": "4095:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage", "typeString": "struct TotalfCashDebt storage ref[] storage ref"}}, "id": 2311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "push", "nodeType": "MemberAccess", "src": "4095:32:11", "typeDescriptions": {"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_TotalfCashDebt_$2012_storage_$returns$__$", "typeString": "function (struct TotalfCashDebt storage ref)"}}, "id": 2315, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4095:47:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2316, "nodeType": "ExpressionStatement", "src": "4095:47:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2303, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2300, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2298, "src": "4053:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2301, "name": "fCashDebts", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2258, "src": "4057:10:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_memory_ptr_$dyn_memory_ptr", "typeString": "struct TotalfCashDebt memory[] memory"}}, "id": 2302, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "4057:17:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4053:21:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2318, "initializationExpression": {"assignments": [2298], "declarations": [{"constant": false, "id": 2298, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2318, "src": "4042:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2297, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4042:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2299, "nodeType": "VariableDeclarationStatement", "src": "4042:9:11"}, "loopExpression": {"expression": {"id": 2305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4076:3:11", "subExpression": {"id": 2304, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2298, "src": "4076:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2306, "nodeType": "ExpressionStatement", "src": "4076:3:11"}, "nodeType": "ForStatement", "src": "4037:116:11"}]}, "documentation": {"id": 2253, "nodeType": "StructuredDocumentation", "src": "3408:125:11", "text": "@notice Special method for updating the total fCash debt since this may change as we\n closer to the actual upgrade"}, "functionSelector": "e8d0984e", "id": 2320, "implemented": true, "kind": "function", "modifiers": [], "name": "updateTotalfCashDebt", "nodeType": "FunctionDefinition", "parameters": {"id": 2259, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2255, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 2320, "src": "3568:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2254, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3568:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2258, "mutability": "mutable", "name": "fCashDebts", "nodeType": "VariableDeclaration", "scope": 2320, "src": "3588:34:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_memory_ptr_$dyn_memory_ptr", "typeString": "struct TotalfCashDebt[]"}, "typeName": {"baseType": {"id": 2256, "name": "TotalfCashDebt", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2012, "src": "3588:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_TotalfCashDebt_$2012_storage_ptr", "typeString": "struct TotalfCashDebt"}}, "id": 2257, "nodeType": "ArrayTypeName", "src": "3588:16:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_TotalfCashDebt_$2012_storage_$dyn_storage_ptr", "typeString": "struct TotalfCashDebt[]"}}, "visibility": "internal"}], "src": "3567:56:11"}, "returnParameters": {"id": 2260, "nodeType": "ParameterList", "parameters": [], "src": "3633:0:11"}, "scope": 2948, "src": "3538:621:11", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 2397, "nodeType": "Block", "src": "4404:777:11", "statements": [{"assignments": [2335], "declarations": [{"constant": false, "id": 2335, "mutability": "mutable", "name": "settings", "nodeType": "VariableDeclaration", "scope": 2397, "src": "4414:32:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings"}, "typeName": {"id": 2334, "name": "CurrencySettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 2033, "src": "4414:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage_ptr", "typeString": "struct CurrencySettings"}}, "visibility": "internal"}], "id": 2339, "initialValue": {"baseExpression": {"id": 2336, "name": "currencySettings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2057, "src": "4449:16:11", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CurrencySettings_$2033_storage_$", "typeString": "mapping(uint256 => struct CurrencySettings storage ref)"}}, "id": 2338, "indexExpression": {"id": 2337, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2323, "src": "4466:10:11", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4449:28:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_storage", "typeString": "struct CurrencySettings storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "4414:63:11"}, {"assignments": [null, 2341], "declarations": [null, {"constant": false, "id": 2341, "mutability": "mutable", "name": "ar", "nodeType": "VariableDeclaration", "scope": 2397, "src": "4495:26:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateStorage_$4265_memory_ptr", "typeString": "struct AssetRateStorage"}, "typeName": {"id": 2340, "name": "AssetRateStorage", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4265, "src": "4495:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateStorage_$4265_storage_ptr", "typeString": "struct AssetRateStorage"}}, "visibility": "internal"}], "id": 2346, "initialValue": {"arguments": [{"id": 2344, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2323, "src": "4549:10:11", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 2342, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2041, "src": "4525:8:11", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "id": 2343, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getRateStorage", "nodeType": "MemberAccess", "referencedDeclaration": 26074, "src": "4525:23:11", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_struct$_ETHRateStorage_$4260_memory_ptr_$_t_struct$_AssetRateStorage_$4265_memory_ptr_$", "typeString": "function (uint16) view external returns (struct ETHRateStorage memory,struct AssetRateStorage memory)"}}, "id": 2345, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4525:35:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_ETHRateStorage_$4260_memory_ptr_$_t_struct$_AssetRateStorage_$4265_memory_ptr_$", "typeString": "tuple(struct ETHRateStorage memory,struct AssetRateStorage memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4487:73:11"}, {"assignments": [2350], "declarations": [{"constant": false, "id": 2350, "mutability": "mutable", "name": "markets", "nodeType": "VariableDeclaration", "scope": 2397, "src": "4570:33:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters[]"}, "typeName": {"baseType": {"id": 2348, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4236, "src": "4570:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_storage_ptr", "typeString": "struct MarketParameters"}}, "id": 2349, "nodeType": "ArrayTypeName", "src": "4570:18:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_storage_$dyn_storage_ptr", "typeString": "struct MarketParameters[]"}}, "visibility": "internal"}], "id": 2355, "initialValue": {"arguments": [{"id": 2353, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2323, "src": "4632:10:11", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 2351, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2041, "src": "4606:8:11", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$6048", "typeString": "contract NotionalProxy"}}, "id": 2352, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getActiveMarkets", "nodeType": "MemberAccess", "referencedDeclaration": 26278, "src": "4606:25:11", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint16) view external returns (struct MarketParameters memory[] memory)"}}, "id": 2354, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4606:37:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4570:73:11"}, {"assignments": [2357], "declarations": [{"constant": false, "id": 2357, "mutability": "mutable", "name": "assetRateDecimals", "nodeType": "VariableDeclaration", "scope": 2397, "src": "4745:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2356, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4745:6:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 2368, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 2360, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4779:2:11", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 2364, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 2361, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4786:2:11", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 2362, "name": "ar", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2341, "src": "4791:2:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateStorage_$4265_memory_ptr", "typeString": "struct AssetRateStorage memory"}}, "id": 2363, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "underlyingDecimalPlaces", "nodeType": "MemberAccess", "referencedDeclaration": 4264, "src": "4791:26:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "4786:31:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "id": 2365, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4785:33:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "4779:39:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2359, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4772:6:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 2358, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4772:6:11", "typeDescriptions": {}}}, "id": 2367, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4772:47:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "4745:74:11"}, {"assignments": [2370], "declarations": [{"constant": false, "id": 2370, "mutability": "mutable", "name": "assetRate", "nodeType": "VariableDeclaration", "scope": 2397, "src": "4829:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2369, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4829:6:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 2387, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2380, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 2373, "name": "ar", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2341, "src": "4856:2:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateStorage_$4265_memory_ptr", "typeString": "struct AssetRateStorage memory"}}, "id": 2374, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateOracle", "nodeType": "MemberAccess", "referencedDeclaration": 4262, "src": "4856:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_AssetRateAdapter_$20081", "typeString": "contract AssetRateAdapter"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_AssetRateAdapter_$20081", "typeString": "contract AssetRateAdapter"}], "id": 2372, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4848:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2371, "name": "address", "nodeType": "ElementaryTypeName", "src": "4848:7:11", "typeDescriptions": {}}}, "id": 2375, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4848:22:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2378, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4882:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2377, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4874:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2376, "name": "address", "nodeType": "ElementaryTypeName", "src": "4874:7:11", "typeDescriptions": {}}}, "id": 2379, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4874:10:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "4848:36:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"id": 2385, "name": "assetRateDecimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2357, "src": "5013:17:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 2386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "4848:182:11", "trueExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"expression": {"id": 2381, "name": "ar", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2341, "src": "4900:2:11", "typeDescriptions": {"typeIdentifier": "t_struct$_AssetRateStorage_$4265_memory_ptr", "typeString": "struct AssetRateStorage memory"}}, "id": 2382, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "rateOracle", "nodeType": "MemberAccess", "referencedDeclaration": 4262, "src": "4900:13:11", "typeDescriptions": {"typeIdentifier": "t_contract$_AssetRateAdapter_$20081", "typeString": "contract AssetRateAdapter"}}, "id": 2383, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getExchangeRateView", "nodeType": "MemberAccess", "referencedDeclaration": 20075, "src": "4900:33:11", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$", "typeString": "function () view external returns (int256)"}}, "id": 2384, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4900:35:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "4829:201:11"}, {"expression": {"arguments": [{"expression": {"id": 2389, "name": "settings", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2335, "src": "5090:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_CurrencySettings_$2033_memory_ptr", "typeString": "struct CurrencySettings memory"}}, "id": 2390, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashCurves", "nodeType": "MemberAccess", "referencedDeclaration": 2029, "src": "5090:20:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, {"id": 2391, "name": "markets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2350, "src": "5112:7:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters memory[] memory"}}, {"id": 2392, "name": "checkRateDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2325, "src": "5121:13:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 2393, "name": "assetRateDecimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2357, "src": "5136:17:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 2394, "name": "assetRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2370, "src": "5155:9:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}, {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters memory[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2388, "name": "_calculateInterestRateCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2926, "src": "5048:28:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr_$_t_bool_$_t_int256_$_t_int256_$returns$_t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (struct InterestRateCurveSettings memory[] memory,struct MarketParameters memory[] memory,bool,int256,int256) view returns (struct InterestRateCurveSettings memory[] memory,uint256[] memory)"}}, "id": 2395, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5048:126:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "tuple(struct InterestRateCurveSettings memory[] memory,uint256[] memory)"}}, "functionReturnParameters": 2333, "id": 2396, "nodeType": "Return", "src": "5041:133:11"}]}, "documentation": {"id": 2321, "nodeType": "StructuredDocumentation", "src": "4165:44:11", "text": "@notice Simulates the fCash curve update"}, "functionSelector": "2188691d", "id": 2398, "implemented": true, "kind": "function", "modifiers": [], "name": "getfCashCurveUpdate", "nodeType": "FunctionDefinition", "parameters": {"id": 2326, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2323, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 2398, "src": "4243:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 2322, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "4243:6:11", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 2325, "mutability": "mutable", "name": "checkRateDiff", "nodeType": "VariableDeclaration", "scope": 2398, "src": "4262:18:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2324, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4262:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4242:39:11"}, "returnParameters": {"id": 2333, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2329, "mutability": "mutable", "name": "finalCurves", "nodeType": "VariableDeclaration", "scope": 2398, "src": "4314:46:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings[]"}, "typeName": {"baseType": {"id": 2327, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "4314:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "id": 2328, "nodeType": "ArrayTypeName", "src": "4314:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}}, "visibility": "internal"}, {"constant": false, "id": 2332, "mutability": "mutable", "name": "finalRates", "nodeType": "VariableDeclaration", "scope": 2398, "src": "4370:27:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4370:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2331, "nodeType": "ArrayTypeName", "src": "4370:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "4304:99:11"}, "scope": 2948, "src": "4214:967:11", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 2925, "nodeType": "Block", "src": "5519:8404:11", "statements": [{"expression": {"id": 2426, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2419, "name": "finalCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2414, "src": "5613:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 2423, "name": "fCashCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2401, "src": "5659:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2424, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5659:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2422, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5627:31:11", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct InterestRateCurveSettings memory[] memory)"}, "typeName": {"baseType": {"id": 2420, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "5631:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "id": 2421, "nodeType": "ArrayTypeName", "src": "5631:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}}}, "id": 2425, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5627:51:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "src": "5613:65:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2427, "nodeType": "ExpressionStatement", "src": "5613:65:11"}, {"expression": {"id": 2435, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2428, "name": "finalRates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2417, "src": "5746:10:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 2432, "name": "fCashCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2401, "src": "5773:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5773:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2431, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5759:13:11", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (uint256[] memory)"}, "typeName": {"baseType": {"id": 2429, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5763:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2430, "nodeType": "ArrayTypeName", "src": "5763:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}}, "id": 2434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5759:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "src": "5746:46:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 2436, "nodeType": "ExpressionStatement", "src": "5746:46:11"}, {"body": {"id": 2923, "nodeType": "Block", "src": "5852:8065:11", "statements": [{"assignments": [2449], "declarations": [{"constant": false, "id": 2449, "mutability": "mutable", "name": "irCurve", "nodeType": "VariableDeclaration", "scope": 2923, "src": "5866:40:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings"}, "typeName": {"id": 2448, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "5866:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "visibility": "internal"}], "id": 2453, "initialValue": {"baseExpression": {"id": 2450, "name": "fCashCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2401, "src": "5909:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2452, "indexExpression": {"id": 2451, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "5921:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5909:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5866:57:11"}, {"assignments": [2455], "declarations": [{"constant": false, "id": 2455, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 2923, "src": "5937:30:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 2454, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4236, "src": "5937:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 2459, "initialValue": {"baseExpression": {"id": 2456, "name": "markets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2404, "src": "5970:7:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters memory[] memory"}}, "id": 2458, "indexExpression": {"id": 2457, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "5978:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5970:10:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5937:43:11"}, {"assignments": [2461], "declarations": [{"constant": false, "id": 2461, "mutability": "mutable", "name": "maxRate", "nodeType": "VariableDeclaration", "scope": 2923, "src": "6076:15:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2460, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6076:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2467, "initialValue": {"arguments": [{"expression": {"id": 2464, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "6129:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2465, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxRateUnits", "nodeType": "MemberAccess", "referencedDeclaration": 4370, "src": "6129:20:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "expression": {"id": 2462, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14548, "src": "6094:17:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InterestRateCurve_$14548_$", "typeString": "type(library InterestRateCurve)"}}, "id": 2463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "calculateMaxRate", "nodeType": "MemberAccess", "referencedDeclaration": 12880, "src": "6094:34:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_uint256_$", "typeString": "function (uint8) pure returns (uint256)"}}, "id": 2466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6094:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6076:74:11"}, {"assignments": [2469], "declarations": [{"constant": false, "id": 2469, "mutability": "mutable", "name": "irParams", "nodeType": "VariableDeclaration", "scope": 2923, "src": "6164:38:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters"}, "typeName": {"id": 2468, "name": "InterestRateParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4360, "src": "6164:22:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_storage_ptr", "typeString": "struct InterestRateParameters"}}, "visibility": "internal"}], "id": 2516, "initialValue": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 2473, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "6272:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2474, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4362, "src": "6272:24:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 2472, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6264:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2471, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6264:7:11", "typeDescriptions": {}}}, "id": 2475, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6264:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 2482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2478, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "6308:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RATE_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 6527, "src": "6308:24:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"expression": {"id": 2480, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "6335:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PERCENTAGE_DECIMALS", "nodeType": "MemberAccess", "referencedDeclaration": 6456, "src": "6335:29:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "6308:56:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2477, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6300:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2476, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6300:7:11", "typeDescriptions": {}}}, "id": 2483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6300:65:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6264:101:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 2487, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "6409:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2488, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4364, "src": "6409:24:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 2486, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6401:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2485, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6401:7:11", "typeDescriptions": {}}}, "id": 2489, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6401:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 2496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2492, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "6445:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RATE_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 6527, "src": "6445:24:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"expression": {"id": 2494, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "6472:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2495, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "PERCENTAGE_DECIMALS", "nodeType": "MemberAccess", "referencedDeclaration": 6456, "src": "6472:29:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "6445:56:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2491, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6437:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2490, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6437:7:11", "typeDescriptions": {}}}, "id": 2497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6437:65:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6401:101:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2499, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "6529:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2505, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2500, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "6565:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"id": 2501, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "6575:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2502, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4366, "src": "6575:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "6565:27:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "323536", "id": 2504, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6595:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "6565:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2511, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2509, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2506, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "6627:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"id": 2507, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "6637:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2508, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4368, "src": "6637:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "6627:27:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "323536", "id": 2510, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6657:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "6627:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "30", "id": 2512, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6742:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 2513, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6757:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"hexValue": "30", "id": 2514, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6776:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2470, "name": "InterestRateParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4360, "src": "6205:22:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_InterestRateParameters_$4360_storage_ptr_$", "typeString": "type(struct InterestRateParameters storage pointer)"}}, "id": 2515, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": ["kinkUtilization1", "kinkUtilization2", "maxRate", "kinkRate1", "kinkRate2", "minFeeRate", "maxFeeRate", "feeRatePercent"], "nodeType": "FunctionCall", "src": "6205:587:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "6164:628:11"}, {"assignments": [2518], "declarations": [{"constant": false, "id": 2518, "mutability": "mutable", "name": "utilization", "nodeType": "VariableDeclaration", "scope": 2923, "src": "6905:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6905:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2533, "initialValue": {"arguments": [{"hexValue": "30", "id": 2521, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6982:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"expression": {"id": 2522, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "6985:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2523, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalfCash", "nodeType": "MemberAccess", "referencedDeclaration": 4225, "src": "6985:17:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [{"id": 2530, "name": "assetRateDecimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2408, "src": "7045:17:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 2527, "name": "assetRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2410, "src": "7030:9:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 2524, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "7004:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2525, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalPrimeCash", "nodeType": "MemberAccess", "referencedDeclaration": 4227, "src": "7004:21:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 2526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 18566, "src": "7004:25:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 2528, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7004:36:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 2529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 18596, "src": "7004:40:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 2531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7004:59:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 2519, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14548, "src": "6927:17:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InterestRateCurve_$14548_$", "typeString": "type(library InterestRateCurve)"}}, "id": 2520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getfCashUtilization", "nodeType": "MemberAccess", "referencedDeclaration": 13606, "src": "6927:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$_t_int256_$returns$_t_uint256_$", "typeString": "function (int256,int256,int256) pure returns (uint256)"}}, "id": 2532, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6927:150:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6905:172:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2535, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "7100:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"arguments": [{"expression": {"id": 2538, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "7122:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RATE_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 6527, "src": "7122:24:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2537, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7114:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2536, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7114:7:11", "typeDescriptions": {}}}, "id": 2540, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7114:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7100:47:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572205574696c697a6174696f6e", "id": 2542, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7149:18:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1ffdaad752f9aa94a957806a4979c115036b688bb8653b61e16c07ee7286f67a", "typeString": "literal_string \"Over Utilization\""}, "value": "Over Utilization"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_1ffdaad752f9aa94a957806a4979c115036b688bb8653b61e16c07ee7286f67a", "typeString": "literal_string \"Over Utilization\""}], "id": 2534, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7092:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2543, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7092:76:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2544, "nodeType": "ExpressionStatement", "src": "7092:76:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2546, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "7247:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2547, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "7247:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2548, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7272:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2549, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxRate", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "7272:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7247:41:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572204d61782052617465", "id": 2551, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7290:15:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}, "value": "Over Max Rate"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}], "id": 2545, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7239:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2552, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7239:67:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2553, "nodeType": "ExpressionStatement", "src": "7239:67:11"}, {"assignments": [2555], "declarations": [{"constant": false, "id": 2555, "mutability": "mutable", "name": "kinkMidpoint", "nodeType": "VariableDeclaration", "scope": 2923, "src": "7320:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2554, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7320:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2567, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2566, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2563, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2560, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2556, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7344:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2557, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "7344:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 2558, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7372:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2559, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "7372:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7344:53:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2561, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "7343:55:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 2562, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7401:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "7343:59:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"expression": {"id": 2564, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7421:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2565, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "7421:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7343:103:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7320:126:11"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2568, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "7465:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"expression": {"id": 2569, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7480:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2570, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "7480:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7465:40:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2628, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2626, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "8400:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2627, "name": "kinkMidpoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2555, "src": "8414:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8400:26:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2709, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "10196:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2710, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "10210:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2711, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "10210:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10196:39:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 2884, "nodeType": "Block", "src": "12033:1433:11", "statements": [{"assignments": [2799], "declarations": [{"constant": false, "id": 2799, "mutability": "mutable", "name": "numerator", "nodeType": "VariableDeclaration", "scope": 2884, "src": "12659:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2798, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12659:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2824, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"expression": {"id": 2819, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "12885:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2820, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "12885:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2817, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "12869:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2818, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "12869:15:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2821, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12869:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2814, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "12833:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2815, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxRate", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "12833:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2816, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "12833:35:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12833:79:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"expression": {"id": 2809, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "12780:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2810, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "12780:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 2805, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "12750:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2806, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RATE_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 6527, "src": "12750:24:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2804, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12742:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2803, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12742:7:11", "typeDescriptions": {}}}, "id": 2807, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12742:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2808, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "12742:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2811, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12742:64:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2800, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "12679:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2801, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "12679:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2802, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "12679:62:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2812, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12679:128:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2813, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "12679:153:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2823, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12679:234:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12659:254:11"}, {"assignments": [2826], "declarations": [{"constant": false, "id": 2826, "mutability": "mutable", "name": "denominator", "nodeType": "VariableDeclaration", "scope": 2884, "src": "12931:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2825, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12931:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2835, "initialValue": {"arguments": [{"id": 2833, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "12991:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 2829, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "12961:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2830, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RATE_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 6527, "src": "12961:24:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 2828, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12953:7:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 2827, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12953:7:11", "typeDescriptions": {}}}, "id": 2831, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12953:33:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2832, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "12953:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12953:50:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "12931:72:11"}, {"assignments": [2837], "declarations": [{"constant": false, "id": 2837, "mutability": "mutable", "name": "newKinkRate2", "nodeType": "VariableDeclaration", "scope": 2884, "src": "13021:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2836, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13021:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2842, "initialValue": {"arguments": [{"id": 2840, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2826, "src": "13073:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2838, "name": "numerator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2799, "src": "13044:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2839, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19150, "src": "13044:28:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2841, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13044:41:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13021:64:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2847, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2844, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2837, "src": "13111:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2845, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "13126:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2846, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxRate", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "13126:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13111:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572204d61782052617465", "id": 2848, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13144:15:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}, "value": "Over Max Rate"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}], "id": 2843, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13103:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2849, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13103:57:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2850, "nodeType": "ExpressionStatement", "src": "13103:57:11"}, {"condition": {"id": 2851, "name": "checkFinalRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2406, "src": "13183:14:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2864, "nodeType": "IfStatement", "src": "13179:143:11", "trueBody": {"id": 2863, "nodeType": "Block", "src": "13199:123:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2854, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2837, "src": "13238:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 2855, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "13252:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2856, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "13252:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2853, "name": "_absDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2947, "src": "13229:8:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2857, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13229:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2858, "name": "MAX_KINK_DIFF", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2053, "src": "13274:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13229:58:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f76657220446966662033", "id": 2860, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13289:13:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0eb90782ce45056151ecebd6faeac30c519750f85e13db9bccb8287c39aa0c94", "typeString": "literal_string \"Over Diff 3\""}, "value": "Over Diff 3"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0eb90782ce45056151ecebd6faeac30c519750f85e13db9bccb8287c39aa0c94", "typeString": "literal_string \"Over Diff 3\""}], "id": 2852, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13221:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13221:82:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2862, "nodeType": "ExpressionStatement", "src": "13221:82:11"}]}}, {"expression": {"id": 2869, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2865, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "13340:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2867, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "13340:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2868, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2837, "src": "13361:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13340:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2870, "nodeType": "ExpressionStatement", "src": "13340:33:11"}, {"expression": {"id": 2882, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2871, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "13391:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2873, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4368, "src": "13391:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2878, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2876, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2874, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2837, "src": "13412:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "323536", "id": 2875, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13427:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "13412:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 2877, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "13433:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13412:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2879, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "13411:30:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint8", "nodeType": "MemberAccess", "referencedDeclaration": 19233, "src": "13411:38:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint8)"}}, "id": 2881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13411:40:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "13391:60:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 2883, "nodeType": "ExpressionStatement", "src": "13391:60:11"}]}, "id": 2885, "nodeType": "IfStatement", "src": "10192:3274:11", "trueBody": {"id": 2797, "nodeType": "Block", "src": "10237:1790:11", "statements": [{"assignments": [2714], "declarations": [{"constant": false, "id": 2714, "mutability": "mutable", "name": "numerator", "nodeType": "VariableDeclaration", "scope": 2797, "src": "11105:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2713, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11105:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2741, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"expression": {"id": 2736, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11351:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2737, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "11351:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2734, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "11335:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2735, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "11335:15:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2738, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11335:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2731, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11297:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2732, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "11297:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2733, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "11297:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2739, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11297:81:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"expression": {"id": 2726, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11244:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2727, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "11244:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2723, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11214:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2724, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "11214:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2725, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "11214:29:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2728, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11214:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"components": [{"arguments": [{"expression": {"id": 2718, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11153:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2719, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "11153:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2715, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "11126:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2716, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "11126:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "11126:26:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11126:46:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2721, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11125:48:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2722, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "11125:88:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2729, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11125:146:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2730, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 19032, "src": "11125:171:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2740, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11125:254:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11105:274:11"}, {"assignments": [2743], "declarations": [{"constant": false, "id": 2743, "mutability": "mutable", "name": "denominator", "nodeType": "VariableDeclaration", "scope": 2797, "src": "11397:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2742, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11397:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2748, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2747, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2744, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "11419:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 2745, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11433:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2746, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "11433:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11419:39:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11397:61:11"}, {"assignments": [2750], "declarations": [{"constant": false, "id": 2750, "mutability": "mutable", "name": "newKinkRate2", "nodeType": "VariableDeclaration", "scope": 2797, "src": "11505:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2749, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11505:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2755, "initialValue": {"arguments": [{"id": 2753, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2743, "src": "11557:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2751, "name": "numerator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2714, "src": "11528:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2752, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19150, "src": "11528:28:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2754, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11528:41:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "11505:64:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2760, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2757, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "11595:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2758, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11610:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2759, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxRate", "nodeType": "MemberAccess", "referencedDeclaration": 4353, "src": "11610:16:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11595:31:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572204d61782052617465", "id": 2761, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11628:15:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}, "value": "Over Max Rate"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_7a5a3b2790670d7edfccd90aba855c9ff67cac3a3de532da984216a078fe4918", "typeString": "literal_string \"Over Max Rate\""}], "id": 2756, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11587:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11587:57:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2763, "nodeType": "ExpressionStatement", "src": "11587:57:11"}, {"condition": {"id": 2764, "name": "checkFinalRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2406, "src": "11667:14:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2777, "nodeType": "IfStatement", "src": "11663:143:11", "trueBody": {"id": 2776, "nodeType": "Block", "src": "11683:123:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2772, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2767, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "11722:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 2768, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11736:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2769, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "11736:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2766, "name": "_absDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2947, "src": "11713:8:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11713:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2771, "name": "MAX_KINK_DIFF", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2053, "src": "11758:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11713:58:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f76657220446966662032", "id": 2773, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11773:13:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8b1a802d06183e64befdca831ed86641b60666f5f7c70c81d66eccf3b4ec02e", "typeString": "literal_string \"Over Diff 2\""}, "value": "Over Diff 2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8b1a802d06183e64befdca831ed86641b60666f5f7c70c81d66eccf3b4ec02e", "typeString": "literal_string \"Over Diff 2\""}], "id": 2765, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11705:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2774, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11705:82:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2775, "nodeType": "ExpressionStatement", "src": "11705:82:11"}]}}, {"expression": {"id": 2782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2778, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "11824:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2780, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "11824:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2781, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "11845:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11824:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2783, "nodeType": "ExpressionStatement", "src": "11824:33:11"}, {"expression": {"id": 2795, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2784, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "11952:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2786, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4368, "src": "11952:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2791, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2789, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2787, "name": "newKinkRate2", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2750, "src": "11973:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "323536", "id": 2788, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11988:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "11973:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 2790, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "11994:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11973:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2792, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "11972:30:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2793, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint8", "nodeType": "MemberAccess", "referencedDeclaration": 19233, "src": "11972:38:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint8)"}}, "id": 2794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11972:40:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "11952:60:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 2796, "nodeType": "ExpressionStatement", "src": "11952:60:11"}]}}, "id": 2886, "nodeType": "IfStatement", "src": "8396:5070:11", "trueBody": {"id": 2708, "nodeType": "Block", "src": "8428:1758:11", "statements": [{"assignments": [2630], "declarations": [{"constant": false, "id": 2630, "mutability": "mutable", "name": "numerator", "nodeType": "VariableDeclaration", "scope": 2708, "src": "9285:17:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2629, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9285:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2652, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"expression": {"id": 2647, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9505:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2648, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "9505:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2645, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "9489:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "9489:15:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9489:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2642, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9451:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2643, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "9451:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "9451:37:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2650, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9451:81:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [{"expression": {"id": 2637, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9398:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2638, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "9398:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2634, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9368:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2635, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "9368:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2636, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "9368:29:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2639, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9368:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2631, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "9305:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2632, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "9305:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2633, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mulInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19172, "src": "9305:62:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2640, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9305:120:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 19053, "src": "9305:145:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9305:228:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9285:248:11"}, {"assignments": [2654], "declarations": [{"constant": false, "id": 2654, "mutability": "mutable", "name": "denominator", "nodeType": "VariableDeclaration", "scope": 2708, "src": "9551:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2653, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9551:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2659, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2655, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9573:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2656, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization2", "nodeType": "MemberAccess", "referencedDeclaration": 4347, "src": "9573:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2657, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "9601:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9573:39:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9551:61:11"}, {"assignments": [2661], "declarations": [{"constant": false, "id": 2661, "mutability": "mutable", "name": "newKinkRate1", "nodeType": "VariableDeclaration", "scope": 2708, "src": "9659:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2660, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9659:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2666, "initialValue": {"arguments": [{"id": 2664, "name": "denominator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2654, "src": "9711:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2662, "name": "numerator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2630, "src": "9682:9:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2663, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 19150, "src": "9682:28:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2665, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9682:41:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9659:64:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2668, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2661, "src": "9749:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2669, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9764:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2670, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "9764:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9749:33:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572204b696e6b20526174652032", "id": 2672, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9784:18:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_78abd8da842c565e054db6004ad7cef5492210656553e812d18bfef2d8f3b19c", "typeString": "literal_string \"Over Kink Rate 2\""}, "value": "Over Kink Rate 2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_78abd8da842c565e054db6004ad7cef5492210656553e812d18bfef2d8f3b19c", "typeString": "literal_string \"Over Kink Rate 2\""}], "id": 2667, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9741:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2673, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9741:62:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2674, "nodeType": "ExpressionStatement", "src": "9741:62:11"}, {"condition": {"id": 2675, "name": "checkFinalRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2406, "src": "9826:14:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2688, "nodeType": "IfStatement", "src": "9822:143:11", "trueBody": {"id": 2687, "nodeType": "Block", "src": "9842:123:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2678, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2661, "src": "9881:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 2679, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9895:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2680, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "9895:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2677, "name": "_absDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2947, "src": "9872:8:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2681, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9872:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2682, "name": "MAX_KINK_DIFF", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2053, "src": "9917:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9872:58:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f76657220446966662032", "id": 2684, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9932:13:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8b1a802d06183e64befdca831ed86641b60666f5f7c70c81d66eccf3b4ec02e", "typeString": "literal_string \"Over Diff 2\""}, "value": "Over Diff 2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8b1a802d06183e64befdca831ed86641b60666f5f7c70c81d66eccf3b4ec02e", "typeString": "literal_string \"Over Diff 2\""}], "id": 2676, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9864:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2685, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9864:82:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2686, "nodeType": "ExpressionStatement", "src": "9864:82:11"}]}}, {"expression": {"id": 2693, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2689, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "9983:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2691, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "9983:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2692, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2661, "src": "10004:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9983:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2694, "nodeType": "ExpressionStatement", "src": "9983:33:11"}, {"expression": {"id": 2706, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2695, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "10111:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2697, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4366, "src": "10111:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2702, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2700, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2698, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2661, "src": "10132:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "323536", "id": 2699, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10147:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "10132:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 2701, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "10153:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10132:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2703, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "10131:30:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2704, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint8", "nodeType": "MemberAccess", "referencedDeclaration": 19233, "src": "10131:38:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint8)"}}, "id": 2705, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10131:40:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "10111:60:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 2707, "nodeType": "ExpressionStatement", "src": "10111:60:11"}]}}, "id": 2887, "nodeType": "IfStatement", "src": "7461:6005:11", "trueBody": {"id": 2625, "nodeType": "Block", "src": "7507:883:11", "statements": [{"assignments": [2573], "declarations": [{"constant": false, "id": 2573, "mutability": "mutable", "name": "newKinkRate1", "nodeType": "VariableDeclaration", "scope": 2625, "src": "7683:20:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2572, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7683:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2583, "initialValue": {"arguments": [{"id": 2581, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "7806:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 2577, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7754:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2578, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkUtilization1", "nodeType": "MemberAccess", "referencedDeclaration": 4345, "src": "7754:25:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 2574, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "7706:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2575, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "7706:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 19086, "src": "7706:47:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2579, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7706:74:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 19107, "src": "7706:99:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7706:112:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7683:135:11"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2588, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2585, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2573, "src": "7844:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2586, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "7859:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2587, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate2", "nodeType": "MemberAccess", "referencedDeclaration": 4351, "src": "7859:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7844:33:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f766572204b696e6b20526174652032", "id": 2589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7879:18:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_78abd8da842c565e054db6004ad7cef5492210656553e812d18bfef2d8f3b19c", "typeString": "literal_string \"Over Kink Rate 2\""}, "value": "Over Kink Rate 2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_78abd8da842c565e054db6004ad7cef5492210656553e812d18bfef2d8f3b19c", "typeString": "literal_string \"Over Kink Rate 2\""}], "id": 2584, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7836:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2590, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7836:62:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2591, "nodeType": "ExpressionStatement", "src": "7836:62:11"}, {"condition": {"id": 2592, "name": "checkFinalRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2406, "src": "8030:14:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2605, "nodeType": "IfStatement", "src": "8026:143:11", "trueBody": {"id": 2604, "nodeType": "Block", "src": "8046:123:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2600, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2595, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2573, "src": "8085:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 2596, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "8099:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2597, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "8099:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2594, "name": "_absDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2947, "src": "8076:8:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2598, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8076:42:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2599, "name": "MAX_KINK_DIFF", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2053, "src": "8121:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8076:58:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f76657220446966662031", "id": 2601, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8136:13:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fad97ffe47bb68223c4b821708a3bd7c846522608d95e57c1775aaf658b4dcdc", "typeString": "literal_string \"Over Diff 1\""}, "value": "Over Diff 1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fad97ffe47bb68223c4b821708a3bd7c846522608d95e57c1775aaf658b4dcdc", "typeString": "literal_string \"Over Diff 1\""}], "id": 2593, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8068:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8068:82:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2603, "nodeType": "ExpressionStatement", "src": "8068:82:11"}]}}, {"expression": {"id": 2610, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2606, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "8187:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, "id": 2608, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4349, "src": "8187:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2609, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2573, "src": "8208:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8187:33:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2611, "nodeType": "ExpressionStatement", "src": "8187:33:11"}, {"expression": {"id": 2623, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 2612, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "8315:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2614, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "kinkRate1", "nodeType": "MemberAccess", "referencedDeclaration": 4366, "src": "8315:17:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2619, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2615, "name": "newKinkRate1", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2573, "src": "8336:12:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "323536", "id": 2616, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8351:3:11", "typeDescriptions": {"typeIdentifier": "t_rational_256_by_1", "typeString": "int_const 256"}, "value": "256"}, "src": "8336:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 2618, "name": "maxRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2461, "src": "8357:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8336:28:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 2620, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "8335:30:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2621, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint8", "nodeType": "MemberAccess", "referencedDeclaration": 19233, "src": "8335:38:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint8)"}}, "id": 2622, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8335:40:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "8315:60:11", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 2624, "nodeType": "ExpressionStatement", "src": "8315:60:11"}]}}, {"assignments": [2889], "declarations": [{"constant": false, "id": 2889, "mutability": "mutable", "name": "newInterestRate", "nodeType": "VariableDeclaration", "scope": 2923, "src": "13480:23:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2888, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13480:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2895, "initialValue": {"arguments": [{"id": 2892, "name": "irParams", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2469, "src": "13540:8:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}}, {"id": 2893, "name": "utilization", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2518, "src": "13550:11:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_InterestRateParameters_$4360_memory_ptr", "typeString": "struct InterestRateParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2890, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14548, "src": "13506:17:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InterestRateCurve_$14548_$", "typeString": "type(library InterestRateCurve)"}}, "id": 2891, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getInterestRate", "nodeType": "MemberAccess", "referencedDeclaration": 13714, "src": "13506:33:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_InterestRateParameters_$4360_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (struct InterestRateParameters memory,uint256) pure returns (uint256)"}}, "id": 2894, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13506:56:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "13480:82:11"}, {"condition": {"id": 2896, "name": "checkFinalRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2406, "src": "13580:14:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2910, "nodeType": "IfStatement", "src": "13576:248:11", "trueBody": {"id": 2909, "nodeType": "Block", "src": "13596:228:11", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2905, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 2899, "name": "newInterestRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2889, "src": "13725:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 2900, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2455, "src": "13742:6:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 2901, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastImpliedRate", "nodeType": "MemberAccess", "referencedDeclaration": 4231, "src": "13742:22:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2898, "name": "_absDiff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2947, "src": "13716:8:11", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 2902, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13716:49:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2903, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 6679, "src": "13768:9:11", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$6679_$", "typeString": "type(library Constants)"}}, "id": 2904, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "BASIS_POINT", "nodeType": "MemberAccess", "referencedDeclaration": 6541, "src": "13768:21:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13716:73:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f7665722046696e616c2044696666", "id": 2906, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13791:17:11", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2201459c1599192aedd743002ab7eeeff0917db4d2941e93a1d1405e46b355ca", "typeString": "literal_string \"Over Final Diff\""}, "value": "Over Final Diff"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_2201459c1599192aedd743002ab7eeeff0917db4d2941e93a1d1405e46b355ca", "typeString": "literal_string \"Over Final Diff\""}], "id": 2897, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13708:7:11", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2907, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13708:101:11", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2908, "nodeType": "ExpressionStatement", "src": "13708:101:11"}]}}, {"expression": {"id": 2915, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2911, "name": "finalCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2414, "src": "13837:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2913, "indexExpression": {"id": 2912, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "13849:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "13837:14:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2914, "name": "irCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2449, "src": "13854:7:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "src": "13837:24:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_memory_ptr", "typeString": "struct InterestRateCurveSettings memory"}}, "id": 2916, "nodeType": "ExpressionStatement", "src": "13837:24:11"}, {"expression": {"id": 2921, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2917, "name": "finalRates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2417, "src": "13875:10:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[] memory"}}, "id": 2919, "indexExpression": {"id": 2918, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "13886:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "13875:13:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2920, "name": "newInterestRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2889, "src": "13891:15:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "13875:31:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2922, "nodeType": "ExpressionStatement", "src": "13875:31:11"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2441, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "5823:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 2442, "name": "fCashCurves", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2401, "src": "5827:11:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings memory[] memory"}}, "id": 2443, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5827:18:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5823:22:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2924, "initializationExpression": {"assignments": [2438], "declarations": [{"constant": false, "id": 2438, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 2924, "src": "5808:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2437, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5808:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2440, "initialValue": {"hexValue": "30", "id": 2439, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5820:1:11", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5808:13:11"}, "loopExpression": {"expression": {"id": 2446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5847:3:11", "subExpression": {"id": 2445, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2438, "src": "5847:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2447, "nodeType": "ExpressionStatement", "src": "5847:3:11"}, "nodeType": "ForStatement", "src": "5803:8114:11"}]}, "id": 2926, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateInterestRateCurves", "nodeType": "FunctionDefinition", "parameters": {"id": 2411, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2401, "mutability": "mutable", "name": "fCashCurves", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5234:46:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings[]"}, "typeName": {"baseType": {"id": 2399, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "5234:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "id": 2400, "nodeType": "ArrayTypeName", "src": "5234:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}}, "visibility": "internal"}, {"constant": false, "id": 2404, "mutability": "mutable", "name": "markets", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5290:33:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_memory_ptr_$dyn_memory_ptr", "typeString": "struct MarketParameters[]"}, "typeName": {"baseType": {"id": 2402, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4236, "src": "5290:16:11", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$4236_storage_ptr", "typeString": "struct MarketParameters"}}, "id": 2403, "nodeType": "ArrayTypeName", "src": "5290:18:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_MarketParameters_$4236_storage_$dyn_storage_ptr", "typeString": "struct MarketParameters[]"}}, "visibility": "internal"}, {"constant": false, "id": 2406, "mutability": "mutable", "name": "checkFinalRate", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5333:19:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2405, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5333:4:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 2408, "mutability": "mutable", "name": "assetRateDecimals", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5362:24:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2407, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5362:6:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 2410, "mutability": "mutable", "name": "assetRate", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5396:16:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 2409, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5396:6:11", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "5224:194:11"}, "returnParameters": {"id": 2418, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2414, "mutability": "mutable", "name": "finalCurves", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5442:46:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_memory_ptr_$dyn_memory_ptr", "typeString": "struct InterestRateCurveSettings[]"}, "typeName": {"baseType": {"id": 2412, "name": "InterestRateCurveSettings", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 4377, "src": "5442:25:11", "typeDescriptions": {"typeIdentifier": "t_struct$_InterestRateCurveSettings_$4377_storage_ptr", "typeString": "struct InterestRateCurveSettings"}}, "id": 2413, "nodeType": "ArrayTypeName", "src": "5442:27:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_InterestRateCurveSettings_$4377_storage_$dyn_storage_ptr", "typeString": "struct InterestRateCurveSettings[]"}}, "visibility": "internal"}, {"constant": false, "id": 2417, "mutability": "mutable", "name": "finalRates", "nodeType": "VariableDeclaration", "scope": 2926, "src": "5490:27:11", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr", "typeString": "uint256[]"}, "typeName": {"baseType": {"id": 2415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5490:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2416, "nodeType": "ArrayTypeName", "src": "5490:9:11", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr", "typeString": "uint256[]"}}, "visibility": "internal"}], "src": "5441:77:11"}, "scope": 2948, "src": "5187:8736:11", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 2946, "nodeType": "Block", "src": "14000:45:11", "statements": [{"expression": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2937, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2935, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2928, "src": "14017:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 2936, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2930, "src": "14021:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14017:5:11", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2943, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2941, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2928, "src": "14033:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2942, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2930, "src": "14037:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14033:5:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2944, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "14017:21:11", "trueExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2940, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2938, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2930, "src": "14025:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 2939, "name": "a", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2928, "src": "14029:1:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14025:5:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 2934, "id": 2945, "nodeType": "Return", "src": "14010:28:11"}]}, "id": 2947, "implemented": true, "kind": "function", "modifiers": [], "name": "_absDiff", "nodeType": "FunctionDefinition", "parameters": {"id": 2931, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2928, "mutability": "mutable", "name": "a", "nodeType": "VariableDeclaration", "scope": 2947, "src": "13947:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2927, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13947:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2930, "mutability": "mutable", "name": "b", "nodeType": "VariableDeclaration", "scope": 2947, "src": "13958:9:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2929, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13958:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13946:22:11"}, "returnParameters": {"id": 2934, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2933, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 2947, "src": "13991:7:11", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2932, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13991:7:11", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "13990:9:11"}, "scope": 2948, "src": "13929:116:11", "stateMutability": "pure", "virtual": false, "visibility": "private"}], "scope": 2949, "src": "1130:12917:11"}], "src": "41:14006:11"}, "bytecode": "", "bytecodeSha1": "eabee015390c05fb0da525602f6c7bb973871697", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "MigrationSettings", "coverageMap": {"branches": {"1": {}, "11": {"MigrationSettings._absDiff": {"103": [14017, 14022, true]}, "MigrationSettings._calculateInterestRateCurves": {"84": [7100, 7147, true], "85": [7247, 7288, true], "86": [7465, 7505, false], "87": [7844, 7877, true], "88": [8030, 8044, false], "89": [8076, 8134, true], "90": [8400, 8426, false], "91": [9749, 9782, true], "92": [9826, 9840, false], "93": [9872, 9930, true], "94": [10196, 10235, false], "95": [11595, 11626, true], "96": [11667, 11681, false], "97": [11713, 11771, true], "98": [13111, 13142, true], "99": [13183, 13197, false], "100": [13229, 13287, true], "101": [13580, 13594, false], "102": [13716, 13789, true]}, "MigrationSettings.getfCashCurveUpdate": {"81": [4848, 4884, true]}, "MigrationSettings.setMigrationSettings": {"82": [2121, 2151, true]}, "MigrationSettings.updateTotalfCashDebt": {"83": [3726, 3756, true]}}, "12": {}, "13": {}, "14": {}, "15": {}, "18": {}, "19": {}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "29": {"InterestRateCurve.calculateMaxRate": {"104": [3274, 3317, true]}, "InterestRateCurve.getInterestRate": {"107": [12812, 12832, true], "108": [13163, 13211, true], "109": [13227, 13267, false], "110": [13483, 13523, false]}, "InterestRateCurve.getfCashUtilization": {"105": [12202, 12217, true], "106": [12236, 12260, true]}}, "30": {}, "32": {}, "33": {}, "34": {}, "35": {}, "37": {}, "39": {}, "40": {}, "41": {}, "42": {}, "43": {"SafeInt256.add": {"118": [1524, 1552, true]}, "SafeInt256.div": {"116": [1121, 1128, false], "117": [1132, 1148, true]}, "SafeInt256.mul": {"111": [510, 517, false], "112": [528, 534, true], "113": [538, 548, true], "114": [573, 579, true], "115": [583, 593, true]}, "SafeInt256.sub": {"121": [1398, 1426, true]}, "SafeInt256.subNoNeg": {"119": [1898, 1904, true]}, "SafeInt256.toUint": {"120": [2486, 2492, true]}}, "44": {"SafeUint256.add": {"127": [481, 487, true]}, "SafeUint256.div": {"124": [1879, 1884, true]}, "SafeUint256.mul": {"122": [1233, 1239, false], "123": [1294, 1304, true]}, "SafeUint256.sub": {"126": [869, 875, true]}, "SafeUint256.toUint8": {"125": [3203, 3223, true]}}, "48": {}, "52": {}, "53": {}, "55": {}, "56": {}, "57": {}, "58": {}, "59": {}, "60": {}, "62": {}, "64": {}, "65": {}, "66": {}, "67": {}, "68": {}, "69": {}, "7": {}, "70": {}, "71": {}, "72": {}, "73": {}}, "statements": {"1": {}, "11": {"MigrationSettings._absDiff": {"62": [14010, 14038]}, "MigrationSettings._calculateInterestRateCurves": {"24": [5613, 5678], "25": [5746, 5792], "26": [7092, 7168], "27": [7239, 7306], "28": [7836, 7898], "29": [8068, 8150], "30": [8187, 8220], "31": [8315, 8375], "32": [9741, 9803], "33": [9864, 9946], "34": [9983, 10016], "35": [10111, 10171], "36": [11587, 11644], "37": [11705, 11787], "38": [11824, 11857], "39": [11952, 12012], "40": [13103, 13160], "41": [13221, 13303], "42": [13340, 13373], "43": [13391, 13451], "44": [13708, 13809], "45": [13837, 13861], "46": [13875, 13906], "47": [5847, 5850]}, "MigrationSettings.getCurrencySettings": {"23": [1832, 1867]}, "MigrationSettings.getfCashCurveUpdate": {"0": [5041, 5174]}, "MigrationSettings.setMigrationSettings": {"1": [2113, 2152], "2": [2245, 2302], "3": [2312, 2371], "4": [2381, 2444], "5": [2454, 2511], "6": [2521, 2578], "7": [2588, 2649], "8": [2659, 2736], "9": [2891, 2925], "10": [2885, 2888], "11": [3004, 3062], "12": [2985, 2988], "13": [3115, 3166], "14": [3218, 3251], "15": [3212, 3215], "16": [3329, 3385], "17": [3310, 3313]}, "MigrationSettings.updateTotalfCashDebt": {"18": [3718, 3757], "19": [3993, 4026], "20": [3987, 3990], "21": [4095, 4142], "22": [4076, 4079]}}, "12": {}, "13": {}, "14": {}, "15": {}, "18": {}, "19": {}, "20": {}, "21": {}, "22": {}, "23": {}, "24": {}, "25": {}, "26": {}, "27": {}, "29": {"InterestRateCurve.calculateMaxRate": {"48": [3267, 3539]}, "InterestRateCurve.getInterestRate": {"70": [12804, 12833], "71": [13155, 13212], "72": [13341, 13462], "73": [13764, 14096], "74": [14341, 14679]}, "InterestRateCurve.getfCashUtilization": {"54": [12194, 12218], "55": [12228, 12261], "56": [12271, 12411]}}, "30": {}, "32": {}, "33": {}, "34": {}, "35": {}, "37": {}, "39": {}, "40": {}, "41": {}, "42": {}, "43": {"SafeInt256.add": {"75": [1516, 1553]}, "SafeInt256.div": {"52": [1111, 1150], "53": [1258, 1267]}, "SafeInt256.divInRatePrecision": {"78": [2129, 2176]}, "SafeInt256.mul": {"49": [487, 496], "50": [519, 549], "51": [564, 594]}, "SafeInt256.sub": {"80": [1390, 1427]}, "SafeInt256.subNoNeg": {"76": [1867, 1880], "77": [1890, 1905]}, "SafeInt256.toUint": {"79": [2478, 2493]}}, "44": {"SafeUint256.add": {"69": [473, 488]}, "SafeUint256.div": {"60": [1871, 1885], "61": [1895, 1907]}, "SafeUint256.divInRatePrecision": {"68": [2585, 2641]}, "SafeUint256.mul": {"57": [1241, 1249], "58": [1286, 1305], "59": [1315, 1323]}, "SafeUint256.mulInRatePrecision": {"67": [2746, 2802]}, "SafeUint256.sub": {"65": [861, 876], "66": [886, 898]}, "SafeUint256.toUint8": {"63": [3195, 3224], "64": [3234, 3249]}}, "48": {}, "52": {}, "53": {}, "55": {}, "56": {}, "57": {}, "58": {}, "59": {}, "60": {}, "62": {}, "64": {}, "65": {}, "66": {}, "67": {}, "68": {}, "69": {}, "7": {}, "70": {}, "71": {}, "72": {}, "73": {}}}, "dependencies": ["ABDKMath64x64", "AccountContextHandler", "AggregatorInterface", "AggregatorV2V3Interface", "AggregatorV3Interface", "AssetHandler", "BalanceHandler", "Bitmap", "CErc20Interface", "CTokenInterface", "CashGroup", "CompoundHandler", "Constants", "DateTime", "Deployments", "Emitter", "FloatingPoint", "GenericToken", "IBeacon", "IEIP20NonStandard", "IERC20", "IPrimeCashHoldingsOracle", "IRewarder", "ITransferEmitter", "IUpgradeableBeacon", "IVaultAccountAction", "IVaultAccountHealth", "IVaultAction", "IVaultController", "IVaultLiquidationAction", "Incentives", "InterestRateCurve", "LibStorage", "Market", "MigrateIncentives", "NotionalCalculations", "NotionalGovernance", "NotionalProxy", "NotionalTreasury", "NotionalViews", "PortfolioHandler", "PrimeCashExchangeRate", "PrimeRateLib", "SafeInt256", "OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/SafeMath", "SafeUint256", "TokenHandler", "WETH9", "nERC1155Interface", "nTokenERC20", "nTokenHandler", "nTokenSupply"], "deployedBytecode": "", "deployedSourceMap": "1130:12917:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4214:967;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1946:1456;;;;;;:::i;:::-;;:::i;:::-;;1277:41;;;:::i;:::-;;;;;;;:::i;1232:39::-;;;:::i;3538:621::-;;;;;;:::i;:::-;;:::i;1725:149::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4214:967::-;4314:46;4370:27;4414:32;4449:16;:28;4466:10;4449:28;;;;;;;;;;;;;4414:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4414:63:11;-1:-1:-1;;;;;4414:63:11;-1:-1:-1;;;;;4414:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4414:63:11;;;-1:-1:-1;;4414:63:11;;;;;;;;;;;;;;;;-1:-1:-1;;4414:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4414:63:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;4414:63:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4414:63:11;;-1:-1:-1;;;;;4414:63:11;;;;;;;;;;;;;;;;-1:-1:-1;;;4414:63:11;;-1:-1:-1;;4525:35:11;;-1:-1:-1;;;4525:35:11;;4414:63;;-1:-1:-1;4495:26:11;;-1:-1:-1;;;;;4525:8:11;:23;;;;:35;;4549:10;;4525:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4487:73;;;4570:33;4606:8;-1:-1:-1;;;;;4606:25:11;;4632:10;4606:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4606:37:11;;;;;;;;;;;;:::i;:::-;4791:26;;;;4856:13;;4570:73;;-1:-1:-1;4779:39:11;4786:2;:31;;;4779:39;;;;4745:24;;-1:-1:-1;;;;;4848:36:11;:182;;5013:17;4848:182;;;4900:2;:13;;;-1:-1:-1;;;;;4900:33:11;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4829:201;;5048:126;5090:8;:20;;;5112:7;5121:13;5136:17;5155:9;5048:28;:126::i;:::-;5041:133;;;;;;;;;4214:967;;;;;:::o;1946:1456::-;2121:10;-1:-1:-1;;;;;2135:16:11;2121:30;;2113:39;;;;;;2163:41;2207:16;:28;2224:10;2207:28;;;;;;;;;;;2163:72;;2279:8;:23;;;2245:16;:31;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2347:8;:24;;;2312:16;:32;;;:59;;;;;-1:-1:-1;;;;;2312:59:11;;;;;-1:-1:-1;;;;;2312:59:11;;;;;;2418:8;:26;;;2381:16;:34;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:8;:23;;;2454:16;:31;;;:57;;;;;;;;;;;;;;;;;;2555:8;:23;;;2521:16;:31;;:57;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2624:25:11;;;;2588:61;;;;:33;;;;:61;;;;;;:::i;:::-;-1:-1:-1;2703:33:11;;;;2659:41;;;:77;;-1:-1:-1;;2659:77:11;;;;;;;;;;;2804:28;;;:35;-1:-1:-1;2849:76:11;2869:14;2865:1;:18;2849:76;;;2891:16;:28;;:34;;;;;;;;;;;;;;;;-1:-1:-1;;2891:34:11;;;;;-1:-1:-1;;2891:34:11;;;;;;;2885:3;2849:76;;;;2941:9;2936:137;2956:8;:20;;;:27;2952:1;:31;2936:137;;;3004:16;:28;;3038:8;:20;;;3059:1;3038:23;;;;;;;;;;;;;;3004:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2985:3;;;;;;;2936:137;;;-1:-1:-1;;3132:27:11;;;:34;3181:9;3176:75;3196:14;3192:1;:18;3176:75;;;3218:16;:27;;:33;;;;;;;;;;;;;;;;-1:-1:-1;;3218:33:11;;;;;-1:-1:-1;;;;;;3218:33:11;;;;;;;3212:3;3176:75;;;;3267:9;3262:134;3282:8;:19;;;:26;3278:1;:30;3262:134;;;3329:16;:27;;3362:8;:19;;;3382:1;3362:22;;;;;;;;;;;;;;;;;;;3329:56;;;;;;;;-1:-1:-1;3329:56:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3329:56:11;-1:-1:-1;;;3329:56:11;-1:-1:-1;;3329:56:11;;;;-1:-1:-1;;3329:56:11;;;;;;;;;;;3310:3;3262:134;;;;1946:1456;;;;:::o;1277:41::-;;;:::o;1232:39::-;;;:::o;3538:621::-;3726:10;-1:-1:-1;;;;;3740:16:11;3726:30;;3718:39;;;;;;3767:41;3811:28;;;;;;;;;;3907:27;;;:34;3811:28;;3951:75;3971:14;3967:1;:18;3951:75;;;3993:16;:27;;:33;;;;;;;;;;;;;;;;-1:-1:-1;;3993:33:11;;;;;-1:-1:-1;;;;;;3993:33:11;;;;;;;3987:3;3951:75;;;;4042:9;4037:116;4057:10;:17;4053:1;:21;4037:116;;;4095:16;:27;;4128:10;4139:1;4128:13;;;;;;;;;;;;;;;;;;;4095:47;;;;;;;;-1:-1:-1;4095:47:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4095:47:11;-1:-1:-1;;;4095:47:11;-1:-1:-1;;4095:47:11;;;;-1:-1:-1;;4095:47:11;;;;;;;;;;;4076:3;4037:116;;1725:149;1797:23;;:::i;:::-;1839:16;:28;1856:10;1839:28;;;;;;;;;;;1832:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1832:35:11;-1:-1:-1;;;;;1832:35:11;-1:-1:-1;;;;;1832:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1832:35:11;;;-1:-1:-1;;1832:35:11;;;;;;;;;;;;;;;;-1:-1:-1;;1832:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1832:35:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;1832:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1832:35:11;;-1:-1:-1;;;;;1832:35:11;;;;;;;;;;;;;;;;;;;;;;;;;;1725:149;;;;:::o;5187:8736::-;5442:46;5490:27;5659:11;:18;5627:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5613:65;;5773:11;:18;5759:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5759:33:11;;5746:46;;5808:9;5803:8114;5827:11;:18;5823:1;:22;5803:8114;;;5866:40;5909:11;5921:1;5909:14;;;;;;;;;;;;;;5866:57;;5937:30;5970:7;5978:1;5970:10;;;;;;;;;;;;;;5937:43;;6076:15;6094:56;6129:7;:20;;;6094:34;:56::i;:::-;6076:74;;6164:38;6205:587;;;;;;;;2186:3:13;4071;6308:56:11;;;;;6272:24;;6264:33;;6308:56;;;6264:101;6205:587;;;;2186:3:13;4071;6445:56:11;6409:7;:24;;;6401:33;;:101;6205:587;;;;6595:3;6575:7;:17;;;6565:27;;:7;:27;:33;;;;;;6205:587;;;;6657:3;6637:7;:17;;;6627:27;;:7;:27;:33;;;;;;6205:587;;;;6529:7;6205:587;;;;6742:1;6205:587;;;;6757:1;6205:587;;;;6776:1;6205:587;;;6164:628;;6905:19;6927:150;6982:1;6985:6;:17;;;7004:59;7045:17;7004:36;7030:9;7004:6;:21;;;:25;;:36;;;;:::i;:::-;:40;;:59::i;:::-;6927:37;:150::i;:::-;6905:172;;4071:3:13;7100:11:11;:47;7092:76;;;;-1:-1:-1;;;7092:76:11;;;;;;;:::i;:::-;;;;;;;;;7272:8;:16;;;7247:6;:22;;;:41;7239:67;;;;-1:-1:-1;;;7239:67:11;;;;;;;:::i;:::-;7421:25;;7344;;;;7401:1;7344:53;;;;7343:59;:103;;;7465:40;;7461:6005;;7683:20;7706:112;7806:11;7706:74;7754:8;:25;;;7706:6;:22;;;:47;;:74;;;;:::i;:::-;:99;;:112::i;:::-;7683:135;;7859:8;:18;;;7844:12;:33;7836:62;;;;-1:-1:-1;;;7836:62:11;;;;;;;:::i;:::-;8030:14;8026:143;;;1462:11;1448:3;:26;8076:42;8085:12;8099:8;:18;;;8076:8;:42::i;:::-;:58;8068:82;;;;-1:-1:-1;;;8068:82:11;;;;;;;:::i;:::-;8187:18;;;:33;;;8335:40;8357:7;8351:3;8336:18;;8357:7;8336:28;;;;;8335:38;:40::i;:::-;8315:60;;:17;;;:60;-1:-1:-1;7461:6005:11;;;8414:12;8400:11;:26;8396:5070;;;9285:17;9305:228;9451:81;9489:42;9505:8;:25;;;9489:11;:15;;:42;;;;:::i;:::-;9451:18;;;;;:37;:81::i;:::-;9398:25;;9368;;;;9305:120;;9368:56;;:25;:29;:56::i;:::-;9305:22;;;;;:62;:120::i;:::-;:145;;:228::i;:::-;9573:25;;;;9285:248;;-1:-1:-1;9573:39:11;;;9551:19;9682:41;9285:248;9573:39;9682:28;:41::i;:::-;9659:64;;9764:8;:18;;;9749:12;:33;9741:62;;;;-1:-1:-1;;;9741:62:11;;;;;;;:::i;:::-;9826:14;9822:143;;;1462:11;1448:3;:26;9872:42;9881:12;9895:8;:18;;;9872:8;:42::i;:::-;:58;9864:82;;;;-1:-1:-1;;;9864:82:11;;;;;;;:::i;:::-;9983:18;;;:33;;;10131:40;10153:7;10147:3;10132:18;;10153:7;10132:28;;;10131:40;10111:60;;:17;;;:60;-1:-1:-1;8396:5070:11;;-1:-1:-1;;8396:5070:11;;10210:8;:25;;;10196:11;:39;10192:3274;;;11105:17;11125:254;11297:81;11335:42;11351:8;:25;;;11335:11;:15;;:42;;;;:::i;:::-;11297:18;;;;;:37;:81::i;:::-;11244:25;;11214;;;;11125:146;;11214:56;;:25;:29;:56::i;:::-;11153:18;;;;11126:22;;;;:46;;:26;:46::i;:::-;11125:88;;:146::i;:::-;:171;;:254::i;:::-;11433:25;;11105:274;;-1:-1:-1;11419:39:11;;11397:19;11528:41;11105:274;11419:39;11528:28;:41::i;:::-;11505:64;;11610:8;:16;;;11595:12;:31;11587:57;;;;-1:-1:-1;;;11587:57:11;;;;;;;:::i;:::-;11667:14;11663:143;;;1462:11;1448:3;:26;11713:42;11722:12;11736:8;:18;;;11713:8;:42::i;:::-;:58;11705:82;;;;-1:-1:-1;;;11705:82:11;;;;;;;:::i;:::-;11824:18;;;:33;;;11972:40;11994:7;11988:3;11973:18;;11994:7;11973:28;;;11972:40;11952:60;;:17;;;:60;-1:-1:-1;10192:3274:11;;-1:-1:-1;;10192:3274:11;;12659:17;12679:234;12833:79;12869:42;12885:8;:25;;;12869:11;:15;;:42;;;;:::i;:::-;12833:16;;;;;:35;:79::i;:::-;12679:128;12742:64;12780:8;:25;;;4071:3:13;12742:37:11;;:64;;;;:::i;12679:234::-;12659:254;-1:-1:-1;12931:19:11;12953:50;4071:3:13;12991:11:11;12953:37;:50::i;:::-;12931:72;-1:-1:-1;13021:20:11;13044:41;:9;12931:72;13044:28;:41::i;:::-;13021:64;;13126:8;:16;;;13111:12;:31;13103:57;;;;-1:-1:-1;;;13103:57:11;;;;;;;:::i;:::-;13183:14;13179:143;;;1462:11;1448:3;:26;13229:42;13238:12;13252:8;:18;;;13229:8;:42::i;:::-;:58;13221:82;;;;-1:-1:-1;;;13221:82:11;;;;;;;:::i;:::-;13340:18;;;:33;;;13411:40;13433:7;13427:3;13412:18;;13433:7;13412:28;;;13411:40;13391:60;;:17;;;:60;-1:-1:-1;;;10192:3274:11;13480:23;13506:56;13540:8;13550:11;13506:33;:56::i;:::-;13480:82;;13580:14;13576:248;;;4373:5:13;4071:3;4356:22;13716:49:11;13725:15;13742:6;:22;;;13716:8;:49::i;:::-;:73;13708:101;;;;-1:-1:-1;;;13708:101:11;;;;;;;:::i;:::-;13854:7;13837:11;13849:1;13837:14;;;;;;;;;;;;;:24;;;;13891:15;13875:10;13886:1;13875:13;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;5847:3:11;;;;;-1:-1:-1;5803:8114:11;;-1:-1:-1;;;;5803:8114:11;;;5187:8736;;;;;;;;:::o;2913:633:29:-;2981:7;3306:11;3274:43;;4981:3:13;3274:43:29;:265;;3491:48;;;5125:16:13;3491:48:29;3274:265;;;5044:22:13;5206:17;3388:43:29;;;-1:-1:-1;;3388:43:29;3387:88;3333:142;3274:265;3267:272;2913:633;-1:-1:-1;;2913:633:29:o;411:190:43:-;491:5;;;-1:-1:-1;;510:7:43;;506:88;;;528:6;;;:20;;;547:1;542;538;:5;;;;;;:10;528:20;519:30;;;;;;506:88;;;573:6;;;:20;;;592:1;587;583;:5;;;;;;:10;573:20;564:30;;;;;1035:239;1091:8;1121:1;-1:-1:-1;;1121:7:43;:27;;;;;-1:-1:-1;;;1132:1:43;:16;1121:27;1119:30;1111:39;;;;;;1266:1;1262;:5;;;;;;;1035:239;-1:-1:-1;;;1035:239:43:o;12011:407:29:-;12163:19;12216:1;12202:10;:15;;12194:24;;;;;;12259:1;12236:19;:24;;12228:33;;;;;;12285:126;:104;12353:35;:19;12377:10;12353:23;:35::i;:::-;12285;:10;12305:14;12285:19;:35::i;:::-;:67;;:104::i;:::-;:124;:126::i;:::-;12271:140;12011:407;-1:-1:-1;;;;12011:407:29:o;1152:178:44:-;1210:7;1233:6;1229:20;;-1:-1:-1;1248:1:44;1241:8;;1229:20;1271:5;;;1275:1;1271;:5;:1;1294:5;;;;;:10;1286:19;;;;;;1322:1;1152:178;-1:-1:-1;;;1152:178:44:o;1794:120::-;1852:7;1883:1;1879;:5;1871:14;;;;;;1906:1;1902;:5;;;;;;;1794:120;-1:-1:-1;;;1794:120:44:o;13929:116:11:-;13991:7;14021:1;14017;:5;:21;;14037:1;14033;:5;14017:21;;;-1:-1:-1;14025:5:11;;13929:116::o;3127:129:44:-;3178:5;3208:15;3203:20;;;3195:29;;;;;;-1:-1:-1;3247:1:44;3127:129::o;784:121::-;842:7;874:1;869;:6;;861:15;;;;;;-1:-1:-1;893:5:44;;;784:121::o;2654:155::-;2727:7;2753:49;2757:9;2761:1;2764;2757:3;:9::i;:::-;4071:3:13;2753::44;:49::i;2493:155::-;2566:7;2592:49;2596:41;2600:1;4071:3:13;2596::44;:41::i;:::-;2639:1;2592:3;:49::i;369:144::-;427:7;458:5;;;481:6;;;;473:15;;;;;12518:2178:29;12649:26;12831:1;12812:8;:16;;;:20;12804:29;;;;;;4071:3:13;13163:11:29;:48;;13155:57;;;;;;13242:25;;13227:40;;13223:1467;;13436:25;;13395:18;;;;13362:100;;13436:25;13362:52;;:11;;:32;:52::i;:100::-;13341:121;;13223:1467;;;13498:8;:25;;;13483:11;:40;13479:1211;;14077:18;;;;13994:25;;13966;;;;13869:18;;;;13785:311;;14077:18;13785:235;;13966:53;;;;13785:124;;13786:39;;;13869;;;13785:83;:124::i;13479:1211::-;14362:317;14660:8;:18;;;14362:241;14577:8;:25;;;4071:3:13;14541:61:29;14362:122;14465:8;:18;;;14446:8;:16;;;:37;14377:8;:25;;;14363:11;:39;14362:83;;:122;;;;:::i;1440:120:43:-;1529:5;;;1524:16;;;;1496:8;1545:6;;;1524:28;1516:37;;;;;1786:176;1847:8;1871:9;1875:1;1878;1871:3;:9::i;:::-;1867:13;;1903:1;1898;:6;;1890:15;;;;;2040:143;2111:6;2136:40;2140:32;2144:1;4071:3:13;2140::43;:32::i;:::-;2174:1;2136:3;:40::i;2410:117::-;2459:7;2491:1;2486;:6;;2478:15;;;;;1280:154;1403:5;;;1398:16;;;;1336:8;1419:6;;;1398:28;1390:37;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:821:74:-;;153:3;146:4;138:6;134:17;130:27;120:2;;175:5;168;161:20;120:2;215:6;202:20;241:4;265:91;280:75;352:2;280:75;:::i;:::-;265:91;:::i;:::-;390:15;;;421:12;;;;453:15;;;487:6;524:11;;;512:24;;508:33;;505:42;-1:-1:-1;502:2:74;;;564:5;557;550:20;502:2;590:5;604:202;618:2;615:1;612:9;604:202;;;675:56;727:3;722;675:56;:::i;:::-;663:69;;752:12;;;;784;;;;636:1;629:9;604:202;;;-1:-1:-1;824:5:74;;110:725;-1:-1:-1;;;;;;;;110:725:74:o;840:1388::-;;968:3;961:4;953:6;949:17;945:27;935:2;;990:5;983;976:20;935:2;1030:6;1017:20;1056:4;1080:91;1095:75;1167:2;1095:75;:::i;1080:91::-;1205:15;;;1236:12;;;;1268:15;;;1302:4;1337:11;;;1325:24;;1321:33;;1318:42;-1:-1:-1;1315:2:74;;;1377:5;1370;1363:20;1315:2;1403:5;1417:782;1431:2;1428:1;1425:9;1417:782;;;1498:2;1492:3;1487;1483:13;1479:22;1476:2;;;1518:5;1511;1504:20;1476:2;1559;1553:9;1605:2;1597:6;1593:15;1678:6;1666:10;1663:22;1642:18;1630:10;1627:34;1624:62;1621:2;;;1689:9;1621:2;1713:22;;1761:17;;1822:12;1811:24;;1801:35;;1791:2;;1854:5;1847;1840:20;1791:2;1875:21;;1937:12;;;1924:26;-1:-1:-1;;;;;1985:36:74;;1973:49;;1963:2;;2040:5;2033;2026:20;1963:2;2068:15;;;2061:32;2106:19;;2145:12;;;;2177;;;;1449:1;1442:9;1417:782;;2233:132;2300:20;;2329:30;2300:20;2329:30;:::i;2370:136::-;2448:13;;2470:30;2448:13;2470:30;:::i;2511:191::-;2608:20;;2637:59;2608:20;2637:59;:::i;2707:543::-;;2805:3;2798:4;2790:6;2786:17;2782:27;2772:2;;2827:5;2820;2813:20;2772:2;2867:6;2854:20;2893:18;2889:2;2886:26;2883:2;;;2915:9;2883:2;2950:54;2992:2;2973:13;;-1:-1:-1;;2969:27:74;2998:4;2965:38;2950:54;:::i;:::-;3029:2;3020:7;3013:19;3075:3;3068:4;3063:2;3055:6;3051:15;3047:26;3044:35;3041:2;;;3096:5;3089;3082:20;3041:2;3165;3158:4;3150:6;3146:17;3139:4;3130:7;3126:18;3113:55;3188:16;;;3206:4;3184:27;3177:42;;;;3192:7;2762:488;-1:-1:-1;;2762:488:74:o;3255:658::-;;3380:4;3368:9;3363:3;3359:19;3355:30;3352:2;;;3402:5;3395;3388:20;3352:2;3439:4;3433:11;3483:4;3475:6;3471:17;3554:6;3542:10;3539:22;3518:18;3506:10;3503:34;3500:62;3497:2;;;3565:9;3497:2;3598:10;3592:4;3585:24;;3627:6;3618:15;;3663:9;3657:16;3682:61;3735:7;3682:61;:::i;:::-;3752:23;;3820:2;3805:18;;3799:25;3833:33;3799:25;3833:33;:::i;:::-;3894:2;3882:15;;;;3875:32;3342:571;;-1:-1:-1;;3342:571:74:o;3918:954::-;;4015:6;4058:2;4046:9;4041:3;4037:19;4033:28;4030:2;;;4078:5;4071;4064:20;4030:2;4104:18;4119:2;4104:18;:::i;:::-;4095:27;;;4145:29;4164:9;4145:29;:::i;:::-;4138:5;4131:44;4207:38;4241:2;4230:9;4226:18;4207:38;:::i;:::-;4202:2;4195:5;4191:14;4184:62;4278:38;4312:2;4301:9;4297:18;4278:38;:::i;:::-;4273:2;4266:5;4262:14;4255:62;4349:38;4383:2;4372:9;4368:18;4349:38;:::i;:::-;4344:2;4337:5;4333:14;4326:62;4421:39;4455:3;4444:9;4440:19;4421:39;:::i;:::-;4415:3;4408:5;4404:15;4397:64;4494:39;4528:3;4517:9;4513:19;4494:39;:::i;:::-;4488:3;4481:5;4477:15;4470:64;4567:39;4601:3;4590:9;4586:19;4567:39;:::i;:::-;4561:3;4554:5;4550:15;4543:64;4640:39;4674:3;4663:9;4659:19;4640:39;:::i;:::-;4634:3;4627:5;4623:15;4616:64;4699:3;4734:38;4768:2;4757:9;4753:18;4734:38;:::i;:::-;4718:14;;;4711:62;4792:3;4827:38;4846:18;;;4827:38;:::i;:::-;4811:14;;;4804:62;4815:5;3995:877;-1:-1:-1;;3995:877:74:o;4877:965::-;;4982:6;5025:2;5013:9;5008:3;5004:19;5000:28;4997:2;;;5045:5;5038;5031:20;4997:2;5082;5076:9;5112:15;;;;5157:18;5142:34;;5178:22;;;5139:62;5136:2;;;5204:9;5136:2;5235:10;5231:2;5224:22;5264:6;5255:15;;5294:29;5313:9;5294:29;:::i;:::-;5286:6;5279:45;5357:38;5391:2;5380:9;5376:18;5357:38;:::i;:::-;5352:2;5344:6;5340:15;5333:63;5429:38;5463:2;5452:9;5448:18;5429:38;:::i;:::-;5424:2;5416:6;5412:15;5405:63;5501:38;5535:2;5524:9;5520:18;5501:38;:::i;:::-;5496:2;5488:6;5484:15;5477:63;5574:39;5608:3;5597:9;5593:19;5574:39;:::i;:::-;5568:3;5560:6;5556:16;5549:65;5648:39;5682:3;5671:9;5667:19;5648:39;:::i;:::-;5642:3;5634:6;5630:16;5623:65;5722:39;5756:3;5745:9;5741:19;5722:39;:::i;:::-;5716:3;5708:6;5704:16;5697:65;5796:39;5830:3;5819:9;5815:19;5796:39;:::i;:::-;5790:3;5782:6;5778:16;5771:65;;;4962:880;;;;:::o;5847:134::-;5915:20;;5944:31;5915:20;5944:31;:::i;5986:138::-;6065:13;;6087:31;6065:13;6087:31;:::i;6129:1905::-;;6289:2;6332;6320:9;6311:7;6307:23;6303:32;6300:2;;;6353:6;6345;6338:22;6300:2;6391:9;6385:16;6420:18;6461:2;6453:6;6450:14;6447:2;;;6482:6;6474;6467:22;6447:2;6525:6;6514:9;6510:22;6500:32;;6570:7;6563:4;6559:2;6555:13;6551:27;6541:2;;6597:6;6589;6582:22;6541:2;6631;6625:9;6654:91;6669:75;6741:2;6669:75;:::i;6654:91::-;6779:15;;;6810:12;;;;6842:11;;;6872:6;6905:11;;;6897:20;;6893:29;;6890:42;-1:-1:-1;6887:2:74;;;6950:6;6942;6935:22;6887:2;6977:6;6968:15;;6992:1012;7006:2;7003:1;7000:9;6992:1012;;;7077:2;7071:3;7062:7;7058:17;7054:26;7051:2;;;7098:6;7090;7083:22;7051:2;7130;7165;7159:9;7211:2;7203:6;7199:15;7268:6;7256:10;7253:22;7248:2;7236:10;7233:18;7230:46;7227:2;;;7279:9;7227:2;7303:22;;7353:10;;7338:26;;7407:12;;;7401:19;7384:15;;;7377:44;7464:12;;;7458:19;7441:15;;;7434:44;;;;7501:2;7546:12;;;7540:19;7523:15;;;7516:44;7583:3;7629:12;;;7623:19;7606:15;;;7599:44;7666:3;7712:12;;;7706:19;7689:15;;;7682:44;7750:3;7797:13;;;7791:20;7773:16;;;7766:46;7836:3;7883:13;;;7877:20;7859:16;;;7852:46;7911:19;;7024:1;7017:9;;;;;7950:12;;;;7982;;;;6992:1012;;;-1:-1:-1;8023:5:74;;6269:1765;-1:-1:-1;;;;;;;;;6269:1765:74:o;8039:193::-;;8161:2;8149:9;8140:7;8136:23;8132:32;8129:2;;;8182:6;8174;8167:22;8129:2;-1:-1:-1;8210:16:74;;8119:113;-1:-1:-1;8119:113:74:o;8237:1188::-;;;8434:9;8425:7;8421:23;8464:3;8460:2;8456:12;8453:2;;;8486:6;8478;8471:22;8453:2;8515:4;8511:2;8507:13;8504:2;;;8538:6;8530;8523:22;8504:2;;8576;8570:9;8618:4;8610:6;8606:17;8689:6;8677:10;8674:22;8653:18;8641:10;8638:34;8635:62;8632:2;;;8700:9;8632:2;8727;8720:22;8764:16;;8789:59;8764:16;8789:59;:::i;:::-;8857:21;;8911:49;8956:2;8941:18;;8911:49;:::i;:::-;8906:2;8898:6;8894:15;8887:74;8994:48;9038:2;9027:9;9023:18;8994:48;:::i;:::-;8989:2;8981:6;8977:15;8970:73;9076:49;9121:2;9110:9;9106:18;9076:49;:::i;:::-;9071:2;9063:6;9059:15;9052:74;9160:50;9205:3;9194:9;9190:19;9160:50;:::i;:::-;9154:3;9146:6;9142:16;9135:76;9245:50;9290:3;9279:9;9275:19;9245:50;:::i;:::-;9239:3;9227:16;;9220:76;9231:6;-1:-1:-1;9340:79:74;9411:7;9404:4;9389:20;;9340:79;:::i;:::-;9330:89;;8401:1024;;;;;:::o;9430:429::-;;;9555:2;9543:9;9534:7;9530:23;9526:32;9523:2;;;9576:6;9568;9561:22;9523:2;9620:9;9607:23;9670:6;9663:5;9659:18;9652:5;9649:29;9639:2;;9697:6;9689;9682:22;9639:2;9725:5;-1:-1:-1;9782:2:74;9767:18;;9754:32;9795;9754;9795;:::i;:::-;9846:7;9836:17;;;9513:346;;;;;:::o;9864:190::-;;9976:2;9964:9;9955:7;9951:23;9947:32;9944:2;;;9997:6;9989;9982:22;9944:2;-1:-1:-1;10025:23:74;;9934:120;-1:-1:-1;9934:120:74:o;10059:489::-;;;10245:2;10233:9;10224:7;10220:23;10216:32;10213:2;;;10266:6;10258;10251:22;10213:2;10307:9;10294:23;10284:33;;10368:2;10357:9;10353:18;10340:32;10395:18;10387:6;10384:30;10381:2;;;10432:6;10424;10417:22;10381:2;10460:82;10534:7;10525:6;10514:9;10510:22;10460:82;:::i;:::-;10450:92;;;10203:345;;;;;:::o;10553:1829::-;;;10716:2;10704:9;10695:7;10691:23;10687:32;10684:2;;;10737:6;10729;10722:22;10684:2;10778:9;10765:23;10755:33;;10839:2;10828:9;10824:18;10811:32;10862:18;10903:2;10895:6;10892:14;10889:2;;;10924:6;10916;10909:22;10889:2;10952:22;;;;11008:6;10990:16;;;10986:29;10983:2;;;11033:6;11025;11018:22;10983:2;11061:6;11089:18;11104:2;11089:18;:::i;:::-;11130:59;11181:7;11177:2;11130:59;:::i;:::-;11123:5;11116:74;11209:3;11244:60;11300:2;11296;11292:11;11244:60;:::i;:::-;11239:2;11232:5;11228:14;11221:84;11337:60;11389:7;11384:2;11380;11376:11;11337:60;:::i;:::-;11332:2;11325:5;11321:14;11314:84;11432:32;11459:3;11455:2;11451:12;11432:32;:::i;:::-;11425:4;11418:5;11414:16;11407:58;11499:31;11525:3;11521:2;11517:12;11499:31;:::i;:::-;11492:4;11485:5;11481:16;11474:57;11577:3;11573:2;11569:12;11556:26;11540:42;;11607:2;11597:8;11594:16;11591:2;;;11628:6;11620;11613:22;11591:2;11671:47;11710:7;11699:8;11695:2;11691:17;11671:47;:::i;:::-;11664:4;11657:5;11653:16;11646:73;11765:3;11761:2;11757:12;11744:26;11728:42;;11795:2;11785:8;11782:16;11779:2;;;11816:6;11808;11801:22;11779:2;11859:47;11898:7;11887:8;11883:2;11879:17;11859:47;:::i;:::-;11852:4;11845:5;11841:16;11834:73;11953:3;11949:2;11945:12;11932:26;11916:42;;11983:2;11973:8;11970:16;11967:2;;;12004:6;11996;11989:22;11967:2;12047:88;12127:7;12116:8;12112:2;12108:17;12047:88;:::i;:::-;12040:4;12033:5;12029:16;12022:114;12182:3;12178:2;12174:12;12161:26;12145:42;;12212:2;12202:8;12199:16;12196:2;;;12233:6;12225;12218:22;12196:2;12274:77;12343:7;12332:8;12328:2;12324:17;12274:77;:::i;:::-;12258:14;;;12251:101;10674:1708;;12262:5;;-1:-1:-1;10674:1708:74;;-1:-1:-1;;;;;10674:1708:74:o;12387:513::-;;12510:5;12504:12;12537:6;12532:3;12525:19;12563:4;12592:2;12587:3;12583:12;12576:19;;12629:2;12622:5;12618:14;12650:3;12662:213;12676:6;12673:1;12670:13;12662:213;;;12725:66;12787:3;12778:6;12772:13;12725:66;:::i;:::-;12820:6;12811:16;;;;;12850:15;;;;12698:1;12691:9;12662:213;;;-1:-1:-1;12891:3:74;;12480:420;-1:-1:-1;;;;;12480:420:74:o;12905:593::-;;13017:5;13011:12;13044:6;13039:3;13032:19;13070:4;13099:2;13094:3;13090:12;13083:19;;13136:2;13129:5;13125:14;13157:3;13169:304;13183:6;13180:1;13177:13;13169:304;;;13242:13;;13284:9;;13295:12;13280:28;13268:41;;13353:11;;13347:18;-1:-1:-1;;;;;13343:47:74;13329:12;;;13322:69;13420:4;13411:14;;;;13448:15;;;;13205:1;13198:9;13169:304;;13503:93;13575:13;13568:21;13556:34;;13546:50::o;13601:133::-;-1:-1:-1;;;;;13696:31:74;13684:44;;13674:60::o;13739:478::-;;13821:5;13815:12;13848:6;13843:3;13836:19;13873:3;13885:162;13899:6;13896:1;13893:13;13885:162;;;13961:4;14017:13;;;14013:22;;14007:29;13989:11;;;13985:20;;13978:59;13914:12;13885:162;;;14065:6;14062:1;14059:13;14056:2;;;14131:3;14124:4;14115:6;14110:3;14106:16;14102:27;14095:40;14056:2;-1:-1:-1;14199:2:74;14178:15;-1:-1:-1;;14174:29:74;14165:39;;;;14206:4;14161:50;;13791:426;-1:-1:-1;;13791:426:74:o;14222:1172::-;14296:37;14329:3;14321:5;14315:12;14296:37;:::i;:::-;14379:4;14372:5;14368:16;14362:23;14394:48;14436:4;14431:3;14427:14;14413:12;14394:48;:::i;:::-;;14490:4;14483:5;14479:16;14473:23;14505:50;14549:4;14544:3;14540:14;14524;14505:50;:::i;:::-;;14603:4;14596:5;14592:16;14586:23;14618:50;14662:4;14657:3;14653:14;14637;14618:50;:::i;:::-;;14716:4;14709:5;14705:16;14699:23;14731:50;14775:4;14770:3;14766:14;14750;14731:50;:::i;:::-;;14829:4;14822:5;14818:16;14812:23;14844:50;14888:4;14883:3;14879:14;14863;14844:50;:::i;:::-;;14942:4;14935:5;14931:16;14925:23;14957:50;15001:4;14996:3;14992:14;14976;14957:50;:::i;:::-;;15055:4;15048:5;15044:16;15038:23;15070:50;15114:4;15109:3;15105:14;15089;15070:50;:::i;:::-;;15139:6;15193:2;15186:5;15182:14;15176:21;15206:48;15250:2;15245:3;15241:12;15225:14;15206:48;:::i;:::-;;;15273:6;15327:2;15320:5;15316:14;15310:21;15340:48;15384:2;15379:3;15375:12;15359:14;15340:48;:::i;:::-;;;14286:1108;;:::o;15399:600::-;15491:4;15534:2;15526:5;15520:12;15516:21;15511:3;15504:34;15599:2;15591:4;15584:5;15580:16;15574:23;15570:32;15563:4;15558:3;15554:14;15547:56;15664:2;15656:4;15649:5;15645:16;15639:23;15635:32;15628:4;15623:3;15619:14;15612:56;15729:2;15721:4;15714:5;15710:16;15704:23;15700:32;15693:4;15688:3;15684:14;15677:56;15794:2;15786:4;15779:5;15775:16;15769:23;15765:32;15758:4;15753:3;15749:14;15742:56;15859:2;15851:4;15844:5;15840:16;15834:23;15830:32;15823:4;15818:3;15814:14;15807:56;15924:2;15916:4;15909:5;15905:16;15899:23;15895:32;15888:4;15883:3;15879:14;15872:56;15989:2;15981:4;15974:5;15970:16;15964:23;15960:32;15953:4;15948:3;15944:14;15937:56;;15471:528;;:::o;16004:77::-;16073:4;16062:16;16050:29;;16048:33::o;16086:203::-;-1:-1:-1;;;;;16250:32:74;;;;16232:51;;16220:2;16205:18;;16187:102::o;16294:925::-;;16637:2;16626:9;16619:21;16663:88;16747:2;16736:9;16732:18;16724:6;16663:88;:::i;:::-;16808:22;;;16770:2;16788:18;;;16781:50;;;;16880:13;;16902:22;;;16978:15;;;;16940;;;17011:4;17024:169;17038:6;17035:1;17032:13;17024:169;;;17099:13;;17087:26;;17168:15;;;;17133:12;;;;17060:1;17053:9;17024:169;;;-1:-1:-1;17210:3:74;;16609:610;-1:-1:-1;;;;;;;16609:610:74:o;17454:335::-;17656:2;17638:21;;;17695:2;17675:18;;;17668:30;-1:-1:-1;;;17729:2:74;17714:18;;17707:41;17780:2;17765:18;;17628:161::o;17794:340::-;17996:2;17978:21;;;18035:2;18015:18;;;18008:30;-1:-1:-1;;;18069:2:74;18054:18;;18047:46;18125:2;18110:18;;17968:166::o;18139:339::-;18341:2;18323:21;;;18380:2;18360:18;;;18353:30;-1:-1:-1;;;18414:2:74;18399:18;;18392:45;18469:2;18454:18;;18313:165::o;18483:340::-;18685:2;18667:21;;;18724:2;18704:18;;;18697:30;-1:-1:-1;;;18758:2:74;18743:18;;18736:46;18814:2;18799:18;;18657:166::o;18828:337::-;19030:2;19012:21;;;19069:2;19049:18;;;19042:30;-1:-1:-1;;;19103:2:74;19088:18;;19081:43;19156:2;19141:18;;19002:163::o;19170:335::-;19372:2;19354:21;;;19411:2;19391:18;;;19384:30;-1:-1:-1;;;19445:2:74;19430:18;;19423:41;19496:2;19481:18;;19344:161::o;19510:335::-;19712:2;19694:21;;;19751:2;19731:18;;;19724:30;-1:-1:-1;;;19785:2:74;19770:18;;19763:41;19836:2;19821:18;;19684:161::o;19850:1675::-;;20047:2;20036:9;20029:21;20059:81;20136:2;20125:9;20121:18;20112:6;20106:13;20059:81;:::i;:::-;20187:2;20179:6;20175:15;20169:22;20200:82;20277:3;20266:9;20262:19;20248:12;20200:82;:::i;:::-;;20331:4;20323:6;20319:17;20313:24;20346:75;20416:3;20405:9;20401:19;20385:14;20346:75;:::i;:::-;;20470:4;20462:6;20458:17;20452:24;20485:55;20535:3;20524:9;20520:19;20504:14;20485:55;:::i;:::-;;20589:4;20581:6;20577:17;20571:24;20604:54;20653:3;20642:9;20638:19;20622:14;20604:54;:::i;:::-;;20707:4;20699:6;20695:17;20689:24;20732:6;20775:2;20769:3;20758:9;20754:19;20747:31;20801:56;20852:3;20841:9;20837:19;20821:14;20801:56;:::i;:::-;20787:70;;20906:4;20898:6;20894:17;20888:24;20935:2;20931:7;21003:2;20991:9;20983:6;20979:22;20975:31;20969:3;20958:9;20954:19;20947:60;21030:43;21066:6;21050:14;21030:43;:::i;:::-;21016:57;;21122:4;21114:6;21110:17;21104:24;21082:46;;21193:2;21181:9;21173:6;21169:22;21165:31;21159:3;21148:9;21144:19;21137:60;21220:84;21297:6;21281:14;21220:84;:::i;:::-;21206:98;;21353:6;21345;21341:19;21335:26;21313:48;;21425:2;21413:9;21405:6;21401:22;21397:31;21392:2;21381:9;21377:18;21370:59;;21446:73;21512:6;21496:14;21446:73;:::i;:::-;21438:81;20019:1506;-1:-1:-1;;;;;;20019:1506:74:o;21530:188::-;21704:6;21692:19;;;;21674:38;;21662:2;21647:18;;21629:89::o;21723:242::-;21793:2;21787:9;21823:17;;;21870:18;21855:34;;21891:22;;;21852:62;21849:2;;;21917:9;21849:2;21944;21937:22;21767:198;;-1:-1:-1;21767:198:74:o;21970:209::-;;22095:18;22087:6;22084:30;22081:2;;;22117:9;22081:2;-1:-1:-1;22168:4:74;22149:17;;;22145:28;;22071:108::o;22184:120::-;22272:5;22265:13;22258:21;22251:5;22248:32;22238:2;;22294:1;22291;22284:12;22238:2;22228:76;:::o;22309:159::-;-1:-1:-1;;;;;22412:31:74;;22402:42;;22392:2;;22458:1;22455;22448:12;22473:116;22559:4;22552:5;22548:16;22541:5;22538:27;22528:2;;22579:1;22576;22569:12", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"getfCashCurveUpdate(uint16,bool)": {"notice": "Simulates the fCash curve update"}, "setMigrationSettings(uint256,((uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8),address,(uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8),uint8,bool,string,string,(uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8)[],(uint40,uint80)[]))": {"notice": "Sets migration settings for the given currency id"}, "updateTotalfCashDebt(uint256,(uint40,uint80)[])": {"notice": "Special method for updating the total fCash debt since this may change as we closer to the actual upgrade"}}, "version": 1}, "offset": [1130, 14047], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2188691D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x689954E1 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x7FB9CB12 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x858DCCB3 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xE8D0984E EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xEB8457BA EQ PUSH2 0xD6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x2514 JUMP JUMPDEST PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP3 SWAP2 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x25AF JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAE PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2907 JUMP JUMPDEST PUSH2 0xAE PUSH2 0xE48 JUMP JUMPDEST PUSH2 0xA4 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x256A JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2552 JUMP JUMPDEST PUSH2 0xF7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x451 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x426 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x451 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x434 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE SWAP3 DUP7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND DUP4 MSTORE SWAP4 DUP2 DIV DUP5 AND DUP3 DUP7 ADD MSTORE PUSH3 0x10000 DUP2 DIV DUP5 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0x1000000 DUP3 DIV DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x100000000 DUP3 DIV DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x28 SHL DUP3 DIV DUP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH7 0x1000000000000 DUP3 DIV DUP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND PUSH1 0xE0 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x513 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP5 ADD SLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP4 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x5DC JUMP JUMPDEST POP POP POP SWAP2 MSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x73A5B727 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE74B6E4E SWAP1 PUSH2 0x682 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x2B6A JUMP JUMPDEST PUSH2 0x100 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x2458 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x497CF7E3 DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x724 SWAP2 SWAP1 PUSH2 0x2B6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x778 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2338 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD SWAP2 SWAP3 POP PUSH1 0xFF PUSH1 0xA SWAP2 DUP3 ADD AND SWAP1 EXP SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A3 JUMPI DUP2 PUSH2 0x818 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB2FFFB04 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST SWAP1 POP PUSH2 0x82B DUP6 PUSH1 0xE0 ADD MLOAD DUP5 DUP11 DUP6 DUP6 PUSH2 0x14BF JUMP JUMPDEST SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x120 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x9 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA0 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xB5B SWAP3 SWAP2 SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xB77 SWAP2 PUSH1 0x5 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DF1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBDA JUMPI DUP3 PUSH1 0x6 ADD DUP1 SLOAD DUP1 PUSH2 0xBAF JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xB9A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0xE0 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xD43 JUMPI DUP3 PUSH1 0x6 ADD DUP5 PUSH1 0xE0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBFF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x5 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBDE JUMP JUMPDEST POP POP PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD8C JUMPI DUP3 PUSH1 0x7 ADD DUP1 SLOAD DUP1 PUSH2 0xD62 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xD4D JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 PUSH2 0x100 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xE1D JUMPI DUP3 PUSH1 0x7 ADD DUP5 PUSH2 0x100 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDB3 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP2 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE ADD PUSH2 0xD90 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD SWAP1 SWAP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xEF6 JUMPI DUP3 PUSH1 0x7 ADD DUP1 SLOAD DUP1 PUSH2 0xECC JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x78 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xEB7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xE1D JUMPI DUP3 PUSH1 0x7 ADD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF13 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP4 DUP4 SWAP1 KECCAK256 DUP3 MLOAD SWAP2 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH15 0xFFFFFFFFFFFFFFFFFFFF0000000000 NOT PUSH5 0xFFFFFFFFFF SWAP1 SWAP3 AND PUSH5 0xFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE ADD PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xF85 PUSH2 0x1E79 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x5 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x9 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x12D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x12AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x136B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1340 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x136B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x134E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1435 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP1 DUP3 ADD DUP4 MSTORE SWAP3 DUP7 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND DUP4 MSTORE SWAP4 DUP2 DIV DUP5 AND DUP3 DUP7 ADD MSTORE PUSH3 0x10000 DUP2 DIV DUP5 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH4 0x1000000 DUP3 DIV DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x100000000 DUP3 DIV DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x28 SHL DUP3 DIV DUP4 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH7 0x1000000000000 DUP3 DIV DUP4 AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x38 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND PUSH1 0xE0 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1399 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x14AF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 DUP5 ADD SLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP2 DUP4 ADD MSTORE DUP3 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1462 JUMP JUMPDEST POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1514 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1501 PUSH2 0x1ED6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x14F9 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP DUP7 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x152F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1559 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 MLOAD DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1576 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x158E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH2 0x15A7 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH4 0x3B9ACA00 DUP2 PUSH2 0x15C5 JUMPI INVALID JUMPDEST DUP8 MLOAD PUSH1 0xFF AND SWAP2 SWAP1 SDIV MUL DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 PUSH4 0x3B9ACA00 SDIV DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND MUL DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 DUP7 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP6 MUL DUP2 PUSH2 0x15FD JUMPI INVALID JUMPDEST DIV DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 DUP7 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP6 MUL DUP2 PUSH2 0x1617 JUMPI INVALID JUMPDEST DIV DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x166A PUSH1 0x0 DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1665 DUP14 PUSH2 0x165F DUP15 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0x1B2E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1B7C JUMP JUMPDEST PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x1698 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0xA0 ADD MLOAD LT PUSH2 0x16BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A13 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 DUP3 SWAP1 SUB DIV DUP2 ADD SWAP1 DUP3 GT PUSH2 0x1785 JUMPI PUSH1 0x0 PUSH2 0x16FD DUP4 PUSH2 0x16F7 DUP7 PUSH1 0x0 ADD MLOAD DUP10 PUSH1 0xA0 ADD MLOAD PUSH2 0x1BF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1C25 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x60 ADD MLOAD DUP2 LT PUSH2 0x1722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x29E9 JUMP JUMPDEST DUP13 ISZERO PUSH2 0x175A JUMPI PUSH3 0x186A0 PUSH1 0xFA MUL PUSH2 0x173D DUP3 DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0x1C44 JUMP JUMPDEST LT PUSH2 0x175A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x40 DUP5 ADD DUP2 SWAP1 MSTORE PUSH2 0x1777 DUP6 PUSH2 0x100 DUP4 MUL DUP2 PUSH2 0x1771 JUMPI INVALID JUMPDEST DIV PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP9 ADD MSTORE POP PUSH2 0x1A63 JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1879 JUMPI PUSH1 0x0 PUSH2 0x17DD PUSH2 0x17B7 PUSH2 0x17AC DUP7 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x1C6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP8 ADD MLOAD SWAP1 PUSH2 0x1C83 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x17D7 SWAP2 PUSH2 0x17CC SWAP2 SWAP1 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MLOAD SWAP1 PUSH2 0x1C83 JUMP JUMPDEST SWAP1 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP2 POP DUP4 SWAP1 SUB PUSH1 0x0 PUSH2 0x17F4 DUP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x60 ADD MLOAD DUP2 LT PUSH2 0x1819 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x29E9 JUMP JUMPDEST DUP15 ISZERO PUSH2 0x1851 JUMPI PUSH3 0x186A0 PUSH1 0xFA MUL PUSH2 0x1834 DUP3 DUP9 PUSH1 0x40 ADD MLOAD PUSH2 0x1C44 JUMP JUMPDEST LT PUSH2 0x1851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x40 DUP7 ADD DUP2 SWAP1 MSTORE PUSH2 0x1868 DUP8 PUSH2 0x100 DUP4 MUL DUP2 PUSH2 0x1771 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP11 ADD MSTORE POP PUSH2 0x1A63 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 LT ISZERO PUSH2 0x197B JUMPI PUSH1 0x0 PUSH2 0x18E3 PUSH2 0x18AF PUSH2 0x18A4 DUP7 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x1C6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD SWAP1 PUSH2 0x1C83 JUMP JUMPDEST DUP6 MLOAD PUSH1 0x20 DUP8 ADD MLOAD PUSH2 0x18DD SWAP2 PUSH2 0x18C4 SWAP2 SWAP1 PUSH2 0x1C6E JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0xA0 DUP12 ADD MLOAD PUSH2 0x18D7 SWAP2 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 PUSH2 0x1C83 JUMP JUMPDEST SWAP1 PUSH2 0x1CB5 JUMP JUMPDEST DUP5 MLOAD SWAP1 SWAP2 POP DUP4 SUB PUSH1 0x0 PUSH2 0x18F6 DUP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x80 ADD MLOAD DUP2 LT PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A13 JUMP JUMPDEST DUP15 ISZERO PUSH2 0x1953 JUMPI PUSH3 0x186A0 PUSH1 0xFA MUL PUSH2 0x1936 DUP3 DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x1C44 JUMP JUMPDEST LT PUSH2 0x1953 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE PUSH2 0x196A DUP8 PUSH2 0x100 DUP4 MUL DUP2 PUSH2 0x1771 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP11 ADD MSTORE POP PUSH2 0x1A63 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C3 PUSH2 0x19A5 PUSH2 0x199A DUP7 PUSH1 0x20 ADD MLOAD DUP7 PUSH2 0x1C6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP8 ADD MLOAD SWAP1 PUSH2 0x1C83 JUMP JUMPDEST PUSH2 0x17D7 PUSH2 0x17CC DUP8 PUSH1 0x20 ADD MLOAD PUSH4 0x3B9ACA00 PUSH2 0x1C6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19D5 PUSH4 0x3B9ACA00 DUP6 PUSH2 0x1C6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x19E3 DUP4 DUP4 PUSH2 0x1C9C JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x80 ADD MLOAD DUP2 LT PUSH2 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2A13 JUMP JUMPDEST DUP15 ISZERO PUSH2 0x1A40 JUMPI PUSH3 0x186A0 PUSH1 0xFA MUL PUSH2 0x1A23 DUP3 DUP9 PUSH1 0x60 ADD MLOAD PUSH2 0x1C44 JUMP JUMPDEST LT PUSH2 0x1A40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x2971 JUMP JUMPDEST PUSH1 0x60 DUP7 ADD DUP2 SWAP1 MSTORE PUSH2 0x1A57 DUP8 PUSH2 0x100 DUP4 MUL DUP2 PUSH2 0x1771 JUMPI INVALID JUMPDEST PUSH1 0xFF AND PUSH1 0x60 DUP11 ADD MSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x1A6F DUP5 DUP5 PUSH2 0x1CC7 JUMP JUMPDEST SWAP1 POP DUP13 ISZERO PUSH2 0x1AAB JUMPI PUSH2 0x2710 PUSH4 0x3B9ACA00 SDIV PUSH2 0x1A8E DUP3 DUP9 PUSH1 0xA0 ADD MLOAD PUSH2 0x1C44 JUMP JUMPDEST LT PUSH2 0x1AAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP1 PUSH2 0x29C0 JUMP JUMPDEST DUP7 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x1AB8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP10 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x1AD0 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 SWAP1 SWAP6 ADD SWAP5 POP PUSH2 0x155F SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x96 LT PUSH2 0x1B14 JUMPI PUSH1 0xFF DUP3 AND PUSH3 0x2625A0 MUL PUSH2 0x1B28 JUMP JUMPDEST PUSH4 0x165A0BC0 PUSH3 0xE4E1C0 PUSH1 0xFF DUP5 AND PUSH1 0x95 NOT ADD MUL ADD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x1B5E JUMPI DUP2 ISZERO DUP1 PUSH2 0x1B50 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x1B4D JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x1B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B28 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x1B73 JUMPI POP DUP2 DUP4 DUP3 DUP2 PUSH2 0x1B70 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x1B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0x1B92 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP4 EQ JUMPDEST ISZERO PUSH2 0x1B9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1BA5 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x1BBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEF PUSH2 0x1BEA PUSH2 0x1BDA DUP5 DUP7 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x1BE4 DUP7 DUP9 PUSH2 0x1D97 JUMP JUMPDEST SWAP1 PUSH2 0x1DB3 JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C06 JUMPI POP PUSH1 0x0 PUSH2 0x1B28 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C13 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1C33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1C3C JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1C55 JUMPI DUP2 DUP4 SUB PUSH2 0x1C1E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 GT ISZERO PUSH2 0x1C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1C7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E PUSH2 0x1C92 DUP5 DUP5 PUSH2 0x1BF7 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C1E PUSH2 0x1CAF DUP5 PUSH4 0x3B9ACA00 PUSH2 0x1BF7 JUMP JUMPDEST DUP4 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x80 ADD MLOAD GT PUSH2 0x1CD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP3 GT PUSH2 0x1D10 JUMPI DUP3 MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1D09 SWAP2 SWAP1 PUSH2 0x16F7 SWAP1 DUP6 SWAP1 PUSH2 0x1BF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B28 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 GT PUSH2 0x1D48 JUMPI PUSH1 0x40 DUP4 ADD MLOAD DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1D09 SWAP4 SWAP3 PUSH2 0x18DD SWAP3 DUP2 SWAP1 SUB SWAP2 PUSH2 0x16F7 SWAP2 DUP9 SUB SWAP1 DUP6 SWAP1 SUB PUSH2 0x1BF7 JUMP JUMPDEST PUSH2 0x1C1E DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x18DD DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0x3B9ACA00 SUB PUSH2 0x16F7 DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD SUB DUP9 PUSH1 0x20 ADD MLOAD DUP9 SUB PUSH2 0x1BF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x1B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DA3 DUP4 DUP4 PUSH2 0x1DDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C1E PUSH2 0x1DC6 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x1B2E JUMP JUMPDEST DUP4 PUSH2 0x1B7C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x1C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x1B28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1E27 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1E6D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1E40 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1E6D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1E6D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E6D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E52 JUMP JUMPDEST POP PUSH2 0x1C6A SWAP3 SWAP2 POP PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1E8D PUSH2 0x1ED6 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD PUSH2 0x1EA1 PUSH2 0x1F2F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C6A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F93 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1FA8 PUSH2 0x1FA3 DUP4 PUSH2 0x2B9D JUMP JUMPDEST PUSH2 0x2B79 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD PUSH2 0x100 DUP1 DUP7 MUL DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x1FC7 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1FED JUMPI PUSH2 0x1FDB DUP11 DUP5 PUSH2 0x2261 JUMP JUMPDEST DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP2 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1FC9 JUMP JUMPDEST POP SWAP2 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x200B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x201B PUSH2 0x1FA3 DUP4 PUSH2 0x2B9D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD PUSH1 0x40 DUP1 DUP7 MUL DUP9 ADD DUP6 ADD DUP10 LT ISZERO PUSH2 0x2039 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1FED JUMPI DUP2 DUP4 DUP12 SUB SLT ISZERO PUSH2 0x2051 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP2 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x206C JUMPI INVALID JUMPDEST DUP4 MSTORE DUP4 CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2082 JUMPI DUP10 DUP11 REVERT JUMPDEST DUP2 MSTORE DUP4 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x209C JUMPI DUP10 DUP11 REVERT JUMPDEST DUP2 DUP9 ADD MSTORE DUP6 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP2 DUP2 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x203B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x14BA DUP2 PUSH2 0x2BBB JUMP JUMPDEST DUP1 MLOAD PUSH2 0x14BA DUP2 PUSH2 0x2BBB JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x14BA DUP2 PUSH2 0x2BCC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20E3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F7 JUMPI INVALID JUMPDEST PUSH2 0x210A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x2B79 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x211E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2166 JUMPI INVALID JUMPDEST DUP1 PUSH1 0x40 MSTORE POP DUP1 SWAP2 POP DUP3 MLOAD PUSH2 0x2179 DUP2 PUSH2 0x2BCC JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2189 DUP2 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x21B2 DUP2 PUSH2 0x2B79 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x21BE DUP3 PUSH2 0x2322 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x21CC PUSH1 0x20 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x21DD PUSH1 0x40 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x21EE PUSH1 0x60 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x21FF PUSH1 0x80 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x2210 PUSH1 0xA0 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2221 PUSH1 0xC0 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x2232 PUSH1 0xE0 DUP4 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 PUSH2 0x2245 DUP2 DUP5 ADD PUSH2 0x2322 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH2 0x120 PUSH2 0x2257 DUP4 DUP3 ADD PUSH2 0x2322 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2274 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2291 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP3 POP PUSH2 0x22A1 DUP5 PUSH2 0x2322 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x22AF PUSH1 0x20 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x22C0 PUSH1 0x40 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x22D1 PUSH1 0x60 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x22E2 PUSH1 0x80 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x22F3 PUSH1 0xA0 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x2304 PUSH1 0xC0 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x2315 PUSH1 0xE0 DUP6 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x14BA DUP2 PUSH2 0x2BE1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x14BA DUP2 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x234A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2361 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2374 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2382 PUSH2 0x1FA3 DUP3 PUSH2 0x2B9D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD PUSH2 0x100 DUP1 DUP6 MUL DUP8 ADD DUP9 ADD DUP12 LT ISZERO PUSH2 0x23A1 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP7 POP JUMPDEST DUP5 DUP8 LT ISZERO PUSH2 0x2431 JUMPI DUP1 DUP3 DUP13 SUB SLT ISZERO PUSH2 0x23BB JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x23D0 JUMPI INVALID JUMPDEST DUP3 MSTORE DUP4 MLOAD DUP2 MSTORE DUP10 DUP5 ADD MLOAD DUP11 DUP3 ADD MSTORE DUP4 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xE0 DUP1 DUP5 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP5 MSTORE PUSH1 0x1 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP3 DUP8 ADD SWAP3 SWAP1 DUP2 ADD SWAP1 PUSH2 0x23A5 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2451 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB PUSH2 0x100 DUP2 SLT ISZERO PUSH2 0x246C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0xC0 DUP2 SLT ISZERO PUSH2 0x2479 JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2497 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP4 MLOAD PUSH2 0x24A5 DUP2 PUSH2 0x2BCC JUMP JUMPDEST DUP2 MSTORE PUSH2 0x24B3 PUSH1 0x20 DUP6 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x24C4 PUSH1 0x40 DUP6 ADD PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x24D5 PUSH1 0x60 DUP6 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x24E6 PUSH1 0x80 DUP6 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x24F7 PUSH1 0xA0 DUP6 ADD PUSH2 0x232D JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE SWAP2 POP PUSH2 0x250B DUP5 PUSH1 0xC0 DUP6 ADD PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2526 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2537 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2547 DUP2 PUSH2 0x2BBB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2563 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2599 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x25A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C1 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25DF JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH2 0x320 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x25F3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x25FF DUP2 PUSH2 0x2B79 JUMP JUMPDEST PUSH2 0x2609 DUP9 DUP6 PUSH2 0x2261 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x100 PUSH2 0x2619 DUP2 DUP7 ADD PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x262A DUP10 DUP5 DUP8 ADD PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x263C PUSH2 0x260 DUP7 ADD PUSH2 0x2322 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x264E PUSH2 0x280 DUP7 ADD PUSH2 0x20B2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2A0 DUP6 ADD CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH2 0x2667 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x2673 DUP10 DUP5 DUP8 ADD PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2C0 DUP6 ADD CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH2 0x268C JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x2698 DUP10 DUP5 DUP8 ADD PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2E0 DUP6 ADD CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH2 0x26B1 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x26BD DUP10 DUP5 DUP8 ADD PUSH2 0x1F83 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x300 DUP6 ADD CALLDATALOAD SWAP3 POP DUP4 DUP4 GT ISZERO PUSH2 0x26D6 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x26E2 DUP10 DUP5 DUP8 ADD PUSH2 0x1FFB JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE SWAP5 SWAP8 SWAP5 SWAP7 POP SWAP4 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x272E JUMPI PUSH2 0x271A DUP8 DUP4 MLOAD PUSH2 0x289F JUMP JUMPDEST PUSH2 0x100 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2707 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x272E JUMPI DUP2 MLOAD DUP1 MLOAD PUSH5 0xFFFFFFFFFF AND DUP9 MSTORE DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND DUP4 DUP9 ADD MSTORE PUSH1 0x40 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x274C JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27BB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x279F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x27CC JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27EC DUP3 DUP3 MLOAD PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x27FE PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2811 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0x2824 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x2837 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH2 0x284A PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0xC0 DUP2 ADD MLOAD PUSH2 0x285D PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH2 0x2870 PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH2 0x100 DUP1 DUP3 ADD MLOAD PUSH2 0x2884 DUP3 DUP6 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP POP PUSH2 0x120 DUP1 DUP3 ADD MLOAD PUSH2 0x2899 DUP3 DUP6 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP1 DUP3 MLOAD AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP4 ADD MLOAD AND PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x80 DUP4 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0xA0 DUP4 ADD MLOAD AND PUSH1 0xA0 DUP5 ADD MSTORE DUP1 PUSH1 0xC0 DUP4 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE DUP1 PUSH1 0xE0 DUP4 ADD MLOAD AND PUSH1 0xE0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x292E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26F4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2964 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2948 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4F76657220446966662033 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x27BB32B9102ABA34B634BD30BA34B7B7 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x27BB32B9102334B730B6102234B333 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x27BB32B91025B4B735902930BA329019 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x4F766572204D61782052617465 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x27BB32B9102234B3331019 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x4F76657220446966662031 PUSH1 0xA8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x2A98 PUSH1 0x20 DUP4 ADD DUP5 MLOAD PUSH2 0x289F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x2AAB PUSH2 0x120 DUP5 ADD DUP3 PUSH2 0x2789 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2ABF PUSH2 0x140 DUP5 ADD DUP3 PUSH2 0x27E1 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2AD3 PUSH2 0x280 DUP5 ADD DUP3 PUSH2 0x2900 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2AE7 PUSH2 0x2A0 DUP5 ADD DUP3 PUSH2 0x2783 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x320 DUP1 PUSH2 0x2C0 DUP6 ADD MSTORE PUSH2 0x2B05 PUSH2 0x340 DUP6 ADD DUP4 PUSH2 0x2796 JUMP JUMPDEST SWAP2 POP PUSH1 0xC0 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP7 DUP6 SUB ADD PUSH2 0x2E0 DUP8 ADD MSTORE PUSH2 0x2B24 DUP5 DUP4 PUSH2 0x2796 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x300 DUP8 ADD MSTORE PUSH2 0x2B42 DUP5 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD DUP4 DUP8 ADD MSTORE POP PUSH2 0x2B60 DUP4 DUP3 PUSH2 0x2739 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2B95 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BB1 JUMPI INVALID JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2BC9 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC AND EXTCODECOPY CALLER 0x5D 0xCA JUMP DUP3 SWAP6 SIGNEXTEND CALLVALUE CHAINID SWAP5 DUP9 0xF SHL DIFFICULTY 0x2C SHL 0xE4 0xB7 DUP4 PUSH13 0xC1349E0BC941A9842564736F6C PUSH4 0x43000706 STOP CALLER ", "sha1": "ae673c860bba16c53f907742e68a6906a9f73860", "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport {\n    InterestRateCurveSettings,\n    InterestRateParameters,\n    CashGroupSettings,\n    MarketParameters,\n    AssetRateStorage\n} from \"../../../global/Types.sol\";\nimport {Constants} from \"../../../global/Constants.sol\";\nimport {SafeUint256} from \"../../../math/SafeUint256.sol\";\nimport {SafeInt256} from \"../../../math/SafeInt256.sol\";\n\nimport {NotionalProxy} from \"../../../../interfaces/notional/NotionalProxy.sol\";\nimport {IPrimeCashHoldingsOracle} from \"../../../../interfaces/notional/IPrimeCashHoldingsOracle.sol\";\nimport {InterestRateCurve} from \"../../../internal/markets/InterestRateCurve.sol\";\n\nstruct TotalfCashDebt {\n    uint40 maturity;\n    uint80 totalfCashDebt;\n}\n\nstruct CurrencySettings {\n    InterestRateCurveSettings primeDebtCurve;\n    IPrimeCashHoldingsOracle primeCashOracle;\n    CashGroupSettings cashGroupSettings;\n    uint8 rateOracleTimeWindow5Min;\n    bool allowPrimeDebt;\n    string underlyingName;\n    string underlyingSymbol;\n    InterestRateCurveSettings[] fCashCurves;\n    TotalfCashDebt[] fCashDebts;\n}\n\ncontract MigrationSettings {\n    using SafeUint256 for uint256;\n    using SafeInt256 for int256;\n\n    NotionalProxy public immutable NOTIONAL;\n    address public immutable NOTIONAL_MANAGER;\n\n    // @todo reduce this kink diff once we have more proper values for the tests\n    uint256 internal constant MAX_KINK_DIFF = 250 * uint256(1e9 / 10000); // 250 * Constants.BASIS_POINT\n\n    mapping(uint256 => CurrencySettings) internal currencySettings;\n\n    constructor(address _notional, address _manager) {\n        NOTIONAL = NotionalProxy(_notional);\n        NOTIONAL_MANAGER = _manager;\n    }\n\n    function getCurrencySettings(uint256 currencyId) external view returns (CurrencySettings memory) {\n        return currencySettings[currencyId];\n    }\n\n    /// @notice Sets migration settings for the given currency id\n    function setMigrationSettings(uint256 currencyId, CurrencySettings memory settings) external {\n        // Only the Notional manager can set migration settings\n        require(msg.sender == NOTIONAL_MANAGER);\n\n        CurrencySettings storage _storageSettings = currencySettings[currencyId];\n        _storageSettings.primeDebtCurve = settings.primeDebtCurve;\n        _storageSettings.primeCashOracle = settings.primeCashOracle;\n        _storageSettings.cashGroupSettings = settings.cashGroupSettings;\n        _storageSettings.allowPrimeDebt = settings.allowPrimeDebt;\n        _storageSettings.underlyingName = settings.underlyingName;\n        _storageSettings.underlyingSymbol = settings.underlyingSymbol;\n        _storageSettings.rateOracleTimeWindow5Min = settings.rateOracleTimeWindow5Min;\n\n        // Clear existing array\n        uint256 existingLength = _storageSettings.fCashCurves.length;\n        for (uint256 i; i < existingLength; i++)  _storageSettings.fCashCurves.pop();\n\n        for (uint256 i; i < settings.fCashCurves.length; i++) {\n            _storageSettings.fCashCurves.push(settings.fCashCurves[i]);\n        }\n\n        // Clear existing array\n        existingLength = _storageSettings.fCashDebts.length;\n        for (uint256 i; i < existingLength; i++)  _storageSettings.fCashDebts.pop();\n\n        for (uint256 i; i < settings.fCashDebts.length; i++) {\n            _storageSettings.fCashDebts.push(settings.fCashDebts[i]);\n        }\n    }\n\n    /// @notice Special method for updating the total fCash debt since this may change as we\n    /// closer to the actual upgrade\n    function updateTotalfCashDebt(uint256 currencyId, TotalfCashDebt[] memory fCashDebts) external {\n        // Allow the Notional Manager to set fCash debts closer to upgrade\n        require(msg.sender == NOTIONAL_MANAGER);\n        CurrencySettings storage _storageSettings = currencySettings[currencyId];\n\n        // Clear existing array\n        uint256 existingLength = _storageSettings.fCashDebts.length;\n        for (uint256 i; i < existingLength; i++)  _storageSettings.fCashDebts.pop();\n\n        for (uint256 i; i < fCashDebts.length; i++) {\n            _storageSettings.fCashDebts.push(fCashDebts[i]);\n        }\n    }\n\n    /// @notice Simulates the fCash curve update\n    function getfCashCurveUpdate(uint16 currencyId, bool checkRateDiff) external view returns (\n        InterestRateCurveSettings[] memory finalCurves,\n        uint256[] memory finalRates\n    ) {\n        CurrencySettings memory settings = currencySettings[currencyId];\n        (/* */, AssetRateStorage memory ar) = NOTIONAL.getRateStorage(currencyId);\n        MarketParameters[] memory markets = NOTIONAL.getActiveMarkets(currencyId);\n\n        // Use the original asset rates to calculate the cash to underlying exchange rates\n        int256 assetRateDecimals = int256(10 ** (10 + ar.underlyingDecimalPlaces));\n        int256 assetRate = address(ar.rateOracle) != address(0) ? \n            ar.rateOracle.getExchangeRateView() :\n            // If rateOracle is not set then use the unit rate\n            assetRateDecimals;\n\n        return _calculateInterestRateCurves(\n            settings.fCashCurves, markets, checkRateDiff, assetRateDecimals, assetRate\n        );\n    }\n\n    function _calculateInterestRateCurves(\n        InterestRateCurveSettings[] memory fCashCurves,\n        MarketParameters[] memory markets,\n        bool checkFinalRate,\n        int256 assetRateDecimals,\n        int256 assetRate\n    ) internal view returns (InterestRateCurveSettings[] memory finalCurves, uint256[] memory finalRates) {\n        // These will be the curves that are set in storage after this method exits\n        finalCurves = new InterestRateCurveSettings[](fCashCurves.length);\n        // This is just used for the external view method\n        finalRates = new uint256[](fCashCurves.length);\n\n        for (uint256 i = 0; i < fCashCurves.length; i++) {\n            InterestRateCurveSettings memory irCurve = fCashCurves[i];\n            MarketParameters memory market = markets[i];\n            \n            // Interest rate parameter object for local calculations\n            uint256 maxRate = InterestRateCurve.calculateMaxRate(irCurve.maxRateUnits);\n            InterestRateParameters memory irParams = InterestRateParameters({\n                kinkUtilization1: uint256(irCurve.kinkUtilization1) * uint256(Constants.RATE_PRECISION / Constants.PERCENTAGE_DECIMALS),\n                kinkUtilization2: uint256(irCurve.kinkUtilization2) * uint256(Constants.RATE_PRECISION / Constants.PERCENTAGE_DECIMALS),\n                maxRate: maxRate,\n                kinkRate1: maxRate * irCurve.kinkRate1 / 256,\n                kinkRate2: maxRate * irCurve.kinkRate2 / 256,\n                // Fees are not used in this method\n                minFeeRate: 0, maxFeeRate: 0, feeRatePercent: 0\n            });\n\n            // Market utilization cannot change because cash / fCash is already set in the market\n            uint256 utilization = InterestRateCurve.getfCashUtilization(\n                0, market.totalfCash, market.totalPrimeCash.mul(assetRate).div(assetRateDecimals)\n            );\n\n            require(utilization < uint256(Constants.RATE_PRECISION), \"Over Utilization\");\n            // Cannot overflow the new market's max rate\n            require(market.lastImpliedRate < irParams.maxRate, \"Over Max Rate\");\n            uint256 kinkMidpoint = (irParams.kinkUtilization2 - irParams.kinkUtilization1) / 2\n                + irParams.kinkUtilization1;\n\n            if (utilization <= irParams.kinkUtilization1) {\n                // interestRate = (utilization * kinkRate1) / kinkUtilization1\n                // kinkRate1 = (interestRate * kinkUtilization1) / utilization\n                uint256 newKinkRate1 = market.lastImpliedRate\n                    .mul(irParams.kinkUtilization1)\n                    .div(utilization);\n                require(newKinkRate1 < irParams.kinkRate2, \"Over Kink Rate 2\");\n\n                // Check that the new curve's kink rate does not excessively diverge from the intended value\n                if (checkFinalRate) {\n                    require(_absDiff(newKinkRate1, irParams.kinkRate1) < MAX_KINK_DIFF, \"Over Diff 1\");\n                }\n\n                irParams.kinkRate1 = newKinkRate1;\n                // Convert the interest rate back to the uint8 storage value\n                irCurve.kinkRate1 = (newKinkRate1 * 256 / maxRate).toUint8();\n            } else if (utilization < kinkMidpoint) { // Avoid divide by zero by using strictly less than\n                // If we are below the kinkMidpoint then modify kinkRate1 to adjust the fCash curve.\n\n                //                (utilization - kinkUtilization1) * (kinkRate2 - kinkRate1) \n                // interestRate = ---------------------------------------------------------- + kinkRate1\n                //                            (kinkUtilization2 - kinkUtilization1)\n                // ==> \n                //                interestRate * (kinkUtilization2 - kinkUtilization1) - kinkRate2 * (utilization - kinkUtilization1) \n                // kinkRate1 = ------------------------------------------------------------------------------------------------------\n                //                                                      (1 - utilization - kinkUtilization1)\n                uint256 numerator = market.lastImpliedRate\n                    .mulInRatePrecision(irParams.kinkUtilization2.sub(irParams.kinkUtilization1))\n                    .sub(irParams.kinkRate2.mulInRatePrecision(utilization.sub(irParams.kinkUtilization1)));\n                uint256 denominator = irParams.kinkUtilization2 - utilization; // no overflow checked above\n                uint256 newKinkRate1 = numerator.divInRatePrecision(denominator);\n                require(newKinkRate1 < irParams.kinkRate2, \"Over Kink Rate 2\");\n\n                if (checkFinalRate) {\n                    require(_absDiff(newKinkRate1, irParams.kinkRate1) < MAX_KINK_DIFF, \"Over Diff 2\");\n                }\n\n                irParams.kinkRate1 = newKinkRate1;\n                // Convert the interest rate back to the uint8 storage value\n                irCurve.kinkRate1 = (newKinkRate1 * 256 / maxRate).toUint8();\n            } else if (utilization < irParams.kinkUtilization2) { // Avoid divide by zero by using strictly less than\n                // If above the kinkMidpoint but below kinkUtilization2, adjust kinkRate2\n                //                (utilization - kinkUtilization1) * (kinkRate2 - kinkRate1) \n                // interestRate = ---------------------------------------------------------- + kinkRate1\n                //                            (kinkUtilization2 - kinkUtilization1)\n                // ==> \n                //                (interestRate - kinkRate1) * (kinkUtilization2 - kinkUtilization1) + kinkRate1 * (utilization - kinkUtilization1) \n                // kinkRate2 = -------------------------------------------------------------------------------------------------------------------\n                //                                                      (utilization - kinkUtilization1)\n                uint256 numerator = (market.lastImpliedRate.sub(irParams.kinkRate1))\n                    .mulInRatePrecision(irParams.kinkUtilization2.sub(irParams.kinkUtilization1))\n                    .add(irParams.kinkRate1.mulInRatePrecision(utilization.sub(irParams.kinkUtilization1)));\n                uint256 denominator = utilization - irParams.kinkUtilization1; // no overflow checked above\n                uint256 newKinkRate2 = numerator.divInRatePrecision(denominator);\n                require(newKinkRate2 < irParams.maxRate, \"Over Max Rate\");\n\n                if (checkFinalRate) {\n                    require(_absDiff(newKinkRate2, irParams.kinkRate2) < MAX_KINK_DIFF, \"Over Diff 2\");\n                }\n\n                irParams.kinkRate2 = newKinkRate2;\n                // Convert the interest rate back to the uint8 storage value\n                irCurve.kinkRate2 = (newKinkRate2 * 256 / maxRate).toUint8();\n            } else {\n                //                (utilization - kinkUtilization2) * (maxRate - kinkRate2) \n                // interestRate = ---------------------------------------------------------- + kinkRate2\n                //                                  (1 - kinkUtilization2)\n                // ==> \n                //                interestRate * (1 - kinkUtilization2) - maxRate * (utilization - kinkUtilization2) \n                // kinkRate2 = ------------------------------------------------------------------------------------\n                //                                          (1 - utilization)\n                uint256 numerator = market.lastImpliedRate\n                    .mulInRatePrecision(uint256(Constants.RATE_PRECISION).sub(irParams.kinkUtilization2))\n                    .sub(irParams.maxRate.mulInRatePrecision(utilization.sub(irParams.kinkUtilization2)));\n                uint256 denominator = uint256(Constants.RATE_PRECISION).sub(utilization);\n                uint256 newKinkRate2 = numerator.divInRatePrecision(denominator);\n                require(newKinkRate2 < irParams.maxRate, \"Over Max Rate\");\n\n                if (checkFinalRate) {\n                    require(_absDiff(newKinkRate2, irParams.kinkRate2) < MAX_KINK_DIFF, \"Over Diff 3\");\n                }\n\n                irParams.kinkRate2 = newKinkRate2;\n                irCurve.kinkRate2 = (newKinkRate2 * 256 / maxRate).toUint8();\n            }\n\n            uint256 newInterestRate = InterestRateCurve.getInterestRate(irParams, utilization);\n            if (checkFinalRate) {\n                // Check that the next interest rate is very close to the current market rate\n                require(_absDiff(newInterestRate, market.lastImpliedRate) < Constants.BASIS_POINT, \"Over Final Diff\");\n            }\n            finalCurves[i] = irCurve;\n            finalRates[i] = newInterestRate;\n        }\n    }\n\n    function _absDiff(uint256 a, uint256 b) private pure returns (uint256) {\n        return a < b ? b - a : a - b;\n    }\n}", "sourceMap": "1130:12917:11:-:0;;;1581:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1640:35:11;;;;;;;;1685:27;;;;;1130:12917;;14:179:74;95:13;;-1:-1:-1;;;;;137:31:74;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;1130:12917:11;;;;;;;;;;;;;;;;", "sourcePath": "contracts/external/patchfix/migrate-v3/MigrationSettings.sol", "type": "contract", "deployment": {"address": "0x5fbf4539A89fBd1E5d784DB3f7Ba6c394AC450fC", "chainid": "5", "blockHeight": 10202792}}