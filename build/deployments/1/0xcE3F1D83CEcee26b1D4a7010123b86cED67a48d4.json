{"abi": [], "allSourcePaths": {"100": "contracts/internal/nToken/nTokenSupply.sol", "101": "contracts/internal/pCash/PrimeCashExchangeRate.sol", "102": "contracts/internal/pCash/PrimeRateLib.sol", "103": "contracts/internal/pCash/PrimeSupplyCap.sol", "104": "contracts/internal/portfolio/BitmapAssetsHandler.sol", "105": "contracts/internal/portfolio/PortfolioHandler.sol", "109": "contracts/internal/valuation/AssetHandler.sol", "117": "contracts/math/ABDKMath64x64.sol", "118": "contracts/math/Bitmap.sol", "119": "contracts/math/FloatingPoint.sol", "120": "contracts/math/SafeInt256.sol", "121": "contracts/math/SafeUint256.sol", "171": "contracts/proxy/beacon/IBeacon.sol", "178": "interfaces/IEIP20NonStandard.sol", "180": "interfaces/IERC20.sol", "183": "interfaces/WETH9.sol", "187": "interfaces/aave/ILendingPool.sol", "189": "interfaces/chainlink/AggregatorInterface.sol", "190": "interfaces/chainlink/AggregatorV2V3Interface.sol", "191": "interfaces/chainlink/AggregatorV3Interface.sol", "192": "interfaces/compound/CErc20Interface.sol", "194": "interfaces/compound/CTokenInterface.sol", "199": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "200": "interfaces/notional/IRewarder.sol", "43": "contracts/external/actions/nTokenRedeemAction.sol", "72": "contracts/external/proxies/BaseERC4626Proxy.sol", "76": "contracts/global/Constants.sol", "77": "contracts/global/Deployments.sol", "78": "contracts/global/LibStorage.sol", "81": "contracts/global/Types.sol", "82": "contracts/internal/AccountContextHandler.sol", "83": "contracts/internal/Emitter.sol", "84": "contracts/internal/balances/BalanceHandler.sol", "85": "contracts/internal/balances/ExternalLending.sol", "86": "contracts/internal/balances/Incentives.sol", "87": "contracts/internal/balances/TokenHandler.sol", "88": "contracts/internal/balances/protocols/CompoundHandler.sol", "89": "contracts/internal/balances/protocols/GenericToken.sol", "93": "contracts/internal/markets/CashGroup.sol", "94": "contracts/internal/markets/DateTime.sol", "96": "contracts/internal/markets/InterestRateCurve.sol", "97": "contracts/internal/markets/Market.sol", "98": "contracts/internal/nToken/nTokenCalculations.sol", "99": "contracts/internal/nToken/nTokenHandler.sol"}, "ast": {"absolutePath": "contracts/external/actions/nTokenRedeemAction.sol", "exportedSymbols": {"AssetStorageState": [87489], "BalanceHandler": [40386], "BalanceState": [87627], "Bitmap": [69457], "BitmapAssetsHandler": [55423], "CashGroup": [46014], "CashGroupParameters": [87643], "Constants": [87456], "DateTime": [46652], "Emitter": [38972], "LibStorage": [35854], "Market": [49541], "MarketParameters": [87673], "PortfolioAsset": [87656], "PortfolioHandler": [56793], "PortfolioState": [87595], "PrimeCashExchangeRate": [53460], "SafeInt256": [70083], "SafeUint256": [70604], "TransferAssets": [56915], "ifCashStorage": [87817], "nTokenCalculations": [50336], "nTokenHandler": [51387], "nTokenPortfolio": [87561], "nTokenRedeemAction": [21551]}, "id": 21552, "license": "BSUL-1.1", "nodeType": "SourceUnit", "nodes": [{"id": 20480, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "37:23:43"}, {"id": 20481, "literals": ["abicoder", "v2"], "nodeType": "PragmaDirective", "src": "61:19:43"}, {"absolutePath": "contracts/global/Types.sol", "file": "../../global/Types.sol", "id": 20490, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 88111, "src": "82:208:43", "symbolAliases": [{"foreign": {"id": 20482, "name": "BalanceState", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "95:12:43", "typeDescriptions": {}}}, {"foreign": {"id": 20483, "name": "CashGroupParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "113:19:43", "typeDescriptions": {}}}, {"foreign": {"id": 20484, "name": "MarketParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "138:16:43", "typeDescriptions": {}}}, {"foreign": {"id": 20485, "name": "nTokenPortfolio", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "160:15:43", "typeDescriptions": {}}}, {"foreign": {"id": 20486, "name": "PortfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "181:14:43", "typeDescriptions": {}}}, {"foreign": {"id": 20487, "name": "PortfolioAsset", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "201:14:43", "typeDescriptions": {}}}, {"foreign": {"id": 20488, "name": "ifCashStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "221:13:43", "typeDescriptions": {}}}, {"foreign": {"id": 20489, "name": "AssetStorageState", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "240:17:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/global/Constants.sol", "file": "../../global/Constants.sol", "id": 20492, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 87457, "src": "291:53:43", "symbolAliases": [{"foreign": {"id": 20491, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "299:9:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/global/LibStorage.sol", "file": "../../global/LibStorage.sol", "id": 20494, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 35855, "src": "345:55:43", "symbolAliases": [{"foreign": {"id": 20493, "name": "LibStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "353:10:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeInt256.sol", "file": "../../math/SafeInt256.sol", "id": 20496, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 70084, "src": "401:53:43", "symbolAliases": [{"foreign": {"id": 20495, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "409:10:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeUint256.sol", "file": "../../math/SafeUint256.sol", "id": 20498, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 70605, "src": "455:55:43", "symbolAliases": [{"foreign": {"id": 20497, "name": "SafeUint256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "463:11:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/Bitmap.sol", "file": "../../math/Bitmap.sol", "id": 20500, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 69458, "src": "511:45:43", "symbolAliases": [{"foreign": {"id": 20499, "name": "Bitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "519:6:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/Emitter.sol", "file": "../../internal/Emitter.sol", "id": 20502, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 38973, "src": "558:51:43", "symbolAliases": [{"foreign": {"id": 20501, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "566:7:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/Market.sol", "file": "../../internal/markets/Market.sol", "id": 20504, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 49542, "src": "610:57:43", "symbolAliases": [{"foreign": {"id": 20503, "name": "Market", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "618:6:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/DateTime.sol", "file": "../../internal/markets/DateTime.sol", "id": 20506, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 46653, "src": "668:61:43", "symbolAliases": [{"foreign": {"id": 20505, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "676:8:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/CashGroup.sol", "file": "../../internal/markets/CashGroup.sol", "id": 20508, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 46015, "src": "730:63:43", "symbolAliases": [{"foreign": {"id": 20507, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "738:9:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/nToken/nTokenHandler.sol", "file": "../../internal/nToken/nTokenHandler.sol", "id": 20510, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 51388, "src": "794:70:43", "symbolAliases": [{"foreign": {"id": 20509, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "802:13:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/nToken/nTokenCalculations.sol", "file": "../../internal/nToken/nTokenCalculations.sol", "id": 20512, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 50337, "src": "865:80:43", "symbolAliases": [{"foreign": {"id": 20511, "name": "nTokenCalculations", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "873:18:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/PortfolioHandler.sol", "file": "../../internal/portfolio/PortfolioHandler.sol", "id": 20514, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 56794, "src": "946:79:43", "symbolAliases": [{"foreign": {"id": 20513, "name": "PortfolioHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "954:16:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/TransferAssets.sol", "file": "../../internal/portfolio/TransferAssets.sol", "id": 20516, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 56916, "src": "1026:75:43", "symbolAliases": [{"foreign": {"id": 20515, "name": "TransferAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1034:14:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/BitmapAssetsHandler.sol", "file": "../../internal/portfolio/BitmapAssetsHandler.sol", "id": 20518, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 55424, "src": "1102:85:43", "symbolAliases": [{"foreign": {"id": 20517, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1110:19:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/balances/BalanceHandler.sol", "file": "../../internal/balances/BalanceHandler.sol", "id": 20520, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 40387, "src": "1188:74:43", "symbolAliases": [{"foreign": {"id": 20519, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1196:14:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/pCash/PrimeCashExchangeRate.sol", "file": "../../internal/pCash/PrimeCashExchangeRate.sol", "id": 20522, "nodeType": "ImportDirective", "scope": 21552, "sourceUnit": 53461, "src": "1263:85:43", "symbolAliases": [{"foreign": {"id": 20521, "name": "PrimeCashExchangeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1271:21:43", "typeDescriptions": {}}}], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "fullyImplemented": true, "id": 21551, "linearizedBaseContracts": [21551], "name": "nTokenRedeemAction", "nodeType": "ContractDefinition", "nodes": [{"id": 20525, "libraryName": {"id": 20523, "name": "SafeInt256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70083, "src": "1389:10:43", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeInt256_$70083", "typeString": "library SafeInt256"}}, "nodeType": "UsingForDirective", "src": "1383:28:43", "typeName": {"id": 20524, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1404:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 20528, "libraryName": {"id": 20526, "name": "SafeUint256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70604, "src": "1422:11:43", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeUint256_$70604", "typeString": "library SafeUint256"}}, "nodeType": "UsingForDirective", "src": "1416:30:43", "typeName": {"id": 20527, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1438:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 20531, "libraryName": {"id": 20529, "name": "Bitmap", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 69457, "src": "1457:6:43", "typeDescriptions": {"typeIdentifier": "t_contract$_Bitmap_$69457", "typeString": "library Bitmap"}}, "nodeType": "UsingForDirective", "src": "1451:25:43", "typeName": {"id": 20530, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1468:7:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}}, {"id": 20534, "libraryName": {"id": 20532, "name": "BalanceHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 40386, "src": "1487:14:43", "typeDescriptions": {"typeIdentifier": "t_contract$_BalanceHandler_$40386", "typeString": "library BalanceHandler"}}, "nodeType": "UsingForDirective", "src": "1481:38:43", "typeName": {"id": 20533, "name": "BalanceState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87627, "src": "1506:12:43", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceState_$87627_storage_ptr", "typeString": "struct BalanceState"}}}, {"id": 20537, "libraryName": {"id": 20535, "name": "Market", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 49541, "src": "1530:6:43", "typeDescriptions": {"typeIdentifier": "t_contract$_Market_$49541", "typeString": "library Market"}}, "nodeType": "UsingForDirective", "src": "1524:34:43", "typeName": {"id": 20536, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "1541:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}}, {"id": 20540, "libraryName": {"id": 20538, "name": "CashGroup", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 46014, "src": "1569:9:43", "typeDescriptions": {"typeIdentifier": "t_contract$_CashGroup_$46014", "typeString": "library CashGroup"}}, "nodeType": "UsingForDirective", "src": "1563:40:43", "typeName": {"id": 20539, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "1583:19:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}}, {"id": 20543, "libraryName": {"id": 20541, "name": "PortfolioHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56793, "src": "1614:16:43", "typeDescriptions": {"typeIdentifier": "t_contract$_PortfolioHandler_$56793", "typeString": "library PortfolioHandler"}}, "nodeType": "UsingForDirective", "src": "1608:42:43", "typeName": {"id": 20542, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87595, "src": "1635:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_storage_ptr", "typeString": "struct PortfolioState"}}}, {"id": 20546, "libraryName": {"id": 20544, "name": "nTokenHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 51387, "src": "1661:13:43", "typeDescriptions": {"typeIdentifier": "t_contract$_nTokenHandler_$51387", "typeString": "library nTokenHandler"}}, "nodeType": "UsingForDirective", "src": "1655:40:43", "typeName": {"id": 20545, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "1679:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}}, {"body": {"id": 20581, "nodeType": "Block", "src": "2220:380:43", "statements": [{"assignments": [20559, 20562], "declarations": [{"constant": false, "id": 20559, "mutability": "mutable", "name": "totalPrimeCash", "nodeType": "VariableDeclaration", "scope": 20581, "src": "2231:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20558, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2231:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20562, "mutability": "mutable", "name": "newifCashAssets", "nodeType": "VariableDeclaration", "scope": 20581, "src": "2254:39:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 20560, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "2254:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 20561, "nodeType": "ArrayTypeName", "src": "2254:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "id": 20570, "initialValue": {"arguments": [{"id": 20564, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20549, "src": "2328:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20565, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20551, "src": "2349:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 20566, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20553, "src": "2377:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"hexValue": "74727565", "id": 20567, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2422:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"hexValue": "66616c7365", "id": 20568, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2462:5:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 20563, "name": "_redeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20738, "src": "2297:7:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_int256_$_t_bool_$_t_bool_$returns$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (address,uint16,int256,bool,bool) returns (int256,struct PortfolioAsset memory[] memory)"}}, "id": 20569, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": ["account", "currencyId", "tokensToRedeem", "sellTokenAssets", "acceptResidualAssets"], "nodeType": "FunctionCall", "src": "2297:181:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(int256,struct PortfolioAsset memory[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "2230:248:43"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20572, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20562, "src": "2497:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 20573, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "2497:22:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 20574, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2523:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2497:27:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f742072656465656d207669612062617463682c20726573696475616c", "id": 20576, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2526:35:43", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fcdc8ec4d665e965ead51aaee0401fc0c2cd0534e85bd6d78ee3361e42fc3e12", "typeString": "literal_string \"Cannot redeem via batch, residual\""}, "value": "Cannot redeem via batch, residual"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fcdc8ec4d665e965ead51aaee0401fc0c2cd0534e85bd6d78ee3361e42fc3e12", "typeString": "literal_string \"Cannot redeem via batch, residual\""}], "id": 20571, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2489:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20577, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2489:73:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20578, "nodeType": "ExpressionStatement", "src": "2489:73:43"}, {"expression": {"id": 20579, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20559, "src": "2579:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20557, "id": 20580, "nodeType": "Return", "src": "2572:21:43"}]}, "documentation": {"id": 20547, "nodeType": "StructuredDocumentation", "src": "1701:379:43", "text": "@notice When redeeming nTokens via the batch they must all be sold to cash and this\n method will return the amount of asset cash sold.\n @param currencyId the currency associated the nToken\n @param tokensToRedeem the amount of nTokens to convert to cash\n @return amount of asset cash to return to the account, denominated in internal token decimals"}, "functionSelector": "0e22aaa3", "id": 20582, "implemented": true, "kind": "function", "modifiers": [], "name": "nTokenRedeemViaBatch", "nodeType": "FunctionDefinition", "parameters": {"id": 20554, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20549, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 20582, "src": "2115:15:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20548, "name": "address", "nodeType": "ElementaryTypeName", "src": "2115:7:43", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20551, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 20582, "src": "2132:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 20550, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "2132:6:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 20553, "mutability": "mutable", "name": "tokensToRedeem", "nodeType": "VariableDeclaration", "scope": 20582, "src": "2151:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20552, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2151:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "2114:59:43"}, "returnParameters": {"id": 20557, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20556, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20582, "src": "2208:6:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20555, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2208:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "2207:8:43"}, "scope": 21551, "src": "2085:515:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 20737, "nodeType": "Block", "src": "2828:2853:43", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20603, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20601, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "2846:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20602, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2863:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2846:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 20600, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2838:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 20604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2838:27:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20605, "nodeType": "ExpressionStatement", "src": "2838:27:43"}, {"assignments": [20607], "declarations": [{"constant": false, "id": 20607, "mutability": "mutable", "name": "nToken", "nodeType": "VariableDeclaration", "scope": 20737, "src": "2875:29:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio"}, "typeName": {"id": 20606, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "2875:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}, "visibility": "internal"}], "id": 20608, "nodeType": "VariableDeclarationStatement", "src": "2875:29:43"}, {"expression": {"arguments": [{"id": 20612, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20586, "src": "2949:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 20609, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "2914:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20611, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadNTokenPortfolioStateful", "nodeType": "MemberAccess", "referencedDeclaration": 51338, "src": "2914:34:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_uint16_$returns$__$bound_to$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$", "typeString": "function (struct nTokenPortfolio memory,uint16)"}}, "id": 20613, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2914:46:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20614, "nodeType": "ExpressionStatement", "src": "2914:46:43"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20621, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 20616, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3073:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20617, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "getNextSettleTime", "nodeType": "MemberAccess", "referencedDeclaration": 51386, "src": "3073:24:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$", "typeString": "function (struct nTokenPortfolio memory) pure returns (uint256)"}}, "id": 20618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3073:26:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"expression": {"id": 20619, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3102:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20620, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3102:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3073:44:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526571756972657320736574746c656d656e74", "id": 20622, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3119:21:43", "typeDescriptions": {"typeIdentifier": "t_stringliteral_180c5abcfea1a5018e4210940d7229c1d303b7c9d5d04ad007cdeedb21e09700", "typeString": "literal_string \"Requires settlement\""}, "value": "Requires settlement"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_180c5abcfea1a5018e4210940d7229c1d303b7c9d5d04ad007cdeedb21e09700", "typeString": "literal_string \"Requires settlement\""}], "id": 20615, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3065:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3065:76:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20624, "nodeType": "ExpressionStatement", "src": "3065:76:43"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20629, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20626, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "3159:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 20627, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3176:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20628, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 87552, "src": "3176:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "3159:35:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f742072656465656d", "id": 20630, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3196:15:43", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3f9d46f3718f8dd4e42310fba1ba9f1ed0028a77587188bd96b9103ab42f6ae2", "typeString": "literal_string \"Cannot redeem\""}, "value": "Cannot redeem"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3f9d46f3718f8dd4e42310fba1ba9f1ed0028a77587188bd96b9103ab42f6ae2", "typeString": "literal_string \"Cannot redeem\""}], "id": 20625, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3151:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20631, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3151:61:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20632, "nodeType": "ExpressionStatement", "src": "3151:61:43"}, {"assignments": [20636], "declarations": [{"constant": false, "id": 20636, "mutability": "mutable", "name": "newifCashAssets", "nodeType": "VariableDeclaration", "scope": 20737, "src": "3222:39:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 20634, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "3222:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 20635, "nodeType": "ArrayTypeName", "src": "3222:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "id": 20637, "nodeType": "VariableDeclarationStatement", "src": "3222:39:43"}, {"assignments": [20639], "declarations": [{"constant": false, "id": 20639, "mutability": "mutable", "name": "ifCashBits", "nodeType": "VariableDeclaration", "scope": 20737, "src": "3326:18:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 20638, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3326:7:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 20653, "initialValue": {"arguments": [{"expression": {"id": 20642, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3399:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20643, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "3399:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20644, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20586, "src": "3432:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 20645, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3456:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20646, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastInitializedTime", "nodeType": "MemberAccess", "referencedDeclaration": 87556, "src": "3456:26:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 20647, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3496:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20648, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3496:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"expression": {"id": 20649, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3525:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20650, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "3525:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 20651, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxMarketIndex", "nodeType": "MemberAccess", "referencedDeclaration": 87638, "src": "3525:31:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 20640, "name": "nTokenCalculations", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50336, "src": "3347:18:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenCalculations_$50336_$", "typeString": "type(library nTokenCalculations)"}}, "id": 20641, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getNTokenifCashBits", "nodeType": "MemberAccess", "referencedDeclaration": 50335, "src": "3347:38:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$", "typeString": "function (address,uint256,uint256,uint256,uint256) view returns (bytes32)"}}, "id": 20652, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3347:219:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3326:240:43"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 20658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 20656, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20654, "name": "ifCashBits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "3581:10:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 20655, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3595:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3581:15:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"id": 20657, "name": "acceptResidualAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20592, "src": "3600:20:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3581:39:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20678, "nodeType": "IfStatement", "src": "3577:642:43", "trueBody": {"id": 20677, "nodeType": "Block", "src": "3622:597:43", "statements": [{"expression": {"id": 20671, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20659, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20636, "src": "3722:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 20661, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3789:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20662, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "3789:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20663, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20586, "src": "3826:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 20664, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3854:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20665, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastInitializedTime", "nodeType": "MemberAccess", "referencedDeclaration": 87556, "src": "3854:26:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20666, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "3898:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 20667, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "3930:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20668, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 87552, "src": "3930:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20669, "name": "ifCashBits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "3966:10:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 20660, "name": "_reduceifCashAssetsProportional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21550, "src": "3740:31:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_int256_$_t_int256_$_t_bytes32_$returns$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (address,uint16,uint256,int256,int256,bytes32) returns (struct PortfolioAsset memory[] memory)"}}, "id": 20670, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3740:250:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "src": "3722:268:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 20672, "nodeType": "ExpressionStatement", "src": "3722:268:43"}, {"expression": {"id": 20675, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20673, "name": "ifCashBits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "4194:10:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 20674, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4207:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4194:14:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 20676, "nodeType": "ExpressionStatement", "src": "4194:14:43"}]}}, {"assignments": [20683, 20686], "declarations": [{"constant": false, "id": 20683, "mutability": "mutable", "name": "tokensToWithdraw", "nodeType": "VariableDeclaration", "scope": 20737, "src": "4445:32:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20681, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4445:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20682, "nodeType": "ArrayTypeName", "src": "4445:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20686, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 20737, "src": "4479:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20684, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4479:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20685, "nodeType": "ArrayTypeName", "src": "4479:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}], "id": 20695, "initialValue": {"arguments": [{"id": 20689, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "4565:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, {"id": 20690, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "4573:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 20691, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4589:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20692, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4589:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20693, "name": "ifCashBits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "4606:10:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 20687, "name": "nTokenCalculations", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50336, "src": "4507:18:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenCalculations_$50336_$", "typeString": "type(library nTokenCalculations)"}}, "id": 20688, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getLiquidityTokenWithdraw", "nodeType": "MemberAccess", "referencedDeclaration": 50108, "src": "4507:44:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_int256_$_t_uint256_$_t_bytes32_$returns$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$", "typeString": "function (struct nTokenPortfolio memory,int256,uint256,bytes32) view returns (int256[] memory,int256[] memory)"}}, "id": 20694, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4507:119:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$", "typeString": "tuple(int256[] memory,int256[] memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "4444:182:43"}, {"assignments": [20697], "declarations": [{"constant": false, "id": 20697, "mutability": "mutable", "name": "totalPrimeCash", "nodeType": "VariableDeclaration", "scope": 20737, "src": "4854:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20696, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4854:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20709, "initialValue": {"arguments": [{"id": 20699, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "4911:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, {"id": 20700, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "4931:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20701, "name": "tokensToWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20683, "src": "4959:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"id": 20702, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20686, "src": "4989:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 20705, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20703, "name": "ifCashBits", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20639, "src": "5011:10:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 20704, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5025:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "5011:15:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"expression": {"id": 20706, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5111:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 20707, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5111:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 20698, "name": "_reduceLiquidAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20886, "src": "4878:19:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_int256_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$returns$_t_int256_$", "typeString": "function (struct nTokenPortfolio memory,int256,int256[] memory,int256[] memory,bool,uint256) returns (int256)"}}, "id": 20708, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4878:258:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "4854:282:43"}, {"expression": {"arguments": [{"id": 20713, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20584, "src": "5382:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20714, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20586, "src": "5391:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 20715, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20697, "src": "5403:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20716, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20588, "src": "5419:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20710, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38972, "src": "5359:7:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Emitter_$38972_$", "typeString": "type(library Emitter)"}}, "id": 20712, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "emitNTokenBurn", "nodeType": "MemberAccess", "referencedDeclaration": 38179, "src": "5359:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,int256,int256)"}}, "id": 20717, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5359:75:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20718, "nodeType": "ExpressionStatement", "src": "5359:75:43"}, {"expression": {"id": 20731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 20719, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20697, "src": "5445:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20720, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20636, "src": "5461:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}], "id": 20721, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "5444:33:43", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(int256,struct PortfolioAsset memory[] memory)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20723, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20607, "src": "5516:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, {"id": 20724, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20584, "src": "5524:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 20725, "name": "sellTokenAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20590, "src": "5533:15:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 20726, "name": "acceptResidualAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20592, "src": "5550:20:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"id": 20727, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20697, "src": "5572:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20728, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20686, "src": "5588:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"id": 20729, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20636, "src": "5598:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}], "id": 20722, "name": "_resolveResidualAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20801, "src": "5480:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_address_$_t_bool_$_t_bool_$_t_int256_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$returns$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (struct nTokenPortfolio memory,address,bool,bool,int256,int256[] memory,struct PortfolioAsset memory[] memory) returns (int256,struct PortfolioAsset memory[] memory)"}}, "id": 20730, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5480:143:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(int256,struct PortfolioAsset memory[] memory)"}}, "src": "5444:179:43", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20732, "nodeType": "ExpressionStatement", "src": "5444:179:43"}, {"expression": {"components": [{"id": 20733, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20697, "src": "5642:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20734, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20636, "src": "5658:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}], "id": 20735, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5641:33:43", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(int256,struct PortfolioAsset memory[] memory)"}}, "functionReturnParameters": 20599, "id": 20736, "nodeType": "Return", "src": "5634:40:43"}]}, "id": 20738, "implemented": true, "kind": "function", "modifiers": [], "name": "_redeem", "nodeType": "FunctionDefinition", "parameters": {"id": 20593, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20584, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2632:15:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20583, "name": "address", "nodeType": "ElementaryTypeName", "src": "2632:7:43", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20586, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2657:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 20585, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "2657:6:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 20588, "mutability": "mutable", "name": "tokensToRedeem", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2684:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20587, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2684:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20590, "mutability": "mutable", "name": "sellTokenAssets", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2715:20:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20589, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2715:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 20592, "mutability": "mutable", "name": "acceptResidualAssets", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2745:25:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20591, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2745:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2622:154:43"}, "returnParameters": {"id": 20599, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20595, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2795:6:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20594, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2795:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20598, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20738, "src": "2803:23:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 20596, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "2803:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 20597, "nodeType": "ArrayTypeName", "src": "2803:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "src": "2794:33:43"}, "scope": 21551, "src": "2606:3075:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 20800, "nodeType": "Block", "src": "6019:465:43", "statements": [{"assignments": [20763], "declarations": [{"constant": false, "id": 20763, "mutability": "mutable", "name": "netfCashRemaining", "nodeType": "VariableDeclaration", "scope": 20800, "src": "6029:22:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20762, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6029:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 20765, "initialValue": {"hexValue": "74727565", "id": 20764, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6054:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "nodeType": "VariableDeclarationStatement", "src": "6029:29:43"}, {"condition": {"id": 20766, "name": "sellTokenAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20744, "src": "6072:15:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20788, "nodeType": "IfStatement", "src": "6068:300:43", "trueBody": {"id": 20787, "nodeType": "Block", "src": "6089:279:43", "statements": [{"assignments": [20768], "declarations": [{"constant": false, "id": 20768, "mutability": "mutable", "name": "primeCash", "nodeType": "VariableDeclaration", "scope": 20787, "src": "6103:16:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20767, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6103:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20769, "nodeType": "VariableDeclarationStatement", "src": "6103:16:43"}, {"expression": {"id": 20778, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 20770, "name": "primeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20768, "src": "6222:9:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20771, "name": "netfCashRemaining", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20763, "src": "6233:17:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 20772, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "6221:30:43", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_bool_$", "typeString": "tuple(int256,bool)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20774, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20740, "src": "6271:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, {"id": 20775, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20751, "src": "6279:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"id": 20776, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20742, "src": "6289:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 20773, "name": "_sellfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21232, "src": "6254:16:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_address_$returns$_t_int256_$_t_bool_$", "typeString": "function (struct nTokenPortfolio memory,int256[] memory,address) returns (int256,bool)"}}, "id": 20777, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6254:43:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_bool_$", "typeString": "tuple(int256,bool)"}}, "src": "6221:76:43", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20779, "nodeType": "ExpressionStatement", "src": "6221:76:43"}, {"expression": {"id": 20785, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20780, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20748, "src": "6311:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20783, "name": "primeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20768, "src": "6347:9:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20781, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20748, "src": "6328:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20782, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "6328:18:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20784, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6328:29:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "6311:46:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20786, "nodeType": "ExpressionStatement", "src": "6311:46:43"}]}}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 20792, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20790, "name": "netfCashRemaining", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20763, "src": "6386:17:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "66616c7365", "id": 20791, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6407:5:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "6386:26:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "526573696475616c73", "id": 20793, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6414:11:43", "typeDescriptions": {"typeIdentifier": "t_stringliteral_987c421d59c6096fae0119e6ed089e9b9e53fe82c99764a6b62e2692fa661a02", "typeString": "literal_string \"Residuals\""}, "value": "Residuals"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_987c421d59c6096fae0119e6ed089e9b9e53fe82c99764a6b62e2692fa661a02", "typeString": "literal_string \"Residuals\""}], "id": 20789, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6378:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20794, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6378:48:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20795, "nodeType": "ExpressionStatement", "src": "6378:48:43"}, {"expression": {"components": [{"id": 20796, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20748, "src": "6445:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20797, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20754, "src": "6461:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}], "id": 20798, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "6444:33:43", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "tuple(int256,struct PortfolioAsset memory[] memory)"}}, "functionReturnParameters": 20761, "id": 20799, "nodeType": "Return", "src": "6437:40:43"}]}, "id": 20801, "implemented": true, "kind": "function", "modifiers": [], "name": "_resolveResidualAssets", "nodeType": "FunctionDefinition", "parameters": {"id": 20755, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20740, "mutability": "mutable", "name": "nToken", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5728:29:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio"}, "typeName": {"id": 20739, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "5728:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}, "visibility": "internal"}, {"constant": false, "id": 20742, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5767:15:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 20741, "name": "address", "nodeType": "ElementaryTypeName", "src": "5767:7:43", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 20744, "mutability": "mutable", "name": "sellTokenAssets", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5792:20:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20743, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5792:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 20746, "mutability": "mutable", "name": "acceptResidualAssets", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5822:25:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20745, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5822:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 20748, "mutability": "mutable", "name": "totalPrimeCash", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5857:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20747, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5857:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20751, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5888:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20749, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5888:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20750, "nodeType": "ArrayTypeName", "src": "5888:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20754, "mutability": "mutable", "name": "newifCashAssets", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5922:39:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 20752, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "5922:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 20753, "nodeType": "ArrayTypeName", "src": "5922:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "src": "5718:249:43"}, "returnParameters": {"id": 20761, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20757, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5986:6:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20756, "name": "int256", "nodeType": "ElementaryTypeName", "src": "5986:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20760, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 20801, "src": "5994:23:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 20758, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "5994:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 20759, "nodeType": "ArrayTypeName", "src": "5994:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "src": "5985:33:43"}, "scope": 21551, "src": "5687:797:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 20885, "nodeType": "Block", "src": "7310:1168:43", "statements": [{"expression": {"id": 20831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20821, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "7552:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 20828, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7613:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20829, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 87552, "src": "7613:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 20825, "name": "nTokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20806, "src": "7592:15:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 20822, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7569:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20823, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 87554, "src": "7569:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20824, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69646, "src": "7569:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20826, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7569:39:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20827, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69676, "src": "7569:43:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20830, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7569:63:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7552:80:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20832, "nodeType": "ExpressionStatement", "src": "7552:80:43"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20833, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "7646:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20834, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7663:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7646:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 20859, "nodeType": "IfStatement", "src": "7642:300:43", "trueBody": {"id": 20858, "nodeType": "Block", "src": "7666:276:43", "statements": [{"expression": {"id": 20844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20836, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7680:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20838, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 87554, "src": "7680:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20842, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "7729:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 20839, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7701:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20840, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 87554, "src": "7701:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20841, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "subNoNeg", "nodeType": "MemberAccess", "referencedDeclaration": 69785, "src": "7701:27:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7701:43:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "7680:64:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20845, "nodeType": "ExpressionStatement", "src": "7680:64:43"}, {"expression": {"arguments": [{"expression": {"id": 20849, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7817:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20850, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "7817:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"expression": {"id": 20851, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7854:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20852, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "7854:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 20853, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "7854:27:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 20854, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "7899:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20855, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 87554, "src": "7899:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20846, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40386, "src": "7758:14:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$40386_$", "typeString": "type(library BalanceHandler)"}}, "id": 20848, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setBalanceStorageForNToken", "nodeType": "MemberAccess", "referencedDeclaration": 39743, "src": "7758:41:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_int256_$returns$__$", "typeString": "function (address,uint16,int256)"}}, "id": 20856, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7758:173:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20857, "nodeType": "ExpressionStatement", "src": "7758:173:43"}]}}, {"expression": {"id": 20872, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20860, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "8102:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"id": 20864, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "8174:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, {"id": 20865, "name": "nTokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20806, "src": "8182:15:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20866, "name": "tokensToWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20809, "src": "8199:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"id": 20867, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20812, "src": "8217:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, {"id": 20868, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20816, "src": "8227:9:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 20869, "name": "mustCalculatefCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20814, "src": "8238:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 20863, "name": "_removeLiquidityTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21109, "src": "8151:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_nTokenPortfolio_$87561_memory_ptr_$_t_int256_$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_int256_$", "typeString": "function (struct nTokenPortfolio memory,int256,int256[] memory,int256[] memory,uint256,bool) returns (int256)"}}, "id": 20870, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8151:106:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20861, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "8119:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "8119:18:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20871, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8119:148:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "8102:165:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20873, "nodeType": "ExpressionStatement", "src": "8102:165:43"}, {"expression": {"arguments": [{"expression": {"id": 20879, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "8312:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20880, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "8312:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"expression": {"id": 20874, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20804, "src": "8278:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20877, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "portfolioState", "nodeType": "MemberAccess", "referencedDeclaration": 87550, "src": "8278:21:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 20878, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "storeAssets", "nodeType": "MemberAccess", "referencedDeclaration": 56069, "src": "8278:33:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PortfolioState_$87595_memory_ptr_$_t_address_$returns$_t_bool_$_t_bytes32_$_t_uint8_$_t_uint40_$bound_to$_t_struct$_PortfolioState_$87595_memory_ptr_$", "typeString": "function (struct PortfolioState memory,address) returns (bool,bytes32,uint8,uint40)"}}, "id": 20881, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8278:54:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$_t_uint8_$_t_uint40_$", "typeString": "tuple(bool,bytes32,uint8,uint40)"}}, "id": 20882, "nodeType": "ExpressionStatement", "src": "8278:54:43"}, {"expression": {"id": 20883, "name": "primeCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20819, "src": "8457:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20820, "id": 20884, "nodeType": "Return", "src": "8450:21:43"}]}, "documentation": {"id": 20802, "nodeType": "StructuredDocumentation", "src": "6490:533:43", "text": "@notice Removes liquidity tokens and cash from the nToken\n @param nToken portfolio object\n @param nTokensToRedeem tokens to redeem\n @param tokensToWithdraw array of liquidity tokens to withdraw\n @param netfCash array of netfCash figures\n @param mustCalculatefCash true if netfCash must be calculated in the removeLiquidityTokens step\n @param blockTime current block time\n @return primeCashShare amount of cash the redeemer will receive from withdrawing cash assets from the nToken"}, "id": 20886, "implemented": true, "kind": "function", "modifiers": [], "name": "_reduceLiquidAssets", "nodeType": "FunctionDefinition", "parameters": {"id": 20817, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20804, "mutability": "mutable", "name": "nToken", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7066:29:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio"}, "typeName": {"id": 20803, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "7066:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}, "visibility": "internal"}, {"constant": false, "id": 20806, "mutability": "mutable", "name": "nTokensToRedeem", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7105:22:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20805, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7105:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20809, "mutability": "mutable", "name": "tokensToWithdraw", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7137:32:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20807, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7137:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20808, "nodeType": "ArrayTypeName", "src": "7137:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20812, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7179:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20810, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7179:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20811, "nodeType": "ArrayTypeName", "src": "7179:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20814, "mutability": "mutable", "name": "mustCalculatefCash", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7213:23:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20813, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7213:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, {"constant": false, "id": 20816, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7246:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20815, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7246:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7056:213:43"}, "returnParameters": {"id": 20820, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20819, "mutability": "mutable", "name": "primeCashShare", "nodeType": "VariableDeclaration", "scope": 20886, "src": "7287:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20818, "name": "int256", "nodeType": "ElementaryTypeName", "src": "7287:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "7286:23:43"}, "scope": 21551, "src": "7028:1450:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 21108, "nodeType": "Block", "src": "9317:4348:43", "statements": [{"assignments": [20907], "declarations": [{"constant": false, "id": 20907, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 21108, "src": "9327:30:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 20906, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "9327:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 20908, "nodeType": "VariableDeclarationStatement", "src": "9327:30:43"}, {"body": {"id": 21104, "nodeType": "Block", "src": "9440:4181:43", "statements": [{"assignments": [20923], "declarations": [{"constant": false, "id": 20923, "mutability": "mutable", "name": "asset", "nodeType": "VariableDeclaration", "scope": 21104, "src": "9454:27:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset"}, "typeName": {"id": 20922, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "9454:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "visibility": "internal"}], "id": 20929, "initialValue": {"baseExpression": {"expression": {"expression": {"id": 20924, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "9484:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20925, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "portfolioState", "nodeType": "MemberAccess", "referencedDeclaration": 87550, "src": "9484:21:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 20926, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "storedAssets", "nodeType": "MemberAccess", "referencedDeclaration": 87587, "src": "9484:34:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 20928, "indexExpression": {"id": 20927, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "9519:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9484:37:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "nodeType": "VariableDeclarationStatement", "src": "9454:67:43"}, {"expression": {"id": 20940, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20930, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "9535:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 20932, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87651, "src": "9535:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 20936, "name": "tokensToWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20894, "src": "9571:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 20938, "indexExpression": {"id": 20937, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "9588:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9571:19:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 20933, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "9552:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 20934, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87651, "src": "9552:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 69702, "src": "9552:18:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20939, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9552:39:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "9535:56:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20941, "nodeType": "ExpressionStatement", "src": "9535:56:43"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 20946, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20943, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "9746:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 20944, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87651, "src": "9746:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 20945, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9763:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9746:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "43616e6e6f742072656465656d20746f207a65726f", "id": 20947, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9766:23:43", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a40772d7290bd51f0ce280202fbdacdd884dcc25e7617aa5c2ab3c5208addf06", "typeString": "literal_string \"Cannot redeem to zero\""}, "value": "Cannot redeem to zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a40772d7290bd51f0ce280202fbdacdd884dcc25e7617aa5c2ab3c5208addf06", "typeString": "literal_string \"Cannot redeem to zero\""}], "id": 20942, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9738:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 20948, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9738:52:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20949, "nodeType": "ExpressionStatement", "src": "9738:52:43"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}, "id": 20955, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 20951, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "9812:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 20952, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "storageState", "nodeType": "MemberAccess", "referencedDeclaration": 87655, "src": "9812:18:43", "typeDescriptions": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 20953, "name": "AssetStorageState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87489, "src": "9834:17:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_AssetStorageState_$87489_$", "typeString": "type(enum AssetStorageState)"}}, "id": 20954, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "NoChange", "nodeType": "MemberAccess", "src": "9834:26:43", "typeDescriptions": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}}, "src": "9812:48:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 20950, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9804:7:43", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 20956, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9804:57:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20957, "nodeType": "ExpressionStatement", "src": "9804:57:43"}, {"expression": {"id": 20963, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 20958, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "9875:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 20960, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "storageState", "nodeType": "MemberAccess", "referencedDeclaration": 87655, "src": "9875:18:43", "typeDescriptions": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 20961, "name": "AssetStorageState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87489, "src": "9896:17:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_AssetStorageState_$87489_$", "typeString": "type(enum AssetStorageState)"}}, "id": 20962, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Update", "nodeType": "MemberAccess", "src": "9896:24:43", "typeDescriptions": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}}, "src": "9875:45:43", "typeDescriptions": {"typeIdentifier": "t_enum$_AssetStorageState_$87489", "typeString": "enum AssetStorageState"}}, "id": 20964, "nodeType": "ExpressionStatement", "src": "9875:45:43"}, {"expression": {"arguments": [{"id": 20970, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20907, "src": "10019:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20973, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20971, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "10027:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 20972, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10031:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "10027:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 20974, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "10034:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, {"id": 20975, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20899, "src": "10040:9:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 20965, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "9991:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20968, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "9991:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 20969, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadMarket", "nodeType": "MemberAccess", "referencedDeclaration": 45310, "src": "9991:27:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$bound_to$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,uint256,bool,uint256) view"}}, "id": 20976, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9991:59:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20977, "nodeType": "ExpressionStatement", "src": "9991:59:43"}, {"assignments": [20979], "declarations": [{"constant": false, "id": 20979, "mutability": "mutable", "name": "fCashClaim", "nodeType": "VariableDeclaration", "scope": 21104, "src": "10064:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20978, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10064:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20980, "nodeType": "VariableDeclarationStatement", "src": "10064:17:43"}, {"id": 21002, "nodeType": "Block", "src": "10095:264:43", "statements": [{"assignments": [20982], "declarations": [{"constant": false, "id": 20982, "mutability": "mutable", "name": "primeCash", "nodeType": "VariableDeclaration", "scope": 21002, "src": "10113:16:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20981, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10113:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 20983, "nodeType": "VariableDeclarationStatement", "src": "10113:16:43"}, {"expression": {"id": 20993, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 20984, "name": "primeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20982, "src": "10200:9:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 20985, "name": "fCashClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "10211:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 20986, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "10199:23:43", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 20989, "name": "tokensToWithdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20894, "src": "10248:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 20991, "indexExpression": {"id": 20990, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "10265:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "10248:19:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20987, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20907, "src": "10225:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 20988, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "removeLiquidity", "nodeType": "MemberAccess", "referencedDeclaration": 48910, "src": "10225:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_int256_$returns$_t_int256_$_t_int256_$bound_to$_t_struct$_MarketParameters_$87673_memory_ptr_$", "typeString": "function (struct MarketParameters memory,int256) returns (int256,int256)"}}, "id": 20992, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10225:43:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "10199:69:43", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 20994, "nodeType": "ExpressionStatement", "src": "10199:69:43"}, {"expression": {"id": 21000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 20995, "name": "totalPrimeCashClaims", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20904, "src": "10286:20:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 20998, "name": "primeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20982, "src": "10334:9:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 20996, "name": "totalPrimeCashClaims", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20904, "src": "10309:20:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "10309:24:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 20999, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10309:35:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10286:58:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21001, "nodeType": "ExpressionStatement", "src": "10286:58:43"}]}, {"assignments": [21004], "declarations": [{"constant": false, "id": 21004, "mutability": "mutable", "name": "fCashToNToken", "nodeType": "VariableDeclaration", "scope": 21104, "src": "10373:20:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21003, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10373:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21005, "nodeType": "VariableDeclarationStatement", "src": "10373:20:43"}, {"condition": {"id": 21006, "name": "mustCalculatefCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20901, "src": "10411:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 21088, "nodeType": "Block", "src": "12799:477:43", "statements": [{"expression": {"id": 21086, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21079, "name": "fCashToNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21004, "src": "13218:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"baseExpression": {"id": 21082, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20897, "src": "13249:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21084, "indexExpression": {"id": 21083, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "13258:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "13249:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21080, "name": "fCashClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "13234:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21081, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 69702, "src": "13234:14:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13234:27:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "13218:43:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21087, "nodeType": "ExpressionStatement", "src": "13218:43:43"}]}, "id": 21089, "nodeType": "IfStatement", "src": "10407:2869:43", "trueBody": {"id": 21078, "nodeType": "Block", "src": "10431:2362:43", "statements": [{"assignments": [21008], "declarations": [{"constant": false, "id": 21008, "mutability": "mutable", "name": "fCashBalance", "nodeType": "VariableDeclaration", "scope": 21078, "src": "10552:19:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21007, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10552:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21019, "initialValue": {"arguments": [{"expression": {"id": 21011, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "10633:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21012, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "10633:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"expression": {"id": 21013, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "10674:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21014, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "10674:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 21015, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "10674:27:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 21016, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "10723:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21017, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "10723:14:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21009, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55423, "src": "10574:19:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$55423_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 21010, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getifCashNotional", "nodeType": "MemberAccess", "referencedDeclaration": 54873, "src": "10574:37:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (address,uint256,uint256) view returns (int256)"}}, "id": 21018, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10574:181:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "10552:203:43"}, {"assignments": [21021], "declarations": [{"constant": false, "id": 21021, "mutability": "mutable", "name": "fCashShare", "nodeType": "VariableDeclaration", "scope": 21078, "src": "10773:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21020, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10773:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21030, "initialValue": {"arguments": [{"expression": {"id": 21027, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "10831:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21028, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 87552, "src": "10831:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 21024, "name": "nTokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20891, "src": "10810:15:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21022, "name": "fCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21008, "src": "10793:12:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21023, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69646, "src": "10793:16:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21025, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10793:33:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69676, "src": "10793:37:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21029, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10793:57:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "10773:77:43"}, {"expression": {"id": 21038, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21031, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20897, "src": "10922:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21033, "indexExpression": {"id": 21032, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "10931:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10922:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21036, "name": "fCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21021, "src": "10951:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21034, "name": "fCashClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "10936:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "10936:14:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21037, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10936:26:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10922:40:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21039, "nodeType": "ExpressionStatement", "src": "10922:40:43"}, {"expression": {"id": 21044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21040, "name": "fCashToNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21004, "src": "10980:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21041, "name": "fCashShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21021, "src": "10996:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21042, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 69742, "src": "10996:14:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 21043, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10996:16:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "10980:32:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21045, "nodeType": "ExpressionStatement", "src": "10980:32:43"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 21062, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21055, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"expression": {"id": 21051, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20907, "src": "12435:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 21052, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "totalfCash", "nodeType": "MemberAccess", "referencedDeclaration": 87662, "src": "12435:17:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 21048, "name": "fCashClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20979, "src": "12419:10:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21046, "name": "fCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21008, "src": "12402:12:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21047, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "12402:16:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21049, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12402:28:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21050, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "12402:32:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21053, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12402:51:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21054, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12457:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12402:56:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 21056, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20897, "src": "12482:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21058, "indexExpression": {"id": 21057, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "12491:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12482:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 21060, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "-", "prefix": true, "src": "12497:2:43", "subExpression": {"hexValue": "31", "id": 21059, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12498:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "typeDescriptions": {"typeIdentifier": "t_rational_minus_1_by_1", "typeString": "int_const -1"}}, "src": "12482:17:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12402:97:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21077, "nodeType": "IfStatement", "src": "12377:402:43", "trueBody": {"id": 21076, "nodeType": "Block", "src": "12518:261:43", "statements": [{"expression": {"id": 21067, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21063, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20897, "src": "12687:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21065, "indexExpression": {"id": 21064, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "12696:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "12687:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 21066, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12701:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12687:15:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21068, "nodeType": "ExpressionStatement", "src": "12687:15:43"}, {"expression": {"id": 21074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21069, "name": "fCashToNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21004, "src": "12724:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"hexValue": "31", "id": 21072, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12758:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "expression": {"id": 21070, "name": "fCashToNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21004, "src": "12740:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 69702, "src": "12740:17:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21073, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12740:20:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12724:36:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21075, "nodeType": "ExpressionStatement", "src": "12724:36:43"}]}}]}}, {"expression": {"arguments": [{"expression": {"id": 21093, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "13436:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21094, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "13436:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 21095, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "13473:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21096, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87645, "src": "13473:16:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 21097, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20923, "src": "13507:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21098, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "13507:14:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 21099, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "13539:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21100, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "lastInitializedTime", "nodeType": "MemberAccess", "referencedDeclaration": 87556, "src": "13539:26:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21101, "name": "fCashToNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21004, "src": "13583:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21090, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55423, "src": "13384:19:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$55423_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 21092, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addifCashAsset", "nodeType": "MemberAccess", "referencedDeclaration": 55121, "src": "13384:34:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (address,uint16,uint256,uint256,int256) returns (int256)"}}, "id": 21102, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13384:226:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21103, "nodeType": "ExpressionStatement", "src": "13384:226:43"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 20918, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 20913, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "9388:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"expression": {"expression": {"id": 20914, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20889, "src": "9392:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 20915, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "portfolioState", "nodeType": "MemberAccess", "referencedDeclaration": 87550, "src": "9392:21:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 20916, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "storedAssets", "nodeType": "MemberAccess", "referencedDeclaration": 87587, "src": "9392:34:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 20917, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "9392:41:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9388:45:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21105, "initializationExpression": {"assignments": [20910], "declarations": [{"constant": false, "id": 20910, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 21105, "src": "9373:9:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9373:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 20912, "initialValue": {"hexValue": "30", "id": 20911, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9385:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "9373:13:43"}, "loopExpression": {"expression": {"id": 20920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "9435:3:43", "subExpression": {"id": 20919, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20910, "src": "9435:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 20921, "nodeType": "ExpressionStatement", "src": "9435:3:43"}, "nodeType": "ForStatement", "src": "9368:4253:43"}, {"expression": {"id": 21106, "name": "totalPrimeCashClaims", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 20904, "src": "13638:20:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 20905, "id": 21107, "nodeType": "Return", "src": "13631:27:43"}]}, "documentation": {"id": 20887, "nodeType": "StructuredDocumentation", "src": "8484:537:43", "text": "@notice Removes nToken liquidity tokens and updates the netfCash figures.\n @param nToken portfolio object\n @param nTokensToRedeem tokens to redeem\n @param tokensToWithdraw array of liquidity tokens to withdraw\n @param netfCash array of netfCash figures\n @param blockTime current block time\n @param mustCalculatefCash true if netfCash must be calculated in the removeLiquidityTokens step\n @return totalPrimeCashClaims is the amount of asset cash raised from liquidity token cash claims"}, "id": 21109, "implemented": true, "kind": "function", "modifiers": [], "name": "_removeLiquidityTokens", "nodeType": "FunctionDefinition", "parameters": {"id": 20902, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20889, "mutability": "mutable", "name": "nToken", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9067:29:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio"}, "typeName": {"id": 20888, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "9067:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}, "visibility": "internal"}, {"constant": false, "id": 20891, "mutability": "mutable", "name": "nTokensToRedeem", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9106:22:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20890, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9106:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 20894, "mutability": "mutable", "name": "tokensToWithdraw", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9138:32:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20892, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9138:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20893, "nodeType": "ArrayTypeName", "src": "9138:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20897, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9180:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 20895, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9180:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 20896, "nodeType": "ArrayTypeName", "src": "9180:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 20899, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9214:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20898, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9214:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 20901, "mutability": "mutable", "name": "mustCalculatefCash", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9241:23:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20900, "name": "bool", "nodeType": "ElementaryTypeName", "src": "9241:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "9057:213:43"}, "returnParameters": {"id": 20905, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 20904, "mutability": "mutable", "name": "totalPrimeCashClaims", "nodeType": "VariableDeclaration", "scope": 21109, "src": "9288:27:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 20903, "name": "int256", "nodeType": "ElementaryTypeName", "src": "9288:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "9287:29:43"}, "scope": 21551, "src": "9026:4639:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 21231, "nodeType": "Block", "src": "14102:1282:43", "statements": [{"assignments": [21125], "declarations": [{"constant": false, "id": 21125, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 21231, "src": "14112:30:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 21124, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "14112:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 21126, "nodeType": "VariableDeclarationStatement", "src": "14112:30:43"}, {"expression": {"id": 21129, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21127, "name": "hasResidual", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21122, "src": "14152:11:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 21128, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14166:5:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "14152:19:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21130, "nodeType": "ExpressionStatement", "src": "14152:19:43"}, {"body": {"id": 21229, "nodeType": "Block", "src": "14228:1150:43", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 21142, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21115, "src": "14246:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21144, "indexExpression": {"id": 21143, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14255:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14246:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21145, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14261:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14246:16:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21148, "nodeType": "IfStatement", "src": "14242:30:43", "trueBody": {"id": 21147, "nodeType": "Continue", "src": "14264:8:43"}}, {"expression": {"arguments": [{"id": 21154, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21125, "src": "14315:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21155, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14323:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 21156, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14327:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "14323:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 21158, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14330:5:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"expression": {"id": 21159, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "14337:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 21160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "14337:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 21149, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21112, "src": "14287:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21152, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "14287:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 21153, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadMarket", "nodeType": "MemberAccess", "referencedDeclaration": 45310, "src": "14287:27:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$bound_to$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,uint256,bool,uint256) view"}}, "id": 21161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14287:66:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21162, "nodeType": "ExpressionStatement", "src": "14287:66:43"}, {"assignments": [21164, null], "declarations": [{"constant": false, "id": 21164, "mutability": "mutable", "name": "netPrimeCash", "nodeType": "VariableDeclaration", "scope": 21229, "src": "14368:19:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21163, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14368:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null], "id": 21189, "initialValue": {"arguments": [{"id": 21167, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21117, "src": "14435:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 21168, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21112, "src": "14460:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21169, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "14460:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"baseExpression": {"id": 21170, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21115, "src": "14581:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21172, "indexExpression": {"id": 21171, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14590:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14581:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 69742, "src": "14581:15:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 21174, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14581:17:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [{"expression": {"id": 21182, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "14667:5:43", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 21183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "14667:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"baseExpression": {"expression": {"expression": {"id": 21175, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21112, "src": "14616:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21176, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "portfolioState", "nodeType": "MemberAccess", "referencedDeclaration": 87550, "src": "14616:21:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 21177, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "storedAssets", "nodeType": "MemberAccess", "referencedDeclaration": 87587, "src": "14616:34:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21179, "indexExpression": {"id": 21178, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14651:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "14616:37:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21180, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "14616:46:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21181, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 70133, "src": "14616:50:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21184, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14616:67:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21187, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21185, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14701:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"hexValue": "31", "id": 21186, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14705:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "14701:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21165, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21125, "src": "14398:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 21166, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "executeTrade", "nodeType": "MemberAccess", "referencedDeclaration": 48993, "src": "14398:19:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_int256_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_uint256_$bound_to$_t_struct$_MarketParameters_$87673_memory_ptr_$", "typeString": "function (struct MarketParameters memory,address,struct CashGroupParameters memory,int256,uint256,uint256) returns (int256,uint256)"}}, "id": 21188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14398:322:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$", "typeString": "tuple(int256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "14367:353:43"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21192, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21190, "name": "netPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21164, "src": "14739:12:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 21191, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14755:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "14739:17:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 21227, "nodeType": "Block", "src": "14867:501:43", "statements": [{"expression": {"arguments": [{"expression": {"id": 21201, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21112, "src": "15147:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21202, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "tokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 87560, "src": "15147:19:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 21203, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21117, "src": "15168:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"expression": {"id": 21204, "name": "nToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21112, "src": "15177:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio memory"}}, "id": 21205, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cashGroup", "nodeType": "MemberAccess", "referencedDeclaration": 87548, "src": "15177:16:43", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 21206, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "15177:27:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"expression": {"id": 21207, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21125, "src": "15206:6:43", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 21208, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87660, "src": "15206:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"baseExpression": {"id": 21209, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21115, "src": "15223:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21211, "indexExpression": {"id": 21210, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "15232:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15223:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21198, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38972, "src": "15100:7:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Emitter_$38972_$", "typeString": "type(library Emitter)"}}, "id": 21200, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "emitTransferfCash", "nodeType": "MemberAccess", "referencedDeclaration": 37653, "src": "15100:25:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_uint256_$_t_int256_$returns$__$", "typeString": "function (address,address,uint16,uint256,int256)"}}, "id": 21212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15100:152:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21213, "nodeType": "ExpressionStatement", "src": "15100:152:43"}, {"expression": {"id": 21219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21214, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21120, "src": "15271:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21217, "name": "netPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21164, "src": "15307:12:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21215, "name": "totalPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21120, "src": "15288:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "15288:18:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21218, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15288:32:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "15271:49:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21220, "nodeType": "ExpressionStatement", "src": "15271:49:43"}, {"expression": {"id": 21225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21221, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21115, "src": "15338:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21223, "indexExpression": {"id": 21222, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "15347:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "15338:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 21224, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15352:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15338:15:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21226, "nodeType": "ExpressionStatement", "src": "15338:15:43"}]}, "id": 21228, "nodeType": "IfStatement", "src": "14735:633:43", "trueBody": {"id": 21197, "nodeType": "Block", "src": "14758:103:43", "statements": [{"expression": {"id": 21195, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21193, "name": "hasResidual", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21122, "src": "14828:11:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 21194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "14842:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "14828:18:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21196, "nodeType": "ExpressionStatement", "src": "14828:18:43"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21135, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14202:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 21136, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21115, "src": "14206:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "14206:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "14202:19:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21230, "initializationExpression": {"assignments": [21132], "declarations": [{"constant": false, "id": 21132, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 21230, "src": "14187:9:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21131, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14187:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21134, "initialValue": {"hexValue": "30", "id": 21133, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "14199:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "14187:13:43"}, "loopExpression": {"expression": {"id": 21140, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "14223:3:43", "subExpression": {"id": 21139, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21132, "src": "14223:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21141, "nodeType": "ExpressionStatement", "src": "14223:3:43"}, "nodeType": "ForStatement", "src": "14182:1196:43"}]}, "documentation": {"id": 21110, "nodeType": "StructuredDocumentation", "src": "13671:238:43", "text": "@notice Sells fCash assets back into the market for cash. Negative fCash assets will decrease netPrimeCash\n as a result. The aim here is to ensure that accounts can redeem nTokens without having to take on\n fCash assets."}, "id": 21232, "implemented": true, "kind": "function", "modifiers": [], "name": "_sellfCashAssets", "nodeType": "FunctionDefinition", "parameters": {"id": 21118, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21112, "mutability": "mutable", "name": "nToken", "nodeType": "VariableDeclaration", "scope": 21232, "src": "13949:29:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_memory_ptr", "typeString": "struct nTokenPortfolio"}, "typeName": {"id": 21111, "name": "nTokenPortfolio", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87561, "src": "13949:15:43", "typeDescriptions": {"typeIdentifier": "t_struct$_nTokenPortfolio_$87561_storage_ptr", "typeString": "struct nTokenPortfolio"}}, "visibility": "internal"}, {"constant": false, "id": 21115, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 21232, "src": "13988:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 21113, "name": "int256", "nodeType": "ElementaryTypeName", "src": "13988:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21114, "nodeType": "ArrayTypeName", "src": "13988:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}, {"constant": false, "id": 21117, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 21232, "src": "14022:15:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21116, "name": "address", "nodeType": "ElementaryTypeName", "src": "14022:7:43", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "13939:104:43"}, "returnParameters": {"id": 21123, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21120, "mutability": "mutable", "name": "totalPrimeCash", "nodeType": "VariableDeclaration", "scope": 21232, "src": "14061:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21119, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14061:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 21122, "mutability": "mutable", "name": "hasResidual", "nodeType": "VariableDeclaration", "scope": 21232, "src": "14084:16:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 21121, "name": "bool", "nodeType": "ElementaryTypeName", "src": "14084:4:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "14060:41:43"}, "scope": 21551, "src": "13914:1470:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 21373, "nodeType": "Block", "src": "15729:1039:43", "statements": [{"assignments": [21249], "declarations": [{"constant": false, "id": 21249, "mutability": "mutable", "name": "numAssetsToExtend", "nodeType": "VariableDeclaration", "scope": 21373, "src": "15739:25:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21248, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15739:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21250, "nodeType": "VariableDeclarationStatement", "src": "15739:25:43"}, {"body": {"id": 21271, "nodeType": "Block", "src": "15820:66:43", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21266, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 21262, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21242, "src": "15838:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21264, "indexExpression": {"id": 21263, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21252, "src": "15847:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15838:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 21265, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15853:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15838:16:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21270, "nodeType": "IfStatement", "src": "15834:41:43", "trueBody": {"expression": {"id": 21268, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "15856:19:43", "subExpression": {"id": 21267, "name": "numAssetsToExtend", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21249, "src": "15856:17:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21269, "nodeType": "ExpressionStatement", "src": "15856:19:43"}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21255, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21252, "src": "15794:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 21256, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21242, "src": "15798:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21257, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "15798:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15794:19:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21272, "initializationExpression": {"assignments": [21252], "declarations": [{"constant": false, "id": 21252, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 21272, "src": "15779:9:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21251, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15779:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21254, "initialValue": {"hexValue": "30", "id": 21253, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15791:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "15779:13:43"}, "loopExpression": {"expression": {"id": 21260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "15815:3:43", "subExpression": {"id": 21259, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21252, "src": "15815:1:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21261, "nodeType": "ExpressionStatement", "src": "15815:3:43"}, "nodeType": "ForStatement", "src": "15774:112:43"}, {"assignments": [21274], "declarations": [{"constant": false, "id": 21274, "mutability": "mutable", "name": "newLength", "nodeType": "VariableDeclaration", "scope": 21373, "src": "15896:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21273, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15896:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21279, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21278, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21275, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21239, "src": "15916:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21276, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "15916:22:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 21277, "name": "numAssetsToExtend", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21249, "src": "15941:17:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15916:42:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "15896:62:43"}, {"expression": {"id": 21286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21280, "name": "finalfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21246, "src": "15968:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21284, "name": "newLength", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21274, "src": "16008:9:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21283, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "15987:20:43", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct PortfolioAsset memory[] memory)"}, "typeName": {"baseType": {"id": 21281, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "15991:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21282, "nodeType": "ArrayTypeName", "src": "15991:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}}, "id": 21285, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15987:31:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "src": "15968:50:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21287, "nodeType": "ExpressionStatement", "src": "15968:50:43"}, {"assignments": [21289], "declarations": [{"constant": false, "id": 21289, "mutability": "mutable", "name": "index", "nodeType": "VariableDeclaration", "scope": 21373, "src": "16028:10:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21288, "name": "uint", "nodeType": "ElementaryTypeName", "src": "16028:4:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21291, "initialValue": {"hexValue": "30", "id": 21290, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16041:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "16028:14:43"}, {"body": {"id": 21307, "nodeType": "Block", "src": "16100:73:43", "statements": [{"expression": {"id": 21305, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 21299, "name": "finalfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21246, "src": "16114:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21301, "indexExpression": {"id": 21300, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16131:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "16114:23:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 21302, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21239, "src": "16140:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21304, "indexExpression": {"id": 21303, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16156:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16140:22:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "src": "16114:48:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21306, "nodeType": "ExpressionStatement", "src": "16114:48:43"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21292, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16059:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 21293, "name": "newifCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21239, "src": "16067:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16067:22:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16059:30:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21308, "loopExpression": {"expression": {"id": 21297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "16091:7:43", "subExpression": {"id": 21296, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16091:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21298, "nodeType": "ExpressionStatement", "src": "16091:7:43"}, "nodeType": "ForStatement", "src": "16052:121:43"}, {"assignments": [21310], "declarations": [{"constant": false, "id": 21310, "mutability": "mutable", "name": "netfCashIndex", "nodeType": "VariableDeclaration", "scope": 21373, "src": "16183:18:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21309, "name": "uint", "nodeType": "ElementaryTypeName", "src": "16183:4:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21312, "initialValue": {"hexValue": "30", "id": 21311, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16204:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "16183:22:43"}, {"body": {"id": 21369, "nodeType": "Block", "src": "16257:471:43", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 21321, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 21317, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21242, "src": "16275:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21319, "indexExpression": {"id": 21318, "name": "netfCashIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "16284:13:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16275:23:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 21320, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16302:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16275:28:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21365, "nodeType": "IfStatement", "src": "16271:417:43", "trueBody": {"id": 21364, "nodeType": "Block", "src": "16305:383:43", "statements": [{"assignments": [21323], "declarations": [{"constant": false, "id": 21323, "mutability": "mutable", "name": "asset", "nodeType": "VariableDeclaration", "scope": 21364, "src": "16323:27:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset"}, "typeName": {"id": 21322, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "16323:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "visibility": "internal"}], "id": 21327, "initialValue": {"baseExpression": {"id": 21324, "name": "finalfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21246, "src": "16353:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21326, "indexExpression": {"id": 21325, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16370:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16353:23:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "nodeType": "VariableDeclarationStatement", "src": "16323:53:43"}, {"expression": {"id": 21335, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21328, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21323, "src": "16394:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21330, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87645, "src": "16394:16:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 21331, "name": "liquidityTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21236, "src": "16413:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21333, "indexExpression": {"id": 21332, "name": "netfCashIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "16429:13:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16413:30:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21334, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87645, "src": "16413:41:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "16394:60:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "id": 21336, "nodeType": "ExpressionStatement", "src": "16394:60:43"}, {"expression": {"id": 21344, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21337, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21323, "src": "16472:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21339, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "16472:14:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"baseExpression": {"id": 21340, "name": "liquidityTokens", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21236, "src": "16489:15:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21342, "indexExpression": {"id": 21341, "name": "netfCashIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "16505:13:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16489:30:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21343, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "16489:39:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16472:56:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21345, "nodeType": "ExpressionStatement", "src": "16472:56:43"}, {"expression": {"id": 21351, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21346, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21323, "src": "16546:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21348, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "assetType", "nodeType": "MemberAccess", "referencedDeclaration": 87649, "src": "16546:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 21349, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "16564:9:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 21350, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 87361, "src": "16564:26:43", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "16546:44:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21352, "nodeType": "ExpressionStatement", "src": "16546:44:43"}, {"expression": {"id": 21359, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21353, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21323, "src": "16608:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21355, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87651, "src": "16608:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"baseExpression": {"id": 21356, "name": "netfCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21242, "src": "16625:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[] memory"}}, "id": 21358, "indexExpression": {"id": 21357, "name": "netfCashIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "16634:13:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "16625:23:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "16608:40:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21360, "nodeType": "ExpressionStatement", "src": "16608:40:43"}, {"expression": {"id": 21362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "16666:7:43", "subExpression": {"id": 21361, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16666:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21363, "nodeType": "ExpressionStatement", "src": "16666:7:43"}]}}, {"expression": {"id": 21367, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "16702:15:43", "subExpression": {"id": 21366, "name": "netfCashIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21310, "src": "16702:13:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21368, "nodeType": "ExpressionStatement", "src": "16702:15:43"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21313, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21289, "src": "16222:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 21314, "name": "finalfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21246, "src": "16230:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21315, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "16230:23:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "16222:31:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21370, "nodeType": "ForStatement", "src": "16215:513:43"}, {"expression": {"id": 21371, "name": "finalfCashAssets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21246, "src": "16745:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "functionReturnParameters": 21247, "id": 21372, "nodeType": "Return", "src": "16738:23:43"}]}, "documentation": {"id": 21233, "nodeType": "StructuredDocumentation", "src": "15390:100:43", "text": "@notice Combines newifCashAssets array with netfCash assets into a single finalfCashAssets array"}, "id": 21374, "implemented": true, "kind": "function", "modifiers": [], "name": "_addResidualsToAssets", "nodeType": "FunctionDefinition", "parameters": {"id": 21243, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21236, "mutability": "mutable", "name": "liquidityTokens", "nodeType": "VariableDeclaration", "scope": 21374, "src": "15535:39:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 21234, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "15535:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21235, "nodeType": "ArrayTypeName", "src": "15535:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}, {"constant": false, "id": 21239, "mutability": "mutable", "name": "newifCashAssets", "nodeType": "VariableDeclaration", "scope": 21374, "src": "15584:39:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 21237, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "15584:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21238, "nodeType": "ArrayTypeName", "src": "15584:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}, {"constant": false, "id": 21242, "mutability": "mutable", "name": "netfCash", "nodeType": "VariableDeclaration", "scope": 21374, "src": "15633:24:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr", "typeString": "int256[]"}, "typeName": {"baseType": {"id": 21240, "name": "int256", "nodeType": "ElementaryTypeName", "src": "15633:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21241, "nodeType": "ArrayTypeName", "src": "15633:8:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr", "typeString": "int256[]"}}, "visibility": "internal"}], "src": "15525:138:43"}, "returnParameters": {"id": 21247, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21246, "mutability": "mutable", "name": "finalfCashAssets", "nodeType": "VariableDeclaration", "scope": 21374, "src": "15687:40:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 21244, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "15687:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21245, "nodeType": "ArrayTypeName", "src": "15687:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "src": "15686:42:43"}, "scope": 21551, "src": "15495:1273:43", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 21549, "nodeType": "Block", "src": "17186:1612:43", "statements": [{"assignments": [21394], "declarations": [{"constant": false, "id": 21394, "mutability": "mutable", "name": "index", "nodeType": "VariableDeclaration", "scope": 21549, "src": "17196:13:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21393, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17196:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21398, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21395, "name": "assetsBitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21387, "src": "17212:12:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 21396, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalBitsSet", "nodeType": "MemberAccess", "referencedDeclaration": 69317, "src": "17212:25:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 21397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17212:27:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17196:43:43"}, {"assignments": [21406], "declarations": [{"constant": false, "id": 21406, "mutability": "mutable", "name": "store", "nodeType": "VariableDeclaration", "scope": 21549, "src": "17249:99:43", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$_$", "typeString": "mapping(address => mapping(uint256 => mapping(uint256 => struct ifCashStorage)))"}, "typeName": {"id": 21405, "keyType": {"id": 21399, "name": "address", "nodeType": "ElementaryTypeName", "src": "17257:7:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "17249:85:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$_$", "typeString": "mapping(address => mapping(uint256 => mapping(uint256 => struct ifCashStorage)))"}, "valueType": {"id": 21404, "keyType": {"id": 21400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17276:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "17268:65:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$", "typeString": "mapping(uint256 => mapping(uint256 => struct ifCashStorage))"}, "valueType": {"id": 21403, "keyType": {"id": 21401, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17307:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "17299:33:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$", "typeString": "mapping(uint256 => struct ifCashStorage)"}, "valueType": {"id": 21402, "name": "ifCashStorage", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87817, "src": "17318:13:43", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage_ptr", "typeString": "struct ifCashStorage"}}}}}, "visibility": "internal"}], "id": 21410, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21407, "name": "LibStorage", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 35854, "src": "17351:10:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_LibStorage_$35854_$", "typeString": "type(library LibStorage)"}}, "id": 21408, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getifCashBitmapStorage", "nodeType": "MemberAccess", "referencedDeclaration": 35391, "src": "17351:33:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$_$_$", "typeString": "function () pure returns (mapping(address => mapping(uint256 => mapping(uint256 => struct ifCashStorage storage ref))))"}}, "id": 21409, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17351:35:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$_$", "typeString": "mapping(address => mapping(uint256 => mapping(uint256 => struct ifCashStorage storage ref)))"}}, "nodeType": "VariableDeclarationStatement", "src": "17249:137:43"}, {"assignments": [21414], "declarations": [{"constant": false, "id": 21414, "mutability": "mutable", "name": "assets", "nodeType": "VariableDeclaration", "scope": 21549, "src": "17397:30:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 21412, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "17397:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21413, "nodeType": "ArrayTypeName", "src": "17397:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "id": 21420, "initialValue": {"arguments": [{"id": 21418, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21394, "src": "17451:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21417, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "17430:20:43", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct PortfolioAsset memory[] memory)"}, "typeName": {"baseType": {"id": 21415, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "17434:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21416, "nodeType": "ArrayTypeName", "src": "17434:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}}, "id": 21419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17430:27:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "17397:60:43"}, {"expression": {"id": 21423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21421, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21394, "src": "17467:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 21422, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17475:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17467:9:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21424, "nodeType": "ExpressionStatement", "src": "17467:9:43"}, {"assignments": [21426], "declarations": [{"constant": false, "id": 21426, "mutability": "mutable", "name": "bitNum", "nodeType": "VariableDeclaration", "scope": 21549, "src": "17487:14:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21425, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17487:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21430, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21427, "name": "assetsBitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21387, "src": "17504:12:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 21428, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getNextBitNum", "nodeType": "MemberAccess", "referencedDeclaration": 69456, "src": "17504:26:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 21429, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17504:28:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17487:45:43"}, {"body": {"id": 21545, "nodeType": "Block", "src": "17562:1206:43", "statements": [{"assignments": [21435], "declarations": [{"constant": false, "id": 21435, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 21545, "src": "17576:16:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17576:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21441, "initialValue": {"arguments": [{"id": 21438, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21381, "src": "17626:19:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21439, "name": "bitNum", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21426, "src": "17647:6:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 21436, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46652, "src": "17595:8:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DateTime_$46652_$", "typeString": "type(library DateTime)"}}, "id": 21437, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getMaturityFromBitNum", "nodeType": "MemberAccess", "referencedDeclaration": 46651, "src": "17595:30:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 21440, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17595:59:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "17576:78:43"}, {"assignments": [21443], "declarations": [{"constant": false, "id": 21443, "mutability": "mutable", "name": "fCashSlot", "nodeType": "VariableDeclaration", "scope": 21545, "src": "17668:31:43", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage_ptr", "typeString": "struct ifCashStorage"}, "typeName": {"id": 21442, "name": "ifCashStorage", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87817, "src": "17668:13:43", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage_ptr", "typeString": "struct ifCashStorage"}}, "visibility": "internal"}], "id": 21451, "initialValue": {"baseExpression": {"baseExpression": {"baseExpression": {"id": 21444, "name": "store", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21406, "src": "17702:5:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$_$", "typeString": "mapping(address => mapping(uint256 => mapping(uint256 => struct ifCashStorage storage ref)))"}}, "id": 21446, "indexExpression": {"id": 21445, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21377, "src": "17708:13:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17702:20:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$_$", "typeString": "mapping(uint256 => mapping(uint256 => struct ifCashStorage storage ref))"}}, "id": 21448, "indexExpression": {"id": 21447, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21379, "src": "17723:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17702:32:43", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ifCashStorage_$87817_storage_$", "typeString": "mapping(uint256 => struct ifCashStorage storage ref)"}}, "id": 21450, "indexExpression": {"id": 21449, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21435, "src": "17735:8:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17702:42:43", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage", "typeString": "struct ifCashStorage storage ref"}}, "nodeType": "VariableDeclarationStatement", "src": "17668:76:43"}, {"assignments": [21453], "declarations": [{"constant": false, "id": 21453, "mutability": "mutable", "name": "notional", "nodeType": "VariableDeclaration", "scope": 21545, "src": "17758:15:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21452, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17758:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21456, "initialValue": {"expression": {"id": 21454, "name": "fCashSlot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21443, "src": "17776:9:43", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage_ptr", "typeString": "struct ifCashStorage storage pointer"}}, "id": 21455, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87816, "src": "17776:18:43", "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, "nodeType": "VariableDeclarationStatement", "src": "17758:36:43"}, {"assignments": [21458], "declarations": [{"constant": false, "id": 21458, "mutability": "mutable", "name": "finalNotional", "nodeType": "VariableDeclaration", "scope": 21545, "src": "17808:20:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21457, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17808:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21459, "nodeType": "VariableDeclarationStatement", "src": "17808:20:43"}, {"id": 21512, "nodeType": "Block", "src": "17843:480:43", "statements": [{"assignments": [21461], "declarations": [{"constant": false, "id": 21461, "mutability": "mutable", "name": "notionalToTransfer", "nodeType": "VariableDeclaration", "scope": 21512, "src": "17861:25:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21460, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17861:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 21469, "initialValue": {"arguments": [{"id": 21467, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21385, "src": "17922:11:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"arguments": [{"id": 21464, "name": "tokensToRedeem", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21383, "src": "17902:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21462, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21453, "src": "17889:8:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69646, "src": "17889:12:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21465, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17889:28:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69676, "src": "17889:32:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21468, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17889:45:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "17861:73:43"}, {"assignments": [21471], "declarations": [{"constant": false, "id": 21471, "mutability": "mutable", "name": "asset", "nodeType": "VariableDeclaration", "scope": 21512, "src": "17953:27:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset"}, "typeName": {"id": 21470, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "17953:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "visibility": "internal"}], "id": 21475, "initialValue": {"baseExpression": {"id": 21472, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21414, "src": "17983:6:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "id": 21474, "indexExpression": {"id": 21473, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21394, "src": "17990:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "17983:13:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "nodeType": "VariableDeclarationStatement", "src": "17953:43:43"}, {"expression": {"id": 21480, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21476, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21471, "src": "18014:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21478, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87645, "src": "18014:16:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21479, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21379, "src": "18033:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "18014:29:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "id": 21481, "nodeType": "ExpressionStatement", "src": "18014:29:43"}, {"expression": {"id": 21486, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21482, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21471, "src": "18061:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21484, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87647, "src": "18061:14:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21485, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21435, "src": "18078:8:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18061:25:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21487, "nodeType": "ExpressionStatement", "src": "18061:25:43"}, {"expression": {"id": 21493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21488, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21471, "src": "18104:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21490, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "assetType", "nodeType": "MemberAccess", "referencedDeclaration": 87649, "src": "18104:15:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 21491, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "18122:9:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 21492, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 87361, "src": "18122:26:43", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "18104:44:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21494, "nodeType": "ExpressionStatement", "src": "18104:44:43"}, {"expression": {"id": 21499, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21495, "name": "asset", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21471, "src": "18166:5:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_memory_ptr", "typeString": "struct PortfolioAsset memory"}}, "id": 21497, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87651, "src": "18166:14:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21498, "name": "notionalToTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21461, "src": "18183:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "18166:35:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21500, "nodeType": "ExpressionStatement", "src": "18166:35:43"}, {"expression": {"id": 21503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21501, "name": "index", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21394, "src": "18219:5:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 21502, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "18228:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "18219:10:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21504, "nodeType": "ExpressionStatement", "src": "18219:10:43"}, {"expression": {"id": 21510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21505, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21458, "src": "18260:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21508, "name": "notionalToTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21461, "src": "18289:18:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21506, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21453, "src": "18276:8:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 69702, "src": "18276:12:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 21509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18276:32:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "18260:48:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21511, "nodeType": "ExpressionStatement", "src": "18260:48:43"}]}, {"expression": {"id": 21519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 21513, "name": "fCashSlot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21443, "src": "18379:9:43", "typeDescriptions": {"typeIdentifier": "t_struct$_ifCashStorage_$87817_storage_ptr", "typeString": "struct ifCashStorage storage pointer"}}, "id": 21515, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "notional", "nodeType": "MemberAccess", "referencedDeclaration": 87816, "src": "18379:18:43", "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21516, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21458, "src": "18400:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 21517, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toInt128", "nodeType": "MemberAccess", "referencedDeclaration": 69981, "src": "18400:22:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int128_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int128)"}}, "id": 21518, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18400:24:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, "src": "18379:45:43", "typeDescriptions": {"typeIdentifier": "t_int128", "typeString": "int128"}}, "id": 21520, "nodeType": "ExpressionStatement", "src": "18379:45:43"}, {"expression": {"arguments": [{"id": 21524, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21377, "src": "18510:13:43", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 21525, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21379, "src": "18525:10:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 21526, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21435, "src": "18537:8:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 21527, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21453, "src": "18547:8:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 21528, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21458, "src": "18557:13:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 21521, "name": "PrimeCashExchangeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 53460, "src": "18439:21:43", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_PrimeCashExchangeRate_$53460_$", "typeString": "type(library PrimeCashExchangeRate)"}}, "id": 21523, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "updateTotalfCashDebtOutstanding", "nodeType": "MemberAccess", "referencedDeclaration": 52994, "src": "18439:53:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,uint256,int256,int256)"}}, "id": 21529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18439:145:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21530, "nodeType": "ExpressionStatement", "src": "18439:145:43"}, {"expression": {"id": 21537, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21531, "name": "assetsBitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21387, "src": "18657:12:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21534, "name": "bitNum", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21426, "src": "18692:6:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 21535, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "18700:5:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"id": 21532, "name": "assetsBitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21387, "src": "18672:12:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 21533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setBit", "nodeType": "MemberAccess", "referencedDeclaration": 69172, "src": "18672:19:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint256_$_t_bool_$returns$_t_bytes32_$bound_to$_t_bytes32_$", "typeString": "function (bytes32,uint256,bool) pure returns (bytes32)"}}, "id": 21536, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18672:34:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "18657:49:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 21538, "nodeType": "ExpressionStatement", "src": "18657:49:43"}, {"expression": {"id": 21543, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21539, "name": "bitNum", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21426, "src": "18720:6:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21540, "name": "assetsBitmap", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21387, "src": "18729:12:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 21541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getNextBitNum", "nodeType": "MemberAccess", "referencedDeclaration": 69456, "src": "18729:26:43", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$bound_to$_t_bytes32_$", "typeString": "function (bytes32) pure returns (uint256)"}}, "id": 21542, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "18729:28:43", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "18720:37:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 21544, "nodeType": "ExpressionStatement", "src": "18720:37:43"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 21433, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21431, "name": "bitNum", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21426, "src": "17549:6:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 21432, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "17559:1:43", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "17549:11:43", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 21546, "nodeType": "WhileStatement", "src": "17542:1226:43"}, {"expression": {"id": 21547, "name": "assets", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21414, "src": "18785:6:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset memory[] memory"}}, "functionReturnParameters": 21392, "id": 21548, "nodeType": "Return", "src": "18778:13:43"}]}, "documentation": {"id": 21375, "nodeType": "StructuredDocumentation", "src": "16774:133:43", "text": "@notice Used to reduce an nToken ifCash assets portfolio proportionately when redeeming\n nTokens to its underlying assets."}, "id": 21550, "implemented": true, "kind": "function", "modifiers": [], "name": "_reduceifCashAssetsProportional", "nodeType": "FunctionDefinition", "parameters": {"id": 21388, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21377, "mutability": "mutable", "name": "nTokenAddress", "nodeType": "VariableDeclaration", "scope": 21550, "src": "16962:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21376, "name": "address", "nodeType": "ElementaryTypeName", "src": "16962:7:43", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 21379, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 21550, "src": "16993:17:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 21378, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "16993:6:43", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 21381, "mutability": "mutable", "name": "lastInitializedTime", "nodeType": "VariableDeclaration", "scope": 21550, "src": "17020:27:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21380, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "17020:7:43", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 21383, "mutability": "mutable", "name": "tokensToRedeem", "nodeType": "VariableDeclaration", "scope": 21550, "src": "17057:21:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21382, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17057:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 21385, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 21550, "src": "17088:18:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 21384, "name": "int256", "nodeType": "ElementaryTypeName", "src": "17088:6:43", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 21387, "mutability": "mutable", "name": "assetsBitmap", "nodeType": "VariableDeclaration", "scope": 21550, "src": "17116:20:43", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 21386, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "17116:7:43", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "16952:190:43"}, "returnParameters": {"id": 21392, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21391, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 21550, "src": "17161:23:43", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_memory_ptr_$dyn_memory_ptr", "typeString": "struct PortfolioAsset[]"}, "typeName": {"baseType": {"id": 21389, "name": "PortfolioAsset", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87656, "src": "17161:14:43", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioAsset_$87656_storage_ptr", "typeString": "struct PortfolioAsset"}}, "id": 21390, "nodeType": "ArrayTypeName", "src": "17161:16:43", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_PortfolioAsset_$87656_storage_$dyn_storage_ptr", "typeString": "struct PortfolioAsset[]"}}, "visibility": "internal"}], "src": "17160:25:43"}, "scope": 21551, "src": "16912:1886:43", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}], "scope": 21552, "src": "1350:17450:43"}], "src": "37:18764:43"}, "bytecode": "", "bytecodeSha1": "ed21fb92f8de23a6ffb7002a99ccb6b380ca519a", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "nTokenRedeemAction", "coverageMap": {"branches": {"100": {}, "101": {"PrimeCashExchangeRate._getScalarIncrease": {"820": [23214, 23259, false]}, "PrimeCashExchangeRate._setPrimeCashFactorsOnAccrue": {"819": [11018, 11042, false]}, "PrimeCashExchangeRate._updatePrimeCashScalars": {"818": [25867, 25901, false]}, "PrimeCashExchangeRate.getPrimeCashRateStateful": {"816": [28130, 28164, false], "817": [28574, 28609, true]}, "PrimeCashExchangeRate.getPrimeInterestRates": {"821": [20035, 20063, false], "822": [20785, 20800, false], "823": [21238, 21266, false]}, "PrimeCashExchangeRate.updateTotalfCashDebtOutstanding": {"814": [17910, 17928, false], "815": [18420, 18437, true]}}, "102": {"PrimeRateLib.convertFromUnderlying": {"824": [15231, 15252, true]}}, "103": {}, "104": {"BitmapAssetsHandler.addifCashAsset": {"700": [3987, 3994, true], "701": [4055, 4084, false], "702": [4581, 4599, false], "703": [4806, 4819, false]}, "BitmapAssetsHandler.getNetPresentValueFromBitmap": {"697": [7286, 7292, false]}, "BitmapAssetsHandler.getPresentValue": {"698": [5889, 5910, false], "699": [5976, 5988, false]}, "BitmapAssetsHandler.setAssetsBitmap": {"704": [1437, 1495, true]}}, "105": {"PortfolioHandler._loadAssetArray": {"813": [17737, 17767, true]}, "PortfolioHandler._storeAsset": {"802": [12091, 12111, false], "803": [12115, 12159, true], "804": [12220, 12238, false], "805": [12242, 12276, true], "806": [12334, 12353, false], "807": [12357, 12411, true], "808": [12464, 12497, false], "809": [12501, 12534, true]}, "PortfolioHandler._updatePortfolioContext": {"810": [11410, 11429, true], "811": [11433, 11464, false], "812": [11589, 11636, true]}, "PortfolioHandler.buildPortfolioState": {"794": [16119, 16140, false]}, "PortfolioHandler.deleteAsset": {"795": [13151, 13193, true], "796": [13241, 13277, true], "797": [13428, 13482, false], "798": [13498, 13560, true], "799": [14036, 14065, false], "800": [14069, 14111, false], "801": [14239, 14266, false]}, "PortfolioHandler.storeAssets": {"784": [7751, 7805, true], "785": [7881, 7927, false], "786": [7931, 7950, false], "787": [8277, 8323, false], "788": [8561, 8607, false], "789": [9825, 9844, false], "790": [9893, 9939, false], "791": [9959, 10013, true], "792": [10574, 10598, true], "793": [10660, 10694, true]}}, "109": {"AssetHandler.getCashClaims": {"666": [5921, 5954, false], "667": [5958, 5977, true]}, "AssetHandler.getPresentfCashValue": {"668": [2992, 3005, false], "669": [3314, 3356, true], "670": [3557, 3569, true]}, "AssetHandler.getRiskAdjustedDebtDiscount": {"677": [4459, 4474, true]}, "AssetHandler.getRiskAdjustedPresentfCashValue": {"671": [5106, 5119, false], "672": [5164, 5176, true], "673": [5344, 5386, true], "674": [5591, 5603, true]}, "AssetHandler.getRiskAdjustedfCashDiscount": {"678": [4064, 4098, false]}, "AssetHandler.getSettlementDate": {"675": [1333, 1352, false], "676": [1356, 1410, true]}}, "117": {"ABDKMath64x64.div": {"591": [6730, 6736, true], "592": [6796, 6815, false], "593": [6819, 6838, true]}, "ABDKMath64x64.exp": {"595": [21388, 21412, true], "596": [21436, 21461, false]}, "ABDKMath64x64.exp_2": {"599": [14687, 14711, true], "600": [14735, 14760, false], "601": [14852, 14878, false], "602": [14956, 14982, false], "603": [15060, 15086, false], "604": [15164, 15190, false], "605": [15268, 15293, false], "606": [15371, 15396, false], "607": [15474, 15499, false], "608": [15577, 15602, false], "609": [15680, 15704, false], "610": [15782, 15806, false], "611": [15884, 15908, false], "612": [15986, 16010, false], "613": [16088, 16111, false], "614": [16189, 16212, false], "615": [16290, 16313, false], "616": [16391, 16414, false], "617": [16492, 16514, false], "618": [16592, 16614, false], "619": [16692, 16714, false], "620": [16792, 16814, false], "621": [16892, 16913, false], "622": [16991, 17012, false], "623": [17090, 17111, false], "624": [17189, 17210, false], "625": [17288, 17308, false], "626": [17386, 17406, false], "627": [17484, 17504, false], "628": [17582, 17602, false], "629": [17680, 17699, false], "630": [17777, 17796, false], "631": [17874, 17893, false], "632": [17971, 17990, false], "633": [18068, 18086, false], "634": [18164, 18182, false], "635": [18260, 18278, false], "636": [18356, 18374, false], "637": [18452, 18469, false], "638": [18547, 18564, false], "639": [18642, 18659, false], "640": [18737, 18754, false], "641": [18832, 18848, false], "642": [18926, 18942, false], "643": [19020, 19036, false], "644": [19114, 19130, false], "645": [19208, 19223, false], "646": [19301, 19316, false], "647": [19394, 19409, false], "648": [19487, 19502, false], "649": [19580, 19594, false], "650": [19672, 19686, false], "651": [19764, 19778, false], "652": [19856, 19870, false], "653": [19948, 19961, false], "654": [20039, 20052, false], "655": [20130, 20143, false], "656": [20221, 20234, false], "657": [20312, 20324, false], "658": [20402, 20414, false], "659": [20492, 20504, false], "660": [20582, 20594, false], "661": [20672, 20683, false], "662": [20761, 20772, false], "663": [20850, 20861, false], "664": [20939, 20950, false], "665": [21075, 21104, true]}, "ABDKMath64x64.fromUInt": {"590": [1983, 2006, true]}, "ABDKMath64x64.mul": {"597": [4286, 4305, false], "598": [4309, 4328, true]}, "ABDKMath64x64.neg": {"594": [8646, 8660, true]}}, "118": {"Bitmap.getMSB": {"686": [2263, 2269, true], "687": [2311, 2351, false], "688": [2424, 2448, false], "689": [2519, 2535, false], "690": [2606, 2618, false], "691": [2689, 2699, false], "692": [2768, 2777, false], "693": [2846, 2854, false], "694": [2923, 2931, false]}, "Bitmap.getNextBitNum": {"685": [3345, 3359, false]}, "Bitmap.isBitSet": {"695": [811, 821, false], "696": [825, 837, true]}, "Bitmap.setBit": {"682": [438, 448, false], "683": [452, 464, true], "684": [509, 514, false]}}, "119": {}, "120": {"SafeInt256.abs": {"850": [1730, 1735, false]}, "SafeInt256.add": {"835": [1524, 1552, true]}, "SafeInt256.div": {"830": [1121, 1128, false], "831": [1132, 1148, true]}, "SafeInt256.min": {"847": [3489, 3494, true]}, "SafeInt256.mul": {"825": [510, 517, false], "826": [528, 534, true], "827": [538, 548, true], "828": [573, 579, true], "829": [583, 593, true]}, "SafeInt256.negChange": {"837": [3781, 3793, true], "838": [3798, 3808, false], "839": [3812, 3820, false], "840": [3845, 3855, false], "841": [3859, 3866, false], "842": [4073, 4081, false], "843": [4085, 4094, false], "844": [4307, 4317, false], "845": [4321, 4329, false]}, "SafeInt256.sub": {"832": [1398, 1426, true]}, "SafeInt256.subNoNeg": {"836": [1898, 1904, true]}, "SafeInt256.toInt128": {"833": [3176, 3205, false], "834": [3209, 3238, true]}, "SafeInt256.toInt88": {"848": [2976, 3004, false], "849": [3008, 3036, true]}, "SafeInt256.toUint": {"846": [2486, 2492, true]}}, "121": {"SafeUint256.add": {"853": [481, 487, true]}, "SafeUint256.div": {"857": [1879, 1884, true]}, "SafeUint256.mul": {"854": [1233, 1239, false], "855": [1294, 1304, true]}, "SafeUint256.sub": {"852": [869, 875, true]}, "SafeUint256.toInt": {"856": [4964, 4994, true]}, "SafeUint256.toUint32": {"860": [3560, 3581, true]}, "SafeUint256.toUint40": {"858": [3699, 3720, true]}, "SafeUint256.toUint80": {"851": [4259, 4280, true]}, "SafeUint256.toUint88": {"859": [4398, 4419, true]}}, "171": {}, "178": {}, "180": {}, "183": {}, "187": {}, "189": {}, "190": {}, "191": {}, "192": {}, "194": {}, "199": {}, "200": {}, "43": {"nTokenRedeemAction._redeem": {"577": [2846, 2864, true], "578": [3073, 3117, true], "579": [3159, 3194, true], "580": [3581, 3596, false], "581": [3600, 3620, false]}, "nTokenRedeemAction._reduceLiquidAssets": {"582": [7646, 7664, false]}, "nTokenRedeemAction._removeLiquidityTokens": {"584": [9812, 9860, true], "585": [10411, 10429, false], "586": [12402, 12458, false], "587": [12482, 12499, false]}, "nTokenRedeemAction._resolveResidualAssets": {"583": [6386, 6412, true]}, "nTokenRedeemAction._sellfCashAssets": {"588": [14246, 14262, false], "589": [14739, 14756, false]}, "nTokenRedeemAction.nTokenRedeemViaBatch": {"576": [2497, 2524, true]}}, "72": {}, "76": {}, "77": {}, "78": {}, "81": {}, "82": {}, "83": {"Emitter.emitChangefCashLiquidity": {"741": [7781, 7798, false]}, "Emitter.emitNTokenBurn": {"739": [16093, 16114, false], "740": [16118, 16134, false]}, "Emitter.emitTransferfCash": {"742": [8139, 8150, false], "743": [8427, 8437, false]}}, "84": {"BalanceHandler._setPositiveCashBalance": {"680": [17529, 17548, true]}, "BalanceHandler.getPositiveCashBalance": {"679": [17125, 17141, true]}, "BalanceHandler.incrementFeeToReserve": {"681": [15362, 15370, true]}}, "85": {}, "86": {}, "87": {}, "88": {}, "89": {}, "93": {"CashGroup.calculateOracleRate": {"707": [9202, 9215, false], "708": [9817, 9833, false]}, "CashGroup.calculateRiskAdjustedDebtOracleRate": {"712": [8580, 8604, false], "713": [8737, 8763, false]}, "CashGroup.calculateRiskAdjustedfCashOracleRate": {"714": [8002, 8028, false]}, "CashGroup.interpolateOracleRate": {"709": [6242, 6271, true], "710": [6345, 6373, true], "711": [6609, 6630, false]}, "CashGroup.loadMarket": {"705": [5305, 5321, false], "706": [5325, 5364, true]}}, "94": {"DateTime.getBitNumFromMaturity": {"723": [4231, 4260, false], "724": [4335, 4360, false], "725": [4628, 4666, false], "726": [4728, 4767, false], "727": [5610, 5650, false], "728": [6060, 6102, false]}, "DateTime.getMarketIndex": {"735": [3175, 3193, true], "736": [3212, 3263, true], "737": [3535, 3561, false], "738": [3678, 3703, false]}, "DateTime.getMaturityFromBitNum": {"729": [6970, 6981, true], "730": [7053, 7066, true], "731": [7218, 7253, false], "732": [7335, 7371, false], "733": [7715, 7753, false]}, "DateTime.getReferenceTime": {"715": [445, 475, true]}, "DateTime.getTimeUTC0": {"734": [688, 709, true]}, "DateTime.getTradedMarket": {"716": [1034, 1044, false], "717": [1084, 1094, false], "718": [1138, 1148, false], "719": [1185, 1195, false], "720": [1236, 1246, false], "721": [1287, 1297, false], "722": [1339, 1349, false]}}, "96": {"InterestRateCurve._getMarketIndexOffset": {"765": [2338, 2353, true], "766": [2372, 2420, true], "767": [2446, 2461, true]}, "InterestRateCurve._getNetCashAmountsUnderlying": {"749": [23070, 23117, false], "750": [23651, 23694, true]}, "InterestRateCurve._getfCashInterestRateParams": {"760": [2821, 2836, true]}, "InterestRateCurve.calculateMaxRate": {"768": [3274, 3317, true]}, "InterestRateCurve.calculatefCashTrade": {"744": [19486, 19501, true], "745": [19769, 19804, false], "746": [20675, 20702, false], "747": [21242, 21289, false], "748": [21614, 21639, false]}, "InterestRateCurve.getInterestRate": {"753": [12812, 12832, true], "754": [13163, 13211, true], "755": [13227, 13267, false], "756": [13483, 13523, false]}, "InterestRateCurve.getPostFeeInterestRate": {"761": [17668, 17697, false], "762": [17742, 17771, false], "763": [17817, 17825, false], "764": [18153, 18181, true]}, "InterestRateCurve.getfCashUtilization": {"751": [12202, 12217, true], "752": [12236, 12260, true]}, "InterestRateCurve.updateRateOracle": {"757": [10916, 10940, true], "758": [11088, 11114, false], "759": [11280, 11311, false]}}, "97": {"Market._setMarketStorage": {"772": [9074, 9089, false], "773": [9093, 9123, true], "774": [9178, 9197, false], "775": [9201, 9235, true], "776": [9294, 9313, false], "777": [9317, 9352, true], "778": [9412, 9426, false], "779": [9430, 9460, true], "780": [9541, 9578, true]}, "Market._setTotalLiquidity": {"782": [8635, 8654, false], "783": [8658, 8692, true]}, "Market.executeTrade": {"771": [3446, 3463, false]}, "Market.getOracleRate": {"781": [5212, 5226, true]}, "Market.removeLiquidity": {"769": [2181, 2200, false], "770": [2233, 2251, true]}}, "98": {"nTokenCalculations.getLiquidityTokenWithdraw": {"864": [10037, 10052, false]}, "nTokenCalculations.getNTokenMarketValue": {"865": [15768, 15781, true]}, "nTokenCalculations.getNTokenifCashBits": {"861": [16434, 16453, false], "862": [16661, 16678, false], "863": [16776, 16803, false]}}, "99": {"nTokenHandler.getNextSettleTime": {"866": [13786, 13817, false]}}}, "statements": {"100": {"nTokenSupply.getStoredNTokenSupplyFactors": {"172": [1170, 1209], "173": [1422, 1487], "174": [1497, 1552]}}, "101": {"PrimeCashExchangeRate._getScalarIncrease": {"443": [22109, 22215], "444": [22577, 22830], "445": [22841, 23089], "446": [23275, 23339], "447": [24262, 24350]}, "PrimeCashExchangeRate._setPrimeCashFactorsOnAccrue": {"363": [10428, 10474], "364": [10484, 10534], "365": [10544, 10586], "366": [10596, 10634], "367": [10714, 10764], "368": [10774, 10820], "369": [10830, 10896], "370": [10906, 10956], "371": [11121, 11182], "372": [11196, 11275], "373": [11296, 11409]}, "PrimeCashExchangeRate._updatePrimeCashScalars": {"356": [24923, 25110], "357": [25255, 25328], "358": [26113, 26270], "359": [26299, 26440], "360": [26454, 26509], "361": [26569, 26601], "362": [26612, 26648]}, "PrimeCashExchangeRate.getPrimeCashFactors": {"347": [1875, 1910], "348": [1920, 1959], "349": [1969, 2004], "350": [2014, 2053], "351": [2063, 2118], "352": [2128, 2167], "353": [2177, 2208], "354": [2218, 2245], "355": [2255, 2318]}, "PrimeCashExchangeRate.getPrimeCashHoldingsOracle": {"442": [3767, 3782]}, "PrimeCashExchangeRate.getPrimeCashRateStateful": {"280": [28307, 28450], "281": [28464, 28535], "282": [28566, 28610], "283": [28664, 28916]}, "PrimeCashExchangeRate.getPrimeInterestRates": {"552": [20169, 20317], "553": [20454, 20507], "554": [20903, 20979], "555": [21282, 21353]}, "PrimeCashExchangeRate.updateTotalfCashDebtOutstanding": {"105": [17930, 17937], "106": [18412, 18438], "107": [18448, 18531], "108": [19310, 19388]}}, "102": {"PrimeRateLib.buildPrimeRateStateful": {"181": [16456, 16538]}, "PrimeRateLib.convertFromUnderlying": {"122": [15224, 15290]}}, "103": {}, "104": {"BitmapAssetsHandler.addifCashAsset": {"234": [3979, 3995], "235": [4291, 4336], "236": [4351, 4497], "237": [4619, 4668], "238": [4697, 4747], "239": [4761, 4781], "240": [4933, 4973], "241": [4988, 5233], "242": [5248, 5296], "243": [5310, 5360], "244": [5381, 5396]}, "BitmapAssetsHandler.getAssetsBitmap": {"59": [1250, 1283]}, "BitmapAssetsHandler.getNetPresentValueFromBitmap": {"118": [7216, 7267], "119": [7294, 7308], "120": [7381, 7430], "121": [7444, 7481]}, "BitmapAssetsHandler.getPresentValue": {"220": [5926, 5941], "221": [6008, 6140], "222": [6268, 6449]}, "BitmapAssetsHandler.getifCashNotional": {"216": [1997, 2049]}, "BitmapAssetsHandler.setAssetsBitmap": {"312": [1429, 1515], "313": [1634, 1675]}}, "105": {"PortfolioHandler._loadAssetArray": {"427": [17729, 17768], "428": [18366, 18408], "429": [18422, 18460], "430": [18474, 18514], "431": [18528, 18566], "432": [18580, 18604], "433": [18114, 18117], "434": [18625, 18638]}, "PortfolioHandler._sortId": {"551": [16496, 16683]}, "PortfolioHandler._sortInPlace": {"435": [16858, 16885], "436": [17053, 17120], "437": [16923, 16926], "438": [17347, 17390], "439": [17408, 17463], "440": [17481, 17484], "441": [17512, 17515]}, "PortfolioHandler._storeAsset": {"257": [12083, 12160], "258": [12212, 12277], "259": [12326, 12412], "260": [12456, 12535], "261": [12585, 12635], "262": [12645, 12691], "263": [12701, 12748], "264": [12758, 12803]}, "PortfolioHandler._updatePortfolioContext": {"265": [11480, 11511], "266": [11531, 11570], "267": [11581, 11637], "268": [11692, 11825], "269": [11836, 11895]}, "PortfolioHandler.buildPortfolioState": {"175": [16142, 16154], "176": [16165, 16231], "177": [16241, 16283], "178": [16293, 16346]}, "PortfolioHandler.deleteAsset": {"245": [13143, 13194], "246": [13233, 13278], "247": [13407, 13570], "248": [13609, 13646], "249": [14131, 14160], "250": [14178, 14200], "251": [13943, 13946], "252": [14387, 14440], "253": [14454, 14461], "254": [14777, 14952], "255": [14962, 15013], "256": [15023, 15076]}, "PortfolioHandler.getSortedPortfolio": {"279": [15289, 15359]}, "PortfolioHandler.getSortedPortfolioWithIds": {"345": [15543, 15594], "346": [15604, 15630]}, "PortfolioHandler.storeAssets": {"142": [7743, 7806], "143": [7970, 8000], "144": [7511, 7514], "145": [8867, 8899], "146": [9076, 9311], "147": [8179, 8182], "148": [9846, 9854], "149": [9868, 10027], "150": [10079, 10294], "151": [10309, 10361], "152": [10375, 10398], "153": [9731, 9734], "154": [10566, 10599], "155": [10652, 10695], "156": [10745, 10897]}}, "109": {"AssetHandler.getCashClaims": {"213": [5913, 5978], "214": [6028, 6108], "215": [6118, 6190]}, "AssetHandler.getDiscountFactor": {"294": [2402, 2472], "295": [2482, 2539], "296": [2549, 2619]}, "AssetHandler.getPresentfCashValue": {"217": [3007, 3015], "218": [3306, 3357], "219": [3550, 3600]}, "AssetHandler.getRiskAdjustedDebtDiscount": {"392": [4442, 4682]}, "AssetHandler.getRiskAdjustedPresentfCashValue": {"298": [5121, 5129], "299": [5336, 5387], "300": [5584, 5634]}, "AssetHandler.getRiskAdjustedfCashDiscount": {"393": [3910, 3981], "394": [4100, 4134]}, "AssetHandler.getSettlementDate": {"314": [1325, 1411], "315": [1586, 1607], "316": [1910, 1972]}, "AssetHandler.isLiquidityToken": {"293": [920, 1051]}}, "117": {"ABDKMath64x64.div": {"383": [6721, 6737], "384": [6787, 6839]}, "ABDKMath64x64.exp": {"387": [21379, 21413], "388": [21463, 21471], "389": [21491, 21579]}, "ABDKMath64x64.exp_2": {"467": [14678, 14712], "468": [14762, 14770], "469": [14886, 14946], "470": [14990, 15050], "471": [15094, 15154], "472": [15198, 15258], "473": [15301, 15361], "474": [15404, 15464], "475": [15507, 15567], "476": [15610, 15670], "477": [15712, 15772], "478": [15814, 15874], "479": [15916, 15976], "480": [16018, 16078], "481": [16119, 16179], "482": [16220, 16280], "483": [16321, 16381], "484": [16422, 16482], "485": [16522, 16582], "486": [16622, 16682], "487": [16722, 16782], "488": [16822, 16882], "489": [16921, 16981], "490": [17020, 17080], "491": [17119, 17179], "492": [17218, 17278], "493": [17316, 17376], "494": [17414, 17474], "495": [17512, 17572], "496": [17610, 17670], "497": [17707, 17767], "498": [17804, 17864], "499": [17901, 17961], "500": [17998, 18058], "501": [18094, 18154], "502": [18190, 18250], "503": [18286, 18346], "504": [18382, 18442], "505": [18477, 18537], "506": [18572, 18632], "507": [18667, 18727], "508": [18762, 18822], "509": [18856, 18916], "510": [18950, 19010], "511": [19044, 19104], "512": [19138, 19198], "513": [19231, 19291], "514": [19324, 19384], "515": [19417, 19477], "516": [19510, 19570], "517": [19602, 19662], "518": [19694, 19754], "519": [19786, 19846], "520": [19878, 19938], "521": [19969, 20029], "522": [20060, 20120], "523": [20151, 20211], "524": [20242, 20302], "525": [20332, 20392], "526": [20422, 20482], "527": [20512, 20572], "528": [20602, 20662], "529": [20691, 20751], "530": [20780, 20840], "531": [20869, 20929], "532": [20958, 21018], "533": [21025, 21060], "534": [21066, 21105]}, "ABDKMath64x64.fromUInt": {"381": [1974, 2007], "382": [2013, 2036]}, "ABDKMath64x64.mul": {"390": [4277, 4329]}, "ABDKMath64x64.neg": {"385": [8637, 8661], "386": [8667, 8676]}, "ABDKMath64x64.toInt": {"391": [1651, 1673]}}, "118": {"Bitmap.getMSB": {"186": [2255, 2270], "187": [2367, 2376], "188": [2390, 2400], "189": [2464, 2472], "190": [2486, 2495], "191": [2551, 2559], "192": [2573, 2582], "193": [2634, 2642], "194": [2656, 2665], "195": [2715, 2722], "196": [2736, 2744], "197": [2793, 2800], "198": [2814, 2822], "199": [2870, 2877], "200": [2891, 2899], "201": [2933, 2941]}, "Bitmap.getNextBitNum": {"86": [3361, 3369], "87": [3380, 3420]}, "Bitmap.isBitSet": {"310": [803, 838], "311": [877, 942]}, "Bitmap.setBit": {"75": [430, 465], "76": [530, 576], "77": [607, 654]}, "Bitmap.totalBitsSet": {"78": [1113, 1269], "79": [1279, 1435], "80": [1445, 1532], "81": [1542, 1698], "82": [1708, 1725], "83": [1735, 1752], "84": [1762, 1780], "85": [1790, 1827]}}, "119": {}, "120": {"SafeInt256.abs": {"343": [1737, 1750], "344": [1765, 1773]}, "SafeInt256.add": {"123": [1516, 1553]}, "SafeInt256.div": {"100": [1111, 1150], "101": [1258, 1267]}, "SafeInt256.divInRatePrecision": {"545": [2129, 2176]}, "SafeInt256.min": {"223": [3482, 3502]}, "SafeInt256.mul": {"97": [487, 496], "98": [519, 549], "99": [564, 594]}, "SafeInt256.mulInRatePrecision": {"297": [2350, 2397]}, "SafeInt256.neg": {"157": [1632, 1649]}, "SafeInt256.negChange": {"202": [3823, 3831], "203": [4040, 4052], "204": [4271, 4286], "205": [4562, 4584]}, "SafeInt256.sub": {"102": [1390, 1427]}, "SafeInt256.subNoNeg": {"124": [1867, 1880], "125": [1890, 1905]}, "SafeInt256.toInt128": {"103": [3167, 3239], "104": [3272, 3288]}, "SafeInt256.toInt88": {"307": [2967, 3037]}, "SafeInt256.toUint": {"206": [2478, 2493]}}, "121": {"SafeUint256.add": {"290": [473, 488]}, "SafeUint256.div": {"379": [1871, 1885], "380": [1895, 1907]}, "SafeUint256.divInRatePrecision": {"556": [2805, 2861]}, "SafeUint256.divInScalarPrecision": {"448": [3129, 3178]}, "SafeUint256.mul": {"374": [1241, 1249], "375": [1286, 1305]}, "SafeUint256.mulInRatePrecision": {"573": [2966, 3022]}, "SafeUint256.mulInScalarPrecision": {"449": [3285, 3334]}, "SafeUint256.sub": {"270": [861, 876], "271": [886, 898]}, "SafeUint256.toInt": {"376": [4955, 4995]}, "SafeUint256.toUint32": {"452": [3552, 3582]}, "SafeUint256.toUint40": {"450": [3691, 3721]}, "SafeUint256.toUint80": {"207": [4251, 4281]}, "SafeUint256.toUint88": {"451": [4390, 4420]}}, "171": {}, "178": {}, "180": {}, "183": {}, "187": {}, "189": {}, "190": {}, "191": {}, "192": {}, "194": {}, "199": {}, "200": {}, "43": {"nTokenRedeemAction._redeem": {"2": [2838, 2865], "3": [2914, 2960], "4": [3065, 3141], "5": [3151, 3212], "6": [3722, 3990], "7": [4194, 4208], "8": [5359, 5434], "9": [5444, 5623]}, "nTokenRedeemAction._reduceLiquidAssets": {"39": [7552, 7632], "40": [7680, 7744], "41": [7758, 7931], "42": [8102, 8267], "43": [8278, 8332]}, "nTokenRedeemAction._reduceifCashAssetsProportional": {"20": [17467, 17476], "21": [18014, 18043], "22": [18061, 18086], "23": [18104, 18148], "24": [18166, 18201], "25": [18219, 18229], "26": [18260, 18308], "27": [18379, 18424], "28": [18439, 18584], "29": [18657, 18706], "30": [18720, 18757], "31": [18778, 18791]}, "nTokenRedeemAction._removeLiquidityTokens": {"127": [9535, 9591], "128": [9738, 9790], "129": [9804, 9861], "130": [9875, 9920], "131": [9991, 10050], "132": [10199, 10268], "133": [10286, 10344], "134": [10922, 10962], "135": [10980, 11012], "136": [12687, 12702], "137": [12724, 12760], "138": [13218, 13261], "139": [13384, 13610], "140": [9435, 9438], "141": [13631, 13658]}, "nTokenRedeemAction._resolveResidualAssets": {"46": [6221, 6297], "47": [6311, 6357], "48": [6378, 6426], "49": [6437, 6477]}, "nTokenRedeemAction._sellfCashAssets": {"158": [14152, 14171], "159": [14264, 14272], "160": [14287, 14353], "161": [14828, 14846], "162": [15100, 15252], "163": [15271, 15320], "164": [15338, 15353], "165": [14223, 14226]}, "nTokenRedeemAction.nTokenRedeemViaBatch": {"0": [2489, 2562], "1": [2572, 2593]}}, "72": {}, "76": {}, "77": {}, "78": {"LibStorage._getStorageSlot": {"185": [16015, 16060]}}, "81": {}, "82": {}, "83": {"Emitter._fCashPair": {"285": [7101, 7112], "286": [7122, 7155], "287": [7218, 7251], "288": [7261, 7294], "289": [7305, 7325]}, "Emitter._posfCashId": {"342": [6324, 6536]}, "Emitter.emitChangefCashLiquidity": {"208": [7800, 7814], "209": [7840, 7852], "210": [7873, 7926]}, "Emitter.emitMintOrBurnPrimeCash": {"453": [13136, 13183]}, "Emitter.emitNTokenBurn": {"44": [16150, 16217], "45": [16231, 16299]}, "Emitter.emitTransferfCash": {"276": [8152, 8159], "277": [8439, 8462], "278": [8473, 8541]}, "Emitter.emitfCashMarketTrade": {"340": [12308, 12399], "341": [12680, 12752]}}, "84": {"BalanceHandler._setPositiveCashBalance": {"224": [17521, 17549], "225": [17770, 17823]}, "BalanceHandler.getPositiveCashBalance": {"179": [16996, 17036], "180": [17117, 17142]}, "BalanceHandler.incrementFeeToReserve": {"337": [15354, 15371], "338": [15517, 15553], "339": [15563, 15635]}, "BalanceHandler.setBalanceStorageForNToken": {"126": [14670, 14733]}}, "85": {}, "86": {}, "87": {}, "88": {}, "89": {}, "93": {"CashGroup._get25BPSValue": {"574": [2437, 2530]}, "CashGroup._getCashGroupStorageBytes": {"284": [10745, 10769]}, "CashGroup.buildCashGroup": {"182": [15047, 15255]}, "CashGroup.buildCashGroupStateful": {"56": [15947, 15991]}, "CashGroup.calculateOracleRate": {"301": [9231, 9319], "302": [9981, 10029], "303": [9938, 9963], "304": [10127, 10203], "305": [10222, 10412], "306": [10441, 10535]}, "CashGroup.calculateRiskAdjustedDebtOracleRate": {"535": [8272, 8336], "536": [8606, 8614], "537": [8625, 8661], "538": [8765, 8791]}, "CashGroup.calculateRiskAdjustedfCashOracleRate": {"539": [7796, 7860], "540": [7871, 7926], "541": [8030, 8056]}, "CashGroup.getDebtBuffer": {"557": [3365, 3410]}, "CashGroup.getMaxDiscountFactor": {"542": [4297, 4356]}, "CashGroup.getMaxOracleRate": {"558": [2817, 2866]}, "CashGroup.getMinOracleRate": {"560": [2649, 2698]}, "CashGroup.getRateOracleTimeWindow": {"291": [4965, 5063]}, "CashGroup.getReserveFeeShare": {"550": [4581, 4639]}, "CashGroup.getfCashHaircut": {"559": [3091, 3138]}, "CashGroup.interpolateOracleRate": {"403": [6234, 6272], "404": [6337, 6374], "405": [6646, 6890], "406": [7233, 7569]}, "CashGroup.loadMarket": {"211": [5297, 5383], "212": [5514, 5696]}}, "94": {"DateTime.getBitNumFromMaturity": {"68": [4262, 4279], "69": [4362, 4379], "70": [4682, 4707], "71": [5254, 5589], "72": [5870, 6039], "73": [6325, 6500], "74": [6646, 6665]}, "DateTime.getMarketIndex": {"395": [3167, 3194], "396": [3204, 3264], "397": [3563, 3580], "398": [3705, 3721], "399": [3377, 3380], "400": [3742, 3750]}, "DateTime.getMaturityFromBitNum": {"88": [6962, 6982], "89": [7045, 7067], "90": [7269, 7314], "91": [7623, 7694], "92": [7387, 7609], "93": [7935, 8008], "94": [7769, 7921], "95": [8208, 8285], "96": [8039, 8194]}, "DateTime.getReferenceTime": {"57": [437, 476], "58": [486, 536]}, "DateTime.getTimeUTC0": {"183": [680, 710], "184": [720, 756]}, "DateTime.getTradedMarket": {"60": [1046, 1070], "61": [1096, 1124], "62": [1150, 1171], "63": [1197, 1222], "64": [1248, 1273], "65": [1299, 1325], "66": [1351, 1377], "67": [1388, 1411]}}, "96": {"InterestRateCurve._getMarketIndexOffset": {"561": [2330, 2354], "562": [2364, 2421], "563": [2431, 2498]}, "InterestRateCurve._getNetCashAmountsUnderlying": {"410": [23119, 23138], "411": [23385, 23479], "412": [23489, 23632], "413": [23643, 23695], "414": [23951, 24041], "415": [24757, 24828]}, "InterestRateCurve._getfCashInterestRateParams": {"543": [2855, 2900]}, "InterestRateCurve._setNewMarketState": {"424": [25509, 25580], "425": [25649, 25691], "426": [25890, 25940]}, "InterestRateCurve.calculateMaxRate": {"575": [3267, 3539]}, "InterestRateCurve.calculatefCashTrade": {"317": [19478, 19502], "318": [19806, 19822], "319": [20257, 20602], "320": [20704, 20720], "321": [20981, 21043], "322": [21057, 21125], "323": [21291, 21307], "324": [21641, 21657], "325": [21726, 21771], "326": [21792, 22026]}, "InterestRateCurve.getActiveInterestRateParameters": {"409": [7526, 7677]}, "InterestRateCurve.getInterestRate": {"419": [12804, 12833], "420": [13155, 13212], "421": [13341, 13462], "422": [13764, 14096], "423": [14341, 14679]}, "InterestRateCurve.getPostFeeInterestRate": {"546": [17699, 17728], "547": [17773, 17802], "548": [17945, 17998], "549": [18131, 18218]}, "InterestRateCurve.getPrimeCashInterestRateParameters": {"572": [8246, 8302]}, "InterestRateCurve.getfCashExchangeRate": {"544": [26592, 26643]}, "InterestRateCurve.getfCashUtilization": {"416": [12194, 12218], "417": [12228, 12261], "418": [12271, 12411]}, "InterestRateCurve.unpackInterestRateParams": {"564": [3844, 4008], "565": [4018, 4182], "566": [4192, 4257], "567": [4439, 4518], "568": [4528, 4607], "569": [4666, 4768], "570": [4778, 4887], "571": [4897, 4968]}, "InterestRateCurve.updateRateOracle": {"463": [10908, 10941], "464": [11116, 11139], "465": [11313, 11336], "466": [11713, 11870]}}, "97": {"Market._loadMarketStorage": {"454": [6307, 6332], "455": [6342, 6368], "456": [6378, 6422], "457": [6432, 6484], "458": [6494, 6548], "459": [6558, 6602], "460": [6612, 6670], "461": [6715, 6767], "462": [6798, 6823]}, "Market._setMarketStorage": {"327": [9066, 9124], "328": [9170, 9236], "329": [9286, 9353], "330": [9404, 9461], "331": [9507, 9579], "332": [9635, 9680], "333": [9690, 9743], "334": [9753, 9808], "335": [9818, 9863], "336": [9873, 9932]}, "Market._setMarketStorageForLiquidity": {"308": [7392, 7616], "309": [7627, 7683]}, "Market._setTotalLiquidity": {"407": [8627, 8693], "408": [8750, 8803]}, "Market.executeTrade": {"272": [3086, 3318], "273": [3563, 3816], "274": [3830, 3911], "275": [3926, 4085]}, "Market.getOracleRate": {"401": [5204, 5253], "402": [5264, 5492]}, "Market.loadMarket": {"292": [10441, 10658]}, "Market.loadMarketWithSettlementDate": {"377": [11138, 11218], "378": [11229, 11455]}, "Market.removeLiquidity": {"226": [2202, 2215], "227": [2225, 2252], "228": [2297, 2377], "229": [2387, 2459], "230": [2470, 2540], "231": [2550, 2603], "232": [2613, 2678], "233": [2689, 2726]}}, "98": {"nTokenCalculations._getProportionalLiquidityTokens": {"109": [8679, 8722], "110": [8732, 8767], "111": [8914, 8992], "112": [8814, 8817]}, "nTokenCalculations.getLiquidityTokenWithdraw": {"32": [10054, 10117], "33": [11618, 11767], "34": [12877, 12995], "35": [13010, 13139], "36": [13242, 13309], "37": [12085, 12088], "38": [13330, 13365]}, "nTokenCalculations.getNTokenMarketValue": {"113": [14095, 14130], "114": [14293, 14352], "115": [14889, 15139], "116": [15938, 15998], "117": [14217, 14220]}, "nTokenCalculations.getNTokenifCashBits": {"14": [16455, 16472], "15": [16680, 16699], "16": [16966, 17020], "17": [17836, 17885], "18": [17453, 17456], "19": [17914, 17933]}}, "99": {"nTokenHandler.getNTokenContext": {"167": [1552, 1583], "168": [1593, 1658], "169": [1668, 1717], "170": [1727, 1770], "171": [1780, 1817]}, "nTokenHandler.getNextSettleTime": {"12": [13819, 13827], "13": [13837, 13917]}, "nTokenHandler.loadNTokenPortfolioNoCashGroup": {"50": [12044, 12091], "51": [12589, 12637], "52": [12647, 12687], "53": [12697, 12727], "54": [12738, 12886], "55": [12897, 12988]}, "nTokenHandler.loadNTokenPortfolioStateful": {"10": [13163, 13213], "11": [13223, 13286]}, "nTokenHandler.nTokenAddress": {"166": [2088, 2112]}}}}, "dependencies": ["ABDKMath64x64", "AccountContextHandler", "AggregatorInterface", "AggregatorV2V3Interface", "AggregatorV3Interface", "AssetHandler", "BalanceHandler", "Bitmap", "BitmapAssetsHandler", "CErc20Interface", "CTokenInterface", "CashGroup", "CompoundHandler", "Constants", "DateTime", "Deployments", "Emitter", "ExternalLending", "FloatingPoint", "GenericToken", "IBeacon", "IEIP20NonStandard", "IERC20", "IPrimeCashHoldingsOracle", "IRewarder", "ITransferEmitter", "IUpgradeableBeacon", "Incentives", "InterestRateCurve", "LibStorage", "Market", "PortfolioHandler", "PrimeCashExchangeRate", "PrimeRateLib", "PrimeSupplyCap", "SafeInt256", "SafeUint256", "TokenHandler", "WETH9", "nTokenCalculations", "nTokenHandler", "nTokenSupply"], "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630e22aaa31461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046151b3565b610070565b60405161006791906152ec565b60405180910390f35b6000806000610084868686600160006100bd565b9150915080516000146100b25760405162461bcd60e51b81526004016100a990615443565b60405180910390fd5b5090505b9392505050565b60006060600085136100ce57600080fd5b6100d6614fd8565b6100e081886101d9565b426100ea826101f2565b116101075760405162461bcd60e51b81526004016100a990615325565b8060400151861261012a5760405162461bcd60e51b81526004016100a990615379565b6060600061014f8360c001518a61ffff16856080015142876000015160200151610225565b9050801580159061015d5750855b156101835761017c8360c001518a85608001518b8760400151866102d5565b9150600090505b600080610192858b42866104c8565b909250905060006101a8868c85858815426106a5565b90506101b68d8d838e61073b565b6101c5868e8c8c85878b610873565b909e909d509b505050505050505050505050565b6101e382826108cc565b6101ec81610968565b90915250565b600081608001516000141561020957506000610220565b60808201516276a7009061021c90610987565b0190505b919050565b600060028211610237575060006102cc565b600061024387876109a8565b9050806102515790506102cc565b600061025c85610987565b905085811415610286575074400080000002002000000002000000200000000020191690506102cc565b60015b8481116102c657600061029b826109de565b8301905060006102ab8983610a82565b5090506102ba85826000610b8d565b94505050600101610289565b50909150505b95945050505050565b606060006102e283610bd8565b905060006102ee610ca8565b905060008267ffffffffffffffff8111801561030957600080fd5b5060405190808252806020026020018201604052801561034357816020015b610330615021565b8152602001906001900390816103285790505b50905060009250600061035586610cb5565b90505b80156104b857600061036a8a83610cda565b905060008460008e6001600160a01b03166001600160a01b0316815260200190815260200160002060008d61ffff1681526020019081526020016000206000838152602001908152602001600020905060008160000160009054906101000a9004600f0b600f0b90506000806103f38c6103ed8f86610d9590919063ffffffff16565b90610de3565b90506000878a8151811061040357fe5b602002602001015190508f816000019061ffff16908161ffff168152505085816020018181525050600160ff168160400181815250508181606001818152505060018a01995061045c8285610e1490919063ffffffff16565b9250505061046981610e2a565b8354600f9190910b6001600160801b03166001600160801b03199091161783556104968f8f868585610e58565b6104a28a866000610b8d565b99506104ad8a610cb5565b945050505050610358565b50925050505b9695505050505050565b606080826104e3576104da8686610f31565b9150915061069c565b6000806104f288876000611038565b915091506000815167ffffffffffffffff8111801561051057600080fd5b5060405190808252806020026020018201604052801561053a578160200160208202803683370190505b5090506000806105688b60c001518c600001516000015161ffff168d608001518c8f6000015160018e611195565b508b5160400151909150610587906105809083611213565b869061125b565b91505060005b82518110156106925760008b602001516000015182815181106105ac57fe5b60200260200101516060015190506105d7836105d18d84610d9590919063ffffffff16565b90610d95565b8483815181106105e357fe5b60200260200101818152505061061d8c604001516103ed8887868151811061060757fe5b6020026020010151610de390919063ffffffff16565b84838151811061062957fe5b602002602001018181525050610672816103ed86858151811061064857fe5b602002602001015188868151811061065c57fe5b6020026020010151610d9590919063ffffffff16565b85838151811061067e57fe5b60209081029190910101525060010161058d565b5090945090925050505b94509492505050565b60006106c687604001516103ed888a60600151610d9590919063ffffffff16565b905060008113156106f85760608701516106e09082611271565b6060880181905260c08801518851516106f89261128d565b61071061070988888888878961129d565b829061125b565b905061072d8760c0015188602001516114e090919063ffffffff16565b505050509695505050505050565b6000610745611720565b61ffff8516600090815260209190915260408120546001600160a01b0316915061076d61172d565b61ffff8616600090815260209190915260408120546001600160a01b031691508413801561079b5750600083135b1561086b576040516323de665160e01b81526001600160a01b038316906323de6651906107d09084908a90899060040161528a565b600060405180830381600087803b1580156107ea57600080fd5b505af11580156107fe573d6000803e3d6000fd5b50505050806001600160a01b031663ad1c095d8761081b8661173a565b6040518363ffffffff1660e01b81526004016108389291906152ae565b600060405180830381600087803b15801561085257600080fd5b505af1158015610866573d6000803e3d6000fd5b505050505b505050505050565b600060606001871561089e57600061088c8b878c611748565b9250905061089a878261125b565b9650505b80156108bc5760405162461bcd60e51b81526004016100a9906153f1565b5093989197509095505050505050565b6108d98161ffff1661187a565b6001600160a01b031660c08301819052600090819081906108f9906118a0565b945094509450505060006109108660c0015161190c565b505060808701859052604087018190526001600160d01b0319831660a088015260c08701519091506109449084600061196d565b602087015260c08601516109589086611a00565b6060909601959095525050505050565b610970615065565b600061097b83611a51565b90506100b68382611a63565b60006276a70082101561099957600080fd5b6276a700825b06909103919050565b6000806109b3611aa6565b6001600160a01b03851660009081526020918252604080822086835290925220549150505b92915050565b600081600114156109f357506276a700610220565b8160021415610a06575062ed4e00610220565b8160031415610a1a57506301da9c00610220565b8160041415610a2e57506303b53800610220565b8160051415610a4257506309450c00610220565b8160061415610a56575063128a1800610220565b8160071415610a6a57506325143000610220565b60405162461bcd60e51b81526004016100a990615352565b6000806000610a9085611ab3565b905062015180840615610aaa576000809250925050610b86565b838110610abe576000809250925050610b86565b6201518081850304605a8111610adb57925060019150610b869050565b6101688111610b1a576000620151806207e900840604820160591901905060068104605a0160068281610b0a57fe5b0660001494509450505050610b86565b6108708111610b4a5760006201518062278d00840604820161016719019050601e8104608701601e8281610b0a57fe5b611de28111610b7a576000620151806276a700840604820161086f19019050605a810460c301605a8281610b0a57fe5b61010060009350935050505b9250929050565b600060018310158015610ba257506101008311155b610bab57600080fd5b8115610bc45750600160ff1b60001983011c83176100b6565b50600160ff1b60001983011c1983166100b6565b600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f07070707070707070707070707070707070707070707070707070707070707079190911601600881901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f908116911601601081901c01602081901c01604081901c01608081901c60ff90811691160190565b6000806109d8600c611acf565b600081610cc457506000610220565b610ccd82611ae1565b60ff036001019050919050565b600081610ce657600080fd5b610100821115610cf557600080fd5b6000610d0084611ab3565b90506000605a8411610d1b57506201518083020190506109d8565b60878411610d43575060591983016207e900908102908206909103016276a7000190506109d8565b60c38411610d6c5750608619830162278d00908102908206909103016301da9c000190506109d8565b5060c21983016276a70090810290820690910301630b1fa8000190506109d8565b505092915050565b818102600019831415610dc557811580610db7575082828281610db457fe5b05145b610dc057600080fd5b6109d8565b821580610dda575081838281610dd757fe5b05145b6109d857600080fd5b600081600019148015610df95750600160ff1b83145b15610e0357600080fd5b818381610e0c57fe5b059392505050565b808203828113156000831215146109d857600080fd5b600060016001607f1b03198212801590610e4b575060016001607f1b038213155b610e5457600080fd5b5090565b6000610e648383611b7a565b905080610e715750610f2a565b6000610e7b611c08565b61ffff87166000908152602082815260408083208984529091528120549192506001600160501b03909116810390610eb38285610e14565b90506000811315610ec357600080fd5b610edc610ed7610ed28361173a565b611c15565b611c24565b61ffff89166000908152602085815260408083208b84529091529020805469ffffffffffffffffffff19166001600160501b0392909216919091179055610f2589898987611c3a565b505050505b5050505050565b6020820151515160609081908067ffffffffffffffff81118015610f5457600080fd5b50604051908082528060200260200182016040528015610f7e578160200160208202803683370190505b5092508067ffffffffffffffff81118015610f9857600080fd5b50604051908082528060200260200182016040528015610fc2578160200160208202803683370190505b50915060005b8181101561102f5760008660200151600001518281518110610fe657fe5b602002602001015160600151905061100f87604001516103ed8884610d9590919063ffffffff16565b85838151811061101b57fe5b602090810291909101015250600101610fc8565b50509250929050565b602083015151516000906060908067ffffffffffffffff8111801561105c57600080fd5b50604051908082528060200260200182016040528015611086578160200160208202803683370190505b509150611091615091565b60005b8281101561118a5787516110af90836001808501908b611cc4565b600088602001516000015182815181106110c557fe5b602002602001015190506000806110dc8386611d37565b915091506111026107098c60c001518d600001516000015161ffff168660200151611db2565b87858151811061110e57fe5b602002602001018181525050600061116c6111656111598a888151811061113157fe5b602002602001015187602001518f8f61114e578b60a00151611154565b8b60c001515b611df7565b8e516040015190611213565b849061125b565b9050611178898261125b565b98505060019093019250611094915050565b505050935093915050565b60008060006111a384610cb5565b90505b80156112065760006111b88983610cda565b905060006111ca8c8c848c8c8c611e67565b90506111d6858261125b565b945060008112156111e657600193505b6111f286846000610b8d565b95506111fd86610cb5565b925050506111a6565b5097509795505050505050565b81516000908190611237906103ed856ec097ce7bc90715b34b9f1000000000610d95565b9050600083126112475780611253565b61125381600019611ec3565b949350505050565b818101828112156000831215146109d857600080fd5b600061127d8383610e14565b905060008112156109d857600080fd5b611298838383611ed9565b505050565b60006112a7615091565b60005b602089015151518110156114d457600089602001516000015182815181106112ce57fe5b602002602001015190506113028883815181106112e757fe5b60200260200101518260600151610e1490919063ffffffff16565b606082018190526000126113285760405162461bcd60e51b81526004016100a990615414565b60008160a00151600381111561133a57fe5b1461134457600080fd5b600160a082018190528a5161135f918590858101908a611cc4565b6000806113888a858151811061137157fe5b602002602001015186611f4d90919063ffffffff16565b92509050611396868261125b565b9550506000861561147e5760006113c28d60c001518e600001516000015161ffff168660200151611db2565b905060006113e18e604001516103ed8f85610d9590919063ffffffff16565b90506113ed848261125b565b8b87815181106113f957fe5b60200260200101818152505061140e8161173a565b604088015190935061142a90611424848761125b565b9061125b565b15801561144b57508a868151811061143e57fe5b6020026020010151600019145b156114775760008b878151811061145e57fe5b6020908102919091010152611474836001610e14565b92505b50506114a7565b6114a489858151811061148d57fe5b602002602001015183610e1490919063ffffffff16565b90505b6114c48c60c00151846000015185602001518f6080015185611ff5565b5050600190920191506112aa9050565b50509695505050505050565b6000808080808080805b8951518110156115715760008a60000151828151811061150657fe5b6020026020010151905060038081111561151c57fe5b8160a00151600381111561152c57fe5b141561153757600080fd5b60028160a00151600381111561154957fe5b1415801561155957506060810151155b15611568576115688b83612151565b506001016114ea565b5060005b8951518110156116145760008a60000151828151811061159157fe5b60200260200101519050600260038111156115a857fe5b8160a0015160038111156115b857fe5b14156115cc5760808101516000905561160b565b60018160a0015160038111156115de57fe5b14156115f7576080810151806115f483826122a1565b50505b611603818686866123d8565b919650945092505b50600101611575565b5060608901516000611624612446565b6001600160a01b038b1660009081526020829052604081209192505b8c60200151518110156116ee5760008d60200151828151811061165f57fe5b6020026020010151905080606001516000141561167c57506116e6565b60028160a00151600381111561168e57fe5b141580156116ac575060038160a0015160038111156116a957fe5b14155b6116b557600080fd5b6116c1818989896123d8565b919950975095506116de818487600881106116d857fe5b016122a1565b600185019450505b600101611640565b5060108311156116fd57600080fd5b64ffffffffff84111561170f57600080fd5b50939a929950975095509350505050565b6000806109d86021611acf565b6000806109d86003611acf565b60006109d860001983610d95565b600080611753615091565b6000915060005b85518110156118705785818151811061176f57fe5b60200260200101516000141561178457611868565b8651611797908360018401600042611cc4565b60006117fe8689600001516117be8a86815181106117b157fe5b602002602001015161173a565b6117f0428d602001516000015188815181106117d657fe5b60200260200101516020015161245390919063ffffffff16565b879392919060018801612468565b5090508061180f5760019350611866565b61183f8860c00151878a600001516000015186602001518b878151811061183257fe5b60200260200101516124e7565b611849858261125b565b9450600087838151811061185957fe5b6020026020010181815250505b505b60010161175a565b5050935093915050565b60008061188561172d565b6000938452602052505060409020546001600160a01b031690565b6000806000806000806118b1612564565b6001600160a01b039097166000908152602097909752505060409094205461ffff81169563ffffffff620100008304811696506601000000000000830416945060ff600160501b8304169350600160581b90910460d01b9150565b60008060008061191a612571565b6001600160a01b0395909516600090815260209590955250506040909220546bffffffffffffffffffffffff811693600160601b82046001600160801b03169350600160e01b90910463ffffffff169150565b6119756150d9565b61197d6150d9565b60ff841661198c5790506100b6565b611996858561257e565b815260ff841660608201528267ffffffffffffffff811180156119b857600080fd5b506040519080825280602002602001820160405280156119f257816020015b6119df615021565b8152602001906001900390816119d75790505b506020820152949350505050565b600080611a0b612592565b6001600160a01b03851660009081526020828152604080832061ffff8816845290915281208054600160a81b9004600a90810b900b9450919250831215610d8d57600080fd5b611a59615101565b6109d8824261259f565b611a6b615065565b6000611a7a8461ffff16612665565b6040805160808101825261ffff96909616865260ff821660208701528501939093525050606082015290565b6000806109d8600b611acf565b600062015180821015611ac557600080fd5b620151808261099f565b6000620f424082602681111561021c57fe5b600081611aed57600080fd5b600160801b8210611b0057608091821c91015b600160401b8210611b1357604091821c91015b6401000000008210611b2757602091821c91015b620100008210611b3957601091821c91015b6101008210611b4a57600891821c91015b60108210611b5a57600491821c91015b60048210611b6a57600291821c91015b6002821061022057600101919050565b600081831480611b97575060008312158015611b97575060008212155b15611ba4575060006109d8565b60008313158015611bb55750816000125b15611bc15750816109d8565b60008213158015611bd25750826000125b15611be757611be08261173a565b90506109d8565b60008313158015611bf9575060008213155b1561003557611be08383610e14565b6000806109d86020611acf565b600080821215610e5457600080fd5b60006001600160501b03821115610e5457600080fd5b600080611c48858585612682565b915091506000806000851215611c6057879150611c63565b50865b806001600160a01b0316826001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611cb29291906152c7565b60405180910390a45050505050505050565b82600111158015611cd9575084602001518311155b611cf55760405162461bcd60e51b81526004016100a9906153c9565b6000611d12611d03856109de565b611d0c84610987565b90612769565b905061086b866000015161ffff16828486611d2c8b61277b565b8a949392919061278f565b600080611d4784604001516127b9565b8015611d5857506000846060015112155b611d6157600080fd5b611d8483608001516103ed86606001518660600151610d9590919063ffffffff16565b9150611da983608001516103ed86606001518660400151610d9590919063ffffffff16565b90509250929050565b600080611dbd610ca8565b6001600160a01b03861660009081526020918252604080822087835283528082208683529092522054600f90810b900b9150509392505050565b600084611e0657506000611253565b6000611e128585612453565b90506000611e2082856127cf565b9050633b9aca00811315611e3357600080fd5b6000611e3f8883612842565b905060008812611e4f5780611e5b565b611e5b81600019611ec3565b98975050505050505050565b600080611e75888888611db2565b9050848611611e855790506104be565b8215611e9f57611e978482888861285b565b9150506104be565b6000611eac8588886128d4565b9050611eba82888884611df7565b925050506104be565b6000818312611ed257816100b6565b5090919050565b6000811215611ee757600080fd5b6000611ef1612592565b6001600160a01b03851660009081526020828152604080832061ffff881684529091529020909150611f22836129bd565b8154600a9190910b6001600160581b0316600160a81b026001600160a81b0390911617905550505050565b60008082611f6057506000905080610b86565b60008313611f6d57600080fd5b611f8c84608001516103ed858760600151610d9590919063ffffffff16565b9150611fad84608001516103ed858760400151610d9590919063ffffffff16565b6080850151909150611fbf9084611271565b60808501526040840151611fd39082611271565b60408501526060840151611fe79083611271565b6060850152610b86846129ee565b600080612006878761ffff166109a8565b90506000612012610ca8565b6001600160a01b03891660009081526020828152604080832061ffff8c16845282528083208a845290915281209192508061204d888a610a82565b915091508061205b57600080fd5b6120658583612a46565b156120e8578254600f90810b900b600061207f898361125b565b905061208a81610e2a565b8554600f9190910b6001600160801b03166001600160801b03199091161785556120b78d8d8d8585610e58565b806120cb576120c887856000610b8d565b96505b6120da8d8d61ffff1689612a76565b96506102cc95505050505050565b8615612142576120f787610e2a565b8354600f9190910b6001600160801b03166001600160801b03199091161783556121258b8b8b60008b610e58565b61213185836001610b8d565b94506121428b8b61ffff1687612a76565b50949998505050505050505050565b815151811061215f57600080fd5b600082606001511161217057600080fd5b60008260000151828151811061218257fe5b602002602001015190506002600381111561219957fe5b8160a0015160038111156121a957fe5b141580156121c7575060038160a0015160038111156121c457fe5b14155b6121d057600080fd5b606083018051600019019052600080805b855151811015612243576000866000015182815181106121fd57fe5b6020026020010151905082816080015111801561222a575060028160a00151600381111561222757fe5b14155b1561223a57806080015192508193505b506001016121e1565b508184141561225c575050600260a0919091015261229d565b60008560000151838151811061226e57fe5b602090810291909101015160808581018051918301805190915252600160a09182015260029401939093525050505b5050565b815161ffff16158015906122be57508151613fff61ffff90911611155b6122c757600080fd5b816020015160001080156122e45750602082015164ffffffffff10155b6122ed57600080fd5b8160400151600010801561230657506040820151600810155b61230f57600080fd5b60608201516a7fffffffffffffffffffff191380159061233e575060608201516a7fffffffffffffffffffff12155b61234757600080fd5b8151815460208401516040850151606090950151600a0b6001600160581b0316600160401b0272ffffffffffffffffffffff00000000000000001960ff909616600160381b0267ff000000000000001964ffffffffff909316620100000266ffffffffff00001961ffff90961661ffff19909516949094179490941692909217169190911792909216919091179055565b6000806000806123e788612ad0565b90508415806123f557508085115b156123fe578094505b868061240e575060008860600151125b965061ffff86161561241f57600080fd5b50509451939560f09490941b6001600160f01b03191660109390931c929092179350919050565b6000806109d8600d611acf565b60008282111561246257600080fd5b50900390565b600080600061247a8988888888612b37565b919450909250905082156124db5760006124938a612c77565b90506124b7818b604001518c606001518d60a001518e60c001518f60e00151612c7b565b87516124c39083612d8f565b6124d98989600001518c602001518a8887612dc6565b505b50965096945050505050565b806124f157610f2a565b60006124fd8484612e9d565b9050600082121561250c579394935b6001600160a01b03808616908716337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628461254687612ebb565b604051612554929190615484565b60405180910390a4505050505050565b6000806109d86002611acf565b6000806109d86011611acf565b606061258a8383612edc565b509392505050565b6000806109d86006611acf565b6125a7615101565b60006125b284612ef4565b905082816000015110156125f1576000806125cc86612fbe565b90506125da8684838861303b565b90935091506125ea8683856130df565b50506125fe565b805183146125fe57600080fd5b604051806060016040528061262c6126278460a001518560c0015161331590919063ffffffff16565b61333c565b815260200161264f6126278460a001518560e0015161331590919063ffffffff16565b8152602001826060015181525091505092915050565b600080612670613352565b60009384526020525050604090205490565b6040805160028082526060828101909352829160009181602001602082028036833701905050905060006126b68787612e9d565b905080826000815181106126c657fe5b602002602001018181525050600160401b8117826001815181106126e657fe5b60209081029190910101526040805160028082526060820190925260009181602001602082028036833701905050905061271f86612ebb565b8160008151811061272c57fe5b60200260200101818152505061274186612ebb565b8160018151811061274e57fe5b6020908102919091010152919350909150505b935093915050565b6000828201838110156100b657600080fd5b6060015161012c60089190911c60ff160290565b60006276a70061279e85610987565b0190506127b08787878787878761335f565b50505050505050565b6000600282108015906109d85750506008101590565b6000806127f26127ed6301da9c006127e78688613315565b90613396565b6133b5565b905061280481621dcd6560491b6133d3565b905061281761281282613426565b613448565b905061282981621dcd6560491b61349d565b90506000612836826134d3565b60070b95945050505050565b60006100b66128518484610d95565b633b9aca00610de3565b60008361286a57506000611253565b60008085136128835761287e8685856134dc565b61288e565b61288e868585613518565b9050633b9aca008113156128a157600080fd5b60006128ad8683612842565b9050600086126128bd57806128c9565b6128c981600019611ec3565b979650505050505050565b60008060006128e886602001518686613559565b9150915060006128f78761277b565b9050816129175786516129109061ffff168783886135e0565b93506129b3565b600061292286610987565b90506000612939612932866109de565b8390612769565b905060006129518a6000015161ffff1683868b6135e0565b9050600080876001141561296f5750506040808b015101518861299e565b61298561297e60018a036109de565b8690612769565b905061299b8c6000015161ffff1682888d6135e0565b91505b6129ab818584868f61367f565b985050505050505b5050509392505050565b60006a7fffffffffffffffffffff198212801590610e4b57506a7fffffffffffffffffffff821315610e5457600080fd5b60006129f982612c77565b905060008160000160189054906101000a900463ffffffff169050612a3882846040015185606001518660a001518563ffffffff168860e00151612c7b565b6112988284608001516136dd565b600060018210158015612a5b57506101008211155b612a6457600080fd5b50600019011b600160ff1b9081161490565b6014612a8182610bd8565b1115612a9f5760405162461bcd60e51b81526004016100a9906153a0565b6000612aa9611aa6565b6001600160a01b039094166000908152602094855260408082209482529390945250912055565b6000808260400151118015612aea57506040820151600810155b612af357600080fd5b6040820151600210612b0a57506020810151610220565b6000612b1c60018460400151036109de565b60208401519091506100b6906276a70090611d0c9084612453565b6000806000808411612b4857600080fd5b85886040015113612b6157506000915081905080612c6c565b6000612b71886000015186613726565b90506000612b908a606001518a6040015161374090919063ffffffff16565b90506000806000612ba5858e8e878f8f61376d565b98509194509250905082612bc85760008060009750975097505050505050612c6c565b60408d0151612bd7908c611271565b60408e0152612be6848361125b565b93506000612bfa60008f604001518761384c565b9050633b9aca00811115612c1e576000806000985098509850505050505050612c6c565b6000612c2a8783613889565b905080612c4857600080600099509950995050505050505050612c6c565b60a08f01525060408c0151612c61908e9085858561393c565b909850965050505050505b955095509592505050565b5190565b60008512158015612c9357506001600160501b038513155b612c9c57600080fd5b60008412158015612cb457506001600160501b038413155b612cbd57600080fd5b826000108015612cd1575063ffffffff8311155b612cda57600080fd5b816000108015612cee575063ffffffff8211155b612cf757600080fd5b63ffffffff811115612d0857600080fd5b855469ffffffffffffffffffff19166001600160501b039586161769ffffffffffffffffffff60501b1916600160501b94909516939093029390931763ffffffff60a01b1916600160a01b63ffffffff928316021763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b9190921602179055565b6000811215612d9d57600080fd5b6000612dab610fee84611a00565b9050612db7818361125b565b9050611298610fee8483611ed9565b6000612dd0611720565b61ffff8716600090815260209190915260408120546001600160a01b03169150612df861172d565b61ffff8816600090815260209190915260408120546001600160a01b03169150612e22858561125b565b9050826001600160a01b031663ccb2d5ed8a8484612e3f89611c15565b6040518563ffffffff1660e01b8152600401612e5e9493929190615261565b600060405180830381600087803b158015612e7857600080fd5b505af1158015612e8c573d6000803e3d6000fd5b50505050610f25828a8a8a8a6124e7565b67ffff000000000000603083901b16600882901b1760011792915050565b600080821215612ed557612ece8261173a565b9050610220565b5080610220565b606080612ee98484613991565b9150611da982613ab3565b612efc615122565b6000612f06613c74565b61ffff93841660009081526020918252604090819020805464ffffffffff811686526501000000000081046001600160581b03908116948701949094526001820154841692860192909252600160d81b820463ffffffff166060860152600160801b9091049091166080840152600201546001600160501b0380821660a0850152600160501b8204811660c0850152600160a01b82041660e0840152600160f01b900460ff1661012c02909216610100820152919050565b600080612fca83613c81565b6001600160a01b031663ef81f2166040518163ffffffff1660e01b81526004016040805180830381600087803b15801561300357600080fd5b505af1158015613017573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112539190615204565b613043615122565b6000806000613053888689613cb1565b60c08b019290925260e08a0192909252602089015191935091506130779083612769565b60208801526080870151600090156130a55760808801516130a29061309c8982612453565b90613dbc565b90505b6130c56130ba670de0b6b3a764000083612769565b60a08a015190613dd9565b60a089015250506080860194909452505082529092909150565b60006130e9613c74565b60008561ffff168152602001908152602001600020905061310d8260000151613df6565b815464ffffffffff191664ffffffffff9190911617815560a082015161313290611c24565b60028201805469ffffffffffffffffffff19166001600160501b039290921691909117905560c082015161316590611c24565b81600201600a6101000a8154816001600160501b0302191690836001600160501b0316021790555061319a8260e00151611c24565b8160020160146101000a8154816001600160501b0302191690836001600160501b031602179055506131cf8260200151613e0a565b81546001600160581b039190911665010000000000026fffffffffffffffffffffff000000000019909116178155604082015161320b90613e0a565b6001820180546affffffffffffffffffffff19166001600160581b0392909216919091179055608082015161323f90613e0a565b81546001600160581b0391909116600160801b026affffffffffffffffffffff60801b19909116178155606082015161327790613e20565b815463ffffffff91909116600160d81b0263ffffffff60d81b1990911617815582156132c35760006132a88461333c565b90506132b48582612d8f565b6132c1610fee8683613e33565b505b8361ffff167fef25641e225e493886510ca1ad6584fa7b442b9fea820a29d1de3ce27d270fd28360a001518460c001518560e0015160405161330793929190615492565b60405180910390a250505050565b600082613324575060006109d8565b8282028284828161333157fe5b04146100b657600080fd5b60006001600160ff1b03821115610e5457600080fd5b6000806109d86009611acf565b61336c8787878685613ebd565b6133858760e001518860a001518960c001518588613f77565b60c090970196909652505050505050565b60008082116133a457600080fd5b8183816133ad57fe5b049392505050565b6000677fffffffffffffff8211156133cc57600080fd5b5060401b90565b600081600f0b600014156133e657600080fd5b600082600f0b604085600f0b901b816133fb57fe5b05905060016001607f1b0319811280159061341d575060016001607f1b038113155b6100b657600080fd5b6000600f82900b60016001607f1b0319141561344157600080fd5b5060000390565b6000600160461b82600f0b1261345d57600080fd5b683fffffffffffffffff1982600f0b121561347a57506000610220565b6109d8608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d613fff565b6000600f83810b9083900b0260401d60016001607f1b0319811280159061341d575060016001607f1b038113156100b657600080fd5b600f0b60401d90565b6000806134ea858585614ab4565b9050801561350a576135056134ff8585612453565b826127cf565b6102cc565b633b9aca0095945050505050565b600080613526858585614b04565b90506135356134ff8585612453565b9150600061354286614b45565b905082811215613550578092505b50509392505050565b6000806000851161356957600080fd5b600785111561357757600080fd5b600061358284610987565b905060015b8681116135da5760006135a361359c836109de565b8490612769565b9050868114156135bb57509250600091506127619050565b868111156135d157509250600191506127619050565b50600101613587565b50600080fd5b6000806135eb614b60565b905060006276a7006135fc85610987565b6000898152602085815260408083208b84528252808320949093018083529390522080549192509063ffffffff600160a01b8204811691600160c01b8104821691600160e01b90910416816136635760405162461bcd60e51b81526004016100a9906152f5565b6136708184848c8c613f77565b9b9a5050505050505050505050565b600081861061368d57600080fd5b84821061369957600080fd5b8383106136bf576136b884611d0c8888036127e78388038b8803613315565b90506102cc565b6136b86136d68787036127e78688038a8703613315565b8590612453565b600081121580156136f557506001600160501b038113155b6136fe57600080fd5b600191909101805469ffffffffffffffffffff19166001600160501b03909216919091179055565b61372e61516e565b6100b6838361373b614b6d565b614b7a565b6000806112376ec097ce7bc90715b34b9f10000000006103ed866000015186610d9590919063ffffffff16565b6000806000806000613784878b604001518a61384c565b9050633b9aca008111156137a65760008060008094509450945094505061383f565b60006137b28c83613889565b905060006137d26137cd6137c6848b614bd1565b8b90614c37565b61173a565b90506137e28d8360008c12614c50565b93506137f46137cd6137c6868b614bd1565b96508087131561380357600080fd5b600061380f8289610e14565b905061382960646103ed6138228f614cc8565b8490610d95565b95506138386137cd898861125b565b9650505050505b9650965096509692505050565b60008083121561385b57600080fd5b600082121561386957600080fd5b611253610ed2613879848661125b565b6138838688611271565b90614c37565b60008083608001511161389b57600080fd5b633b9aca008211156138ac57600080fd5b825182116138cb5782516040840151611be091906127e7908590613315565b82602001518211613903576040830151835160208501516060860151611be09392611d0c92819003916127e791880390859003613315565b6100b68360600151611d0c8560200151633b9aca00036127e787606001518860800151038860200151880361331590919063ffffffff16565b6000808061394a8786611213565b606089015190915061395c908261125b565b60608901524260e089015260006139738886611213565b905060006139818989611213565b9a91995090975050505050505050565b606060088260ff1611156139a457600080fd5b60006139ae612446565b6001600160a01b038516600090815260208290526040812091925060ff851667ffffffffffffffff811180156139e357600080fd5b50604051908082528060200260200182016040528015613a1d57816020015b613a0a615021565b815260200190600190039081613a025790505b50905060005b8560ff16811015613aa9576000838260088110613a3c57fe5b0190506000838381518110613a4d57fe5b602090810291909101810151835461ffff8116825264ffffffffff620100008204169282019290925260ff600160381b8304166040820152600160401b909104600a90810b900b60608201526080019190915250600101613a23565b5095945050505050565b80516060908067ffffffffffffffff81118015613acf57600080fd5b50604051908082528060200260200182016040528015613af9578160200160208202803683370190505b50915060005b81811015613b56576000848281518110613b1557fe5b60200260200101519050613b36816000015182602001518360400151614cd5565b848381518110613b4257fe5b602090810291909101015250600101613aff565b5060015b81811015613c6d57805b600081118015613b9c5750838181518110613b7b57fe5b6020026020010151846001830381518110613b9257fe5b6020026020010151115b15613c6457838181518110613bad57fe5b6020026020010151846001830381518110613bc457fe5b6020026020010151856001840381518110613bdb57fe5b60200260200101868481518110613bee57fe5b6020026020010182815250828152505050848181518110613c0b57fe5b6020026020010151856001830381518110613c2257fe5b6020026020010151866001840381518110613c3957fe5b60200260200101878481518110613c4c57fe5b60209081029190910101919091525260001901613b64565b50600101613b5a565b5050919050565b6000806109d8601d611acf565b600080613c8c614cfe565b61ffff939093166000908152602093909352505060409020546001600160a01b031690565b600080600080600080613cc48988614d0b565b89519095509193509150600090613ceb90613ce0908b90612453565b633b9aca0090613315565b9050613d25613d1a6301da9c00613d028585613315565b81613d0957fe5b670de0b6b3a7640000919004612769565b60e08a015190613dd9565b9650613d47613d3c6301da9c00613d028785613315565b60c08a015190613dd9565b955081831415613d5e575060009350613db3915050565b6000613d80613d756301da9c00613d028786613315565b60e08b015190613dd9565b90506000613d8e8983612453565b9050613dab886127e7838d6040015161331590919063ffffffff16565b965050505050505b93509350935093565b60006100b6613dd384670de0b6b3a7640000613315565b83613396565b60006100b6613de88484613315565b670de0b6b3a7640000613396565b600064ffffffffff821115610e5457600080fd5b60006001600160581b03821115610e5457600080fd5b600063ffffffff821115610e5457600080fd5b6000613e3d611720565b61ffff8416600090815260209190915260409081902054905163ad1c095d60e01b81526001600160a01b039091169150819063ad1c095d90613e8590879086906004016152ae565b600060405180830381600087803b158015613e9f57600080fd5b505af1158015613eb3573d6000803e3d6000fd5b5050505050505050565b6000613ec7614b60565b6000868152602082815260408083208884528252808320868452825291829020808a5290890187905280546001600160501b03808216938b0193909352600160501b810490921660608a015263ffffffff600160a01b8304811660a08b0152600160c01b8304811660c08b0152600160e01b90920490911660e0890152909150808415613f665760018201546001600160501b03166080890152613eb3565b600060808901525050505050505050565b6000808311613f8557600080fd5b81861115613f945750836102cc565b6000613fa08388612453565b905083811115613fb357859150506102cc565b6000613fbf8286614da6565b90506000613fd1633b9aca0083612453565b9050613ff2633b9aca006127e7613fe88a85613315565b611d0c8c87613315565b9998505050505050505050565b6000600160461b82600f0b1261401457600080fd5b683fffffffffffffffff1982600f0b121561403157506000610220565b6001607f1b60006780000000000000008416600f0b13156140635770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315614090577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b13156140bd577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b13156140ea5770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315614117577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b131561414457700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b13156141715770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600083600160381b16600f0b131561419a57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156141c65770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b13156141f2577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b131561421e57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b131561424a577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561427657700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156142a25770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b13156142ce577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156142fa5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b1315614325577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b131561435057700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b131561437b5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b13156143a657700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156143d15770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b13156143fc577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b131561442757700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b1315614452577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561447c57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156144a65770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b13156144d0577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156144fa5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b1315614524577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b131561454e57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156145785770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b13156145a257700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b13156145cb5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b13156145f4577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b131561461d57700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b1315614646577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561466f57700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156146985770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b13156146c1577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156146ea5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b1315614712577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b131561473a57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156147625770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561478a57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156147b25770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b13156147da577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b131561480257700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b131561482a577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b131561485157700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156148785770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b131561489f577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156148c65770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b13156148ed577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b131561491457700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b131561493b5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561496257700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156149885770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b13156149ae577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b13156149d457700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b13156149fa577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b1315614a2057700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b1315614a465770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b1315614a6c577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b1315614a925770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b038111156109d857600080fd5b6000614ac18484846128d4565b90506000614ace85614db9565b9050808211614ae15760009150506100b6565b80820391506000614af186614dc6565b9050828110156135505795945050505050565b6000614b118484846128d4565b9050614b26614b1f85614dd3565b8290612769565b90506000614b3385614de0565b90508082101561258a57949350505050565b606001516207a12060109190911c60ff1602633b9aca000390565b6000806109d8600a611acf565b6000806109d8601b611acf565b614b8261516e565b6000614b8d84614ded565b61ffff861660009081526020859052604081209192509060048610614bb3576001614bb6565b60005b60ff1660028110614bc357fe5b015490506104be8282614e26565b600080614be96127ed6301da9c006127e78787613315565b90506000614bfd82621dcd6560491b6133d3565b90506000614c0a82613448565b90506000614c1e82621dcd6560491b61349d565b9050614c29816134d3565b60070b979650505050505050565b60006100b6614c4a84633b9aca00610d95565b83610de3565b600080614c6f60646127e78760e001518761331590919063ffffffff16565b90508460a00151811015614c84575060a08401515b8460c00151811115614c97575060c08401515b8215614cae57614ca78482612769565b915061258a565b838111614cbd578084036102cc565b506000949350505050565b6060015160181c60ff1690565b67ffff000000000000603084901b1665ffffffffff00600884901b161760ff8216179392505050565b6000806109d8601f611acf565b600080600080600085602001511115614d5857614d55614d3c8660c00151876020015161331590919063ffffffff16565b60e08701516040880151614d4f91613315565b90614da6565b90505b6000614d6387614f45565b9050614d6f8183613889565b94508115614d8657614d8381866001614c50565b93505b602086015115614d9d57614d9a8583614f78565b92505b50509250925092565b60006100b6613dd384633b9aca00613315565b60006109d8826020614f91565b60006109d8826048614f91565b60006109d8826028614f91565b60006109d8826030614f91565b600081600010614dfc57600080fd5b6007821115614e0a57600080fd5b60048210614e1b5760048203614e1d565b815b60080292915050565b614e2e61516e565b6064633b9aca008360ff861660208110614e4457fe5b1a0281614e4d57fe5b0481526064633b9aca008360ff861660010160208110614e6957fe5b1a0281614e7257fe5b04816020018181525050614e978260028560ff160160208110614e9157fe5b1a614fa4565b60808201819052610100908360ff861660030160208110614eb457fe5b1a0281614ebd57fe5b0460408201526080810151610100908360ff861660040160208110614ede57fe5b1a0281614ee757fe5b0460608201526207a1208260ff851660050160208110614f0357fe5b1a0260a0820152622625a08260ff851660060160208110614f2057fe5b1a0260c08201528160ff841660070160208110614f3957fe5b1a60e082015292915050565b614f4d61516e565b6000614f57614b6d565b61ffff84166000908152602091909152604081205491506100b69082614e26565b60006100b6614f878484613315565b633b9aca00613396565b60609091015160ff911c16622625a00290565b60008160ff16609610614fbf5760ff8216622625a0026109d8565b5060951960ff919091160162e4e1c00263165a0bc00190565b6040518060e00160405280614feb615065565b8152602001614ff86150d9565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6040518060c00160405280600061ffff168152602001600081526020016000815260200160008152602001600081526020016000600381111561506057fe5b905290565b6040805160808101825260008082526020820152908101615084615101565b8152600060209091015290565b60405180610100016040528060008019168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b60405180606001604052806000815260200160008152602001600081525090565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6000806000606084860312156151c7578283fd5b83356001600160a01b03811681146151dd578384fd5b9250602084013561ffff811681146151f3578283fd5b929592945050506040919091013590565b60008060408385031215615216578182fd5b505080516020909101519092909150565b6000815180845260208085019450808401835b838110156152565781518752958201959082019060010161523a565b509495945050505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000604082526152da6040830185615227565b82810360208401526102cc8185615227565b90815260200190565b60208082526016908201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b604082015260600190565b60208082526013908201527214995c5d5a5c995cc81cd95d1d1b195b595b9d606a1b604082015260600190565b6020808252600d908201526c092dcecc2d8d2c840d2dcc8caf609b1b604082015260600190565b6020808252600d908201526c43616e6e6f742072656465656d60981b604082015260600190565b6020808252600f908201526e4f766572206d61782061737365747360881b604082015260600190565b6020808252600e908201526d125b9d985b1a59081b585c9ad95d60921b604082015260600190565b602080825260099082015268526573696475616c7360b81b604082015260600190565b60208082526015908201527443616e6e6f742072656465656d20746f207a65726f60581b604082015260600190565b60208082526021908201527f43616e6e6f742072656465656d207669612062617463682c20726573696475616040820152601b60fa1b606082015260800190565b918252602082015260400190565b928352602083019190915260408201526060019056fea2646970667358221220e8a47f105e7617863d0e700a7b51b06e6a5478b7b6ab6939a5841b650821717e64736f6c63430007060033", "deployedSourceMap": "1350:17450:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;2085:515;;;;;;;;;;-1:-1:-1;2085:515:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2208:6;2231:21;2254:39;2297:181;2328:7;2349:10;2377:14;2422:4;2462:5;2297:7;:181::i;:::-;2230:248;;;;2497:15;:22;2523:1;2497:27;2489:73;;;;-1:-1:-1;;;2489:73:43;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;2579:14:43;-1:-1:-1;2085:515:43;;;;;;:::o;2606:3075::-;2795:6;2803:23;2863:1;2846:14;:18;2838:27;;;;;;2875:29;;:::i;:::-;2914:46;:6;2949:10;2914:34;:46::i;:::-;3102:15;3073:26;:6;:24;:26::i;:::-;:44;3065:76;;;;-1:-1:-1;;;3065:76:43;;;;;;;:::i;:::-;3176:6;:18;;;3159:14;:35;3151:61;;;;-1:-1:-1;;;3151:61:43;;;;;;;:::i;:::-;3222:39;3326:18;3347:219;3399:6;:19;;;3432:10;3347:219;;3456:6;:26;;;3496:15;3525:6;:16;;;:31;;;3347:38;:219::i;:::-;3326:240;-1:-1:-1;3581:15:43;;;;;:39;;;3600:20;3581:39;3577:642;;;3740:250;3789:6;:19;;;3826:10;3854:6;:26;;;3898:14;3930:6;:18;;;3966:10;3740:31;:250::i;:::-;3722:268;-1:-1:-1;4207:1:43;;-1:-1:-1;3577:642:43;4445:32;4479:24;4507:119;4565:6;4573:14;4589:15;4606:10;4507:44;:119::i;:::-;4444:182;;-1:-1:-1;4444:182:43;-1:-1:-1;4854:21:43;4878:258;4911:6;4931:14;4444:182;;5011:15;;5111;4878:19;:258::i;:::-;4854:282;;5359:75;5382:7;5391:10;5403:14;5419;5359:22;:75::i;:::-;5480:143;5516:6;5524:7;5533:15;5550:20;5572:14;5588:8;5598:15;5480:22;:143::i;:::-;5444:179;;;;-1:-1:-1;2606:3075:43;-1:-1:-1;;;;;;;;;;;;2606:3075:43:o;13045:248:99:-;13163:50;13194:6;13202:10;13163:30;:50::i;:::-;13242:44;13275:10;13242:32;:44::i;:::-;13223:63;;;-1:-1:-1;13045:248:99:o;13682:242::-;13763:7;13786:6;:26;;;13816:1;13786:31;13782:45;;;-1:-1:-1;13826:1:99;13819:8;;13782:45;13870:26;;;;3200:9:76;;13844:53:99;;:25;:53::i;:::-;:73;13837:80;;13682:242;;;;:::o;16094:1856:98:-;16306:7;16452:1;16434:14;:19;16430:42;;-1:-1:-1;16470:1:98;16455:17;;16430:42;16482:20;16505:61;16541:12;16555:10;16505:35;:61::i;:::-;16482:84;-1:-1:-1;16661:17:98;16657:42;;16687:12;-1:-1:-1;16680:19:98;;16657:42;16710:12;16725:36;16751:9;16725:25;:36::i;:::-;16710:51;;16784:19;16776:4;:27;16772:1172;;;-1:-1:-1;;;16973:47:98;;-1:-1:-1;16966:54:98;;16772:1172;17429:1;17415:485;17437:14;17432:1;:19;17415:485;;17660:16;17686:27;17711:1;17686:24;:27::i;:::-;17679:4;:34;17660:53;;17732:14;17757:61;17788:19;17809:8;17757:30;:61::i;:::-;-1:-1:-1;17731:87:98;-1:-1:-1;17851:34:98;:12;17731:87;17879:5;17851:19;:34::i;:::-;17836:49;-1:-1:-1;;;17453:3:98;;17415:485;;;-1:-1:-1;17921:12:98;;-1:-1:-1;;16094:1856:98;;;;;;;;:::o;16912:1886:43:-;17161:23;17196:13;17212:27;:12;:25;:27::i;:::-;17196:43;;17249:99;17351:35;:33;:35::i;:::-;17249:137;;17397:30;17451:5;17430:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;17397:60;;17475:1;17467:9;;17487:14;17504:28;:12;:26;:28::i;:::-;17487:45;;17542:1226;17549:11;;17542:1226;;17576:16;17595:59;17626:19;17647:6;17595:30;:59::i;:::-;17576:78;;17668:31;17702:5;:20;17708:13;-1:-1:-1;;;;;17702:20:43;-1:-1:-1;;;;;17702:20:43;;;;;;;;;;;;:32;17723:10;17702:32;;;;;;;;;;;;;:42;17735:8;17702:42;;;;;;;;;;;17668:76;;17758:15;17776:9;:18;;;;;;;;;;;;17758:36;;;;17808:20;17861:25;17889:45;17922:11;17889:28;17902:14;17889:8;:12;;:28;;;;:::i;:::-;:32;;:45::i;:::-;17861:73;;17953:27;17983:6;17990:5;17983:13;;;;;;;;;;;;;;17953:43;;18033:10;18014:5;:16;;:29;;;;;;;;;;;18078:8;18061:5;:14;;:25;;;;;5494:1:76;18104:44:43;;:5;:15;;:44;;;;;18183:18;18166:5;:14;;:35;;;;;18228:1;18219:10;;;;18276:32;18289:18;18276:8;:12;;:32;;;;:::i;:::-;18260:48;;17542:1226;;18400:24;:13;:22;:24::i;:::-;18379:45;;;;;;;-1:-1:-1;;;;;18379:45:43;-1:-1:-1;;;;;;18379:45:43;;;;;;18439:145;18510:13;18525:10;18537:8;18547;18557:13;18439:53;:145::i;:::-;18672:34;:12;18692:6;18700:5;18672:19;:34::i;:::-;18657:49;;18729:28;:12;:26;:28::i;:::-;18720:37;;17542:1226;;;;;;;-1:-1:-1;18785:6:43;-1:-1:-1;;;16912:1886:43;;;;;;;;;:::o;9690:3682:98:-;9880:15;;10037;10033:84;;10061:56;10093:6;10101:15;10061:31;:56::i;:::-;10054:63;;;;;;10033:84;10142:31;10187:24;10307:82;10337:6;10356:9;10382:5;10307:20;:82::i;:::-;10128:261;;;;10399:32;10447:8;:15;10434:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10434:29:98;;10399:64;;10868:31;11015:19;11053:381;11119:6;:19;;;11156:6;:16;;;:27;;;11053:381;;11201:6;:26;;;11245:9;11272:6;:16;;;11306:4;11410:10;11053:48;:381::i;:::-;-1:-1:-1;11691:16:98;;:26;;;11014:420;;-1:-1:-1;11645:122:98;;11691:62;;11014:420;11691:48;:62::i;:::-;11645:24;;:28;:122::i;:::-;11618:149;;9690:3682;12041:9;12036:1284;12060:16;:23;12056:1;:27;12036:1284;;;12104:18;12125:6;:21;;;:34;;;12160:1;12125:37;;;;;;;;;;;;;;:46;;;12104:67;;12899:96;12970:24;12899:49;12932:15;12899:11;:32;;:49;;;;:::i;:::-;:70;;:96::i;:::-;12877:16;12894:1;12877:19;;;;;;;;;;;;;:118;;;;;13032:107;13120:6;:18;;;13032:66;13073:24;13032:16;13049:1;13032:19;;;;;;;;;;;;;;:40;;:66;;;;:::i;:107::-;13010:16;13027:1;13010:19;;;;;;;;;;;;;:129;;;;;13256:53;13297:11;13256:36;13272:16;13289:1;13272:19;;;;;;;;;;;;;;13256:8;13265:1;13256:11;;;;;;;;;;;;;;:15;;:36;;;;:::i;:53::-;13242:8;13251:1;13242:11;;;;;;;;;;;;;;;;;:67;-1:-1:-1;12085:3:98;;12036:1284;;;-1:-1:-1;13338:16:98;;-1:-1:-1;13356:8:98;;-1:-1:-1;;;9690:3682:98;;;;;;;;:::o;7028:1450:43:-;7287:21;7569:63;7613:6;:18;;;7569:39;7592:15;7569:6;:18;;;:22;;:39;;;;:::i;:63::-;7552:80;;7663:1;7646:14;:18;7642:300;;;7701:18;;;;:43;;7729:14;7701:27;:43::i;:::-;7680:18;;;:64;;;7817:19;;;;7854:16;;:27;7758:173;;:41;:173::i;:::-;8119:148;8151:106;8174:6;8182:15;8199:16;8217:8;8227:9;8238:18;8151:22;:106::i;:::-;8119:14;;:18;:148::i;:::-;8102:165;;8278:54;8312:6;:19;;;8278:6;:21;;;:33;;:54;;;;:::i;:::-;;;;;7028:1450;;;;;;;;:::o;15769:547:83:-;15909:26;15955:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15955:47:83;;-1:-1:-1;16030:36:83;:34;:36::i;:::-;:48;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16030:48:83;;-1:-1:-1;16093:21:83;;:41;;;;;16133:1;16118:12;:16;16093:41;16089:221;;;16150:67;;-1:-1:-1;;;16150:67:83;;-1:-1:-1;;;;;16150:22:83;;;;;:67;;16173:6;;16181:7;;16198:17;;16150:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16248:6;-1:-1:-1;;;;;16231:39:83;;16271:7;16280:18;:12;:16;:18::i;:::-;16231:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16089:221;15769:547;;;;;;:::o;5687:797:43:-;5986:6;5994:23;6054:4;6068:300;;;;6103:16;6254:43;6271:6;6279:8;6289:7;6254:16;:43::i;:::-;6221:76;-1:-1:-1;6221:76:43;-1:-1:-1;6328:29:43;:14;6221:76;6328:18;:29::i;:::-;6311:46;;6068:300;;6386:26;;6378:48;;;;-1:-1:-1;;;6378:48:43;;;;;;;:::i;:::-;-1:-1:-1;6445:14:43;;6461:15;;-1:-1:-1;5687:797:43;;-1:-1:-1;;;;;;5687:797:43:o;11910:1085:99:-;12066:25;12080:10;12066:25;;:13;:25::i;:::-;-1:-1:-1;;;;;12044:47:99;:19;;;:47;;;12205:27;;;;;;12312:37;;:16;:37::i;:::-;12128:221;;;;;;;;12401:19;12516:62;12558:6;:19;;;12516:41;:62::i;:::-;-1:-1:-1;;12589:26:99;;;:48;;;12647:18;;;:40;;;-1:-1:-1;;;;;;12697:30:99;;:17;;;:30;12812:19;;;;12387:191;;-1:-1:-1;12762:124:99;;12845:16;-1:-1:-1;12762:36:99;:124::i;:::-;12738:21;;;:148;12956:19;;;;12918:70;;12977:10;12918:37;:70::i;:::-;12897:18;;;;:91;;;;-1:-1:-1;;;;;11910:1085:99:o;15734:264:93:-;15819:26;;:::i;:::-;15861;15890:47;15926:10;15890:35;:47::i;:::-;15861:76;;15954:37;15969:10;15981:9;15954:14;:37::i;350:193:94:-;418:7;3200:9:76;445:30:94;;;437:39;;;;;;3200:9:76;506::94;:29;;493:43;;;;350:193;-1:-1:-1;350:193:94:o;1024:266:104:-;1109:20;1141:61;1205:35;:33;:35::i;:::-;-1:-1:-1;;;;;1257:14:104;;;;;;;;;;;;;;:26;;;;;;;;;-1:-1:-1;;1024:266:104;;;;;:::o;948:470:94:-;1011:7;1034:5;1043:1;1034:10;1030:40;;;-1:-1:-1;3200:9:76;1046:24:94;;1030:40;1084:5;1093:1;1084:10;1080:44;;;-1:-1:-1;1103:21:94;1096:28;;1080:44;1138:5;1147:1;1138:10;1134:37;;;-1:-1:-1;3248:11:76;1150:21:94;;1134:37;1185:5;1194:1;1185:10;1181:41;;;-1:-1:-1;1204:18:94;1197:25;;1181:41;1236:5;1245:1;1236:10;1232:41;;;-1:-1:-1;1255:18:94;1248:25;;1232:41;1287:5;1296:1;1287:10;1283:42;;;-1:-1:-1;1306:19:94;1299:26;;1283:42;1339:5;1348:1;1339:10;1335:42;;;-1:-1:-1;1358:19:94;1351:26;;1335:42;1388:23;;-1:-1:-1;;;1388:23:94;;;;;;;:::i;3973:2699::-;4088:7;4097:4;4117:21;4141:22;4153:9;4141:11;:22::i;:::-;4117:46;-1:-1:-1;2982:5:76;4231:8:94;:24;:29;4227:52;;4270:1;4273:5;4262:17;;;;;;;4227:52;4352:8;4335:13;:25;4331:48;;4370:1;4373:5;4362:17;;;;;;;4331:48;2982:5:76;4504:24:94;;;4503:42;3567:2:76;4628:38:94;;4624:1887;;4690:10;-1:-1:-1;4702:4:94;;-1:-1:-1;4682:25:94;;-1:-1:-1;4682:25:94;4624:1887;3619:3:76;4728:10:94;:39;4724:1787;;5040:20;2982:5:76;3103:7;5160:30:94;;5159:68;5079:148;;-1:-1:-1;;5079:148:94;;-1:-1:-1;3359:1:76;5079:148:94;5476:37;3840:2:76;5448:65:94;3359:1:76;5532:12:94;:37;;;;;;5574:1;5531:44;5254:335;;;;;;;;;4724:1787;3673:4:76;5610:10:94;:40;5606:905;;5666:20;2982:5:76;3150:8;5787:31:94;;5786:69;5705:150;;-1:-1:-1;;5705:150:94;;-1:-1:-1;3408:2:76;5705:150:94;5924:38;3893:3:76;5895:67:94;3408:2:76;5981:12:94;:38;;;;5606:905;3730:4:76;6060:10:94;:42;6056:455;;6118:20;2982:5:76;3200:9;6240:33:94;;6239:71;6157:153;;-1:-1:-1;;6157:153:94;;-1:-1:-1;3460:2:76;6157:153:94;6381:40;3949:3:76;6350:71:94;3460:2:76;6440:12:94;:40;;;;6056:455;6654:3;6659:5;6646:19;;;;;;3973:2699;;;;;;:::o;299:372:118:-;411:7;447:1;438:5;:10;;:26;;;;;461:3;452:5;:12;;438:26;430:35;;;;;;509:5;505:160;;;-1:-1:-1;;;;;;565:9:118;;547:28;537:39;;530:46;;505:160;-1:-1:-1;;;;;;643:9:118;;625:28;623:31;614:40;;607:47;;996:838;1198:1;1193:6;;;1202:66;1193:75;;;1118:70;;1117:152;1364:1;1359:6;;;1368:66;1359:75;;;1284:70;;1283:152;1530:1;1525:6;;;1454:66;1450:70;;;;1449:83;1627:1;1622:6;;;1631:66;1622:75;;;1547:70;;1546:152;1722:2;1717:7;;;1712:13;1749:2;1744:7;;;1739:13;1777:2;1772:7;;;1766:14;1816:3;1811:8;;;1822:4;1811:15;;;1798:8;;1797:30;;996:838::o;6520:269:78:-;6585:87;6688:12;6703:39;6719:22;6703:15;:39::i;3194:233:118:-;3256:14;3345;3341:28;;-1:-1:-1;3368:1:118;3361:8;;3341:28;3393:23;3408:6;3393;:23::i;:::-;3387:3;:29;3419:1;3387:33;3380:40;;3194:233;;;:::o;6826:1476:94:-;6939:7;6970:11;6962:20;;;;;;7063:3;7053:6;:13;;7045:22;;;;;;7131:21;7155:22;7167:9;7155:11;:22::i;:::-;7131:46;;7187:16;3840:2:76;7218:6:94;:35;7214:1082;;-1:-1:-1;2982:5:76;7292:22:94;;7276:38;;-1:-1:-1;7269:45:94;;7214:1082;3893:3:76;7335:6:94;:36;7331:965;;-1:-1:-1;;;7642:34:94;;3103:7:76;7641:53:94;;;7578:30;;;7414:195;;;7630:64;7446:40;7630:64;;-1:-1:-1;7623:71:94;;7331:965;3949:3:76;7715:6:94;:38;7711:585;;-1:-1:-1;;;7954:35:94;;3150:8:76;7953:55:94;;;7889:31;;;7796:125;;;7942:66;7828:41;7942:66;;-1:-1:-1;7935:73:94;;7711:585;-1:-1:-1;;;8227:37:94;;3200:9:76;8226:59:94;;;8160:33;;;8066:128;;;8215:70;8098:42;8215:70;;-1:-1:-1;8208:77:94;;7711:585;6826:1476;;;;;;:::o;411:190:120:-;491:5;;;-1:-1:-1;;510:7:120;;506:88;;;528:6;;;:20;;;547:1;542;538;:5;;;;;;:10;528:20;519:30;;;;;;506:88;;;573:6;;;:20;;;592:1;587;583;:5;;;;;;:10;573:20;564:30;;;;;1035:239;1091:8;1121:1;-1:-1:-1;;1121:7:120;:27;;;;;-1:-1:-1;;;1132:1:120;:16;1121:27;1119:30;1111:39;;;;;;1266:1;1262;:5;;;;;;;1035:239;-1:-1:-1;;;1035:239:120:o;1280:154::-;1403:5;;;1398:16;;;;1336:8;1419:6;;;1398:28;1390:37;;;;;3098:197;3149:6;-1:-1:-1;;;;;;3176:29:120;-1:-1:-1;3176:29:120;;;:62;;-1:-1:-1;;;;;;3209:29:120;;;3176:62;3167:72;;;;;;-1:-1:-1;3286:1:120;3098:197::o;17615:1780:101:-;17827:20;17850:46;:18;17879:16;17850:28;:46::i;:::-;17827:69;-1:-1:-1;17910:18:101;17906:31;;17930:7;;;17906:31;17947:75;18025:41;:39;:41::i;:::-;18146:17;;;18119:16;18146:17;;;;;;;;;;;:27;;;;;;;;:42;17947:119;;-1:-1:-1;;;;;;18146:42:101;;;18138:51;;;18374:28;18138:51;18388:13;18374;:28::i;:::-;18352:50;;18436:1;18420:12;:17;;18412:26;;;;;;18493:38;:27;:18;:12;:16;:18::i;:::-;:25;:27::i;:::-;:36;:38::i;:::-;18448:17;;;;;;;;;;;;;;;:27;;;;;;;;:83;;-1:-1:-1;;18448:83:101;-1:-1:-1;;;;;18448:83:101;;;;;;;;;;19310:78;19343:7;18448:17;:27;19374:13;19310:32;:78::i;:::-;17615:1780;;;;;;;;;;:::o;8397:612:98:-;8628:21;;;;:34;:41;8537:32;;;;8628:41;8698:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8698:24:98;;8679:43;;8756:10;8743:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8743:24:98;;8732:35;;8783:9;8778:225;8802:10;8798:1;:14;8778:225;;;8833:18;8854:6;:21;;;:34;;;8889:1;8854:37;;;;;;;;;;;;;;:46;;;8833:67;;8936:56;8973:6;:18;;;8936:32;8952:15;8936:11;:15;;:32;;;;:::i;:56::-;8914:16;8931:1;8914:19;;;;;;;;;;;;;;;;;:78;-1:-1:-1;8814:3:98;;8778:225;;;;8397:612;;;;;;:::o;13828:2187::-;14044:21;;;;:34;:41;13959:22;;13983:24;;14044:41;14106:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14106:24:98;;14095:35;;14141:30;;:::i;:::-;14186:9;14181:1828;14205:10;14201:1;:14;14181:1828;;;14293:16;;:59;;14321:6;14333:1;14329:5;;;;14342:9;14293:27;:59::i;:::-;14366:36;14405:6;:21;;;:34;;;14440:1;14405:37;;;;;;;;;;;;;;14366:76;;14730:21;14753:17;14774:50;14801:14;14817:6;14774:26;:50::i;:::-;14729:95;;;;14903:236;14935:190;14994:6;:19;;;15035:6;:16;;;:27;;;14935:190;;15084:14;:23;;;14935:37;:190::i;14903:236::-;14889:8;14898:1;14889:11;;;;;;;;;;;;;:250;;;;;15280:28;15311:569;15347:519;15417:431;15476:8;15485:1;15476:11;;;;;;;;;;;;;;15513:14;:23;;;15562:9;15768:13;:58;;15804:6;:22;;;15768:58;;;15784:6;:17;;;15768:58;15417:33;:431::i;:::-;15347:16;;:26;;;;:48;:519::i;:::-;15311:14;;:18;:569::i;:::-;15280:600;-1:-1:-1;15956:42:98;:15;15280:600;15956:19;:42::i;:::-;15938:60;-1:-1:-1;;14217:3:98;;;;;-1:-1:-1;14181:1828:98;;-1:-1:-1;;14181:1828:98;;;13828:2187;;;;;;;;:::o;6486:1012:104:-;6768:27;6797:12;6821:14;6838:28;:12;:26;:28::i;:::-;6821:45;;6877:615;6884:11;;6877:615;;6911:16;6930:54;6961:14;6977:6;6930:30;:54::i;:::-;6911:73;;6998:9;7010:192;7043:7;7068:10;7096:8;7122:9;7149;7176:12;7010:15;:192::i;:::-;6998:204;-1:-1:-1;7239:28:104;:20;6998:204;7239:24;:28::i;:::-;7216:51;;7291:1;7286:2;:6;7282:26;;;7304:4;7294:14;;7282:26;7396:34;:12;7416:6;7424:5;7396:19;:34::i;:::-;7381:49;;7453:28;:12;:26;:28::i;:::-;7444:37;;6877:615;;;;;6486:1012;;;;;;;;;;;:::o;14980:317:102:-;15198:15;;15103:6;;;;15137:77;;:56;:17;4251:4:76;15137:21:102;:56::i;:77::-;15121:93;;15251:1;15231:17;:21;:59;;15284:6;15231:59;;;15255:26;15270:6;-1:-1:-1;;15255:14:102;:26::i;:::-;15224:66;14980:317;-1:-1:-1;;;;14980:317:102:o;1440:120:120:-;1529:5;;;1524:16;;;;1496:8;1545:6;;;1524:28;1516:37;;;;;1786:176;1847:8;1871:9;1875:1;1878;1871:3;:9::i;:::-;1867:13;;1903:1;1898;:6;;1890:15;;;;;14523:217:84;14670:63;14694:13;14709:10;14721:11;14670:23;:63::i;:::-;14523:217;;;:::o;9026:4639:43:-;9288:27;9327:30;;:::i;:::-;9373:9;9368:4253;9392:21;;;;:34;:41;9388:45;;9368:4253;;;9454:27;9484:6;:21;;;:34;;;9519:1;9484:37;;;;;;;;;;;;;;9454:67;;9552:39;9571:16;9588:1;9571:19;;;;;;;;;;;;;;9552:5;:14;;;:18;;:39;;;;:::i;:::-;9535:14;;;:56;;;9763:1;-1:-1:-1;9738:52:43;;;;-1:-1:-1;;;9738:52:43;;;;;;;:::i;:::-;9834:26;9812:5;:18;;;:48;;;;;;;;;9804:57;;;;;;9896:24;9875:18;;;:45;;;9991:16;;:59;;10019:6;;10027:5;;;;10040:9;9991:27;:59::i;:::-;10064:17;10113:16;10225:43;10248:16;10265:1;10248:19;;;;;;;;;;;;;;10225:6;:22;;:43;;;;:::i;:::-;10199:69;-1:-1:-1;10199:69:43;-1:-1:-1;10309:35:43;:20;10199:69;10309:24;:35::i;:::-;10286:58;;9368:4253;10373:20;10411:18;10407:2869;;;10552:19;10574:181;10633:6;:19;;;10674:6;:16;;;:27;;;10574:181;;10723:5;:14;;;10574:37;:181::i;:::-;10552:203;;10773:17;10793:57;10831:6;:18;;;10793:33;10810:15;10793:12;:16;;:33;;;;:::i;:57::-;10773:77;-1:-1:-1;10936:26:43;:10;10773:77;10936:14;:26::i;:::-;10922:8;10931:1;10922:11;;;;;;;;;;;;;:40;;;;;10996:16;:10;:14;:16::i;:::-;12435:17;;;;10980:32;;-1:-1:-1;12402:51:43;;:28;:12;12419:10;12402:16;:28::i;:::-;:32;;:51::i;:::-;:56;:97;;;;;12482:8;12491:1;12482:11;;;;;;;;;;;;;;-1:-1:-1;;12482:17:43;12402:97;12377:402;;;12701:1;12687:8;12696:1;12687:11;;;;;;;;;;;;;;;;;:15;12740:20;:13;12758:1;12740:17;:20::i;:::-;12724:36;;12377:402;10407:2869;;;;;13234:27;13249:8;13258:1;13249:11;;;;;;;;;;;;;;13234:10;:14;;:27;;;;:::i;:::-;13218:43;;10407:2869;13384:226;13436:6;:19;;;13473:5;:16;;;13507:5;:14;;;13539:6;:26;;;13583:13;13384:34;:226::i;:::-;-1:-1:-1;;9435:3:43;;;;;-1:-1:-1;9368:4253:43;;-1:-1:-1;9368:4253:43;;;13631:27;9026:4639;;;;;;;;:::o;6716:4188:105:-;6839:4;;;;;;;;7451:574;7475:27;;:34;7471:38;;7451:574;;;7530:27;7560:14;:27;;;7588:1;7560:30;;;;;;;;;;;;;;7530:60;;7773:32;7751:54;;;;;;;;:5;:18;;;:54;;;;;;;;;;7743:63;;;;;;7903:24;7881:5;:18;;;:46;;;;;;;;;;:69;;;;-1:-1:-1;7931:14:105;;;;:19;7881:69;7877:138;;;7970:30;7982:14;7998:1;7970:11;:30::i;:::-;-1:-1:-1;7511:3:105;;7451:574;;;;8124:9;8119:1217;8143:27;;:34;8139:38;;8119:1217;;;8198:27;8228:14;:27;;;8256:1;8228:30;;;;;;;;;;;;;;8198:60;;8299:24;8277:46;;;;;;;;:5;:18;;;:46;;;;;;;;;8273:1053;;;8410:17;;;;8388:19;8476:25;;8454:65;;;8583:24;8561:5;:18;;;:46;;;;;;;;;8557:361;;;8717:17;;;;;8867:32;8717:5;:17;8867:11;:32::i;:::-;8557:361;;;9131:180;9176:5;9203:7;9232:25;9279:14;9131:23;:180::i;:::-;9076:235;;-1:-1:-1;9076:235:105;-1:-1:-1;9076:235:105;-1:-1:-1;8273:1053:105;-1:-1:-1;8179:3:105;;8119:1217;;;-1:-1:-1;9401:32:105;;;;9372:26;9536:37;:35;:37::i;:::-;-1:-1:-1;;;;;9650:14:105;;9583:64;9650:14;;;;;;;;;;9443:130;;-1:-1:-1;9674:735:105;9698:14;:24;;;:31;9694:1;:35;9674:735;;;9750:27;9780:14;:24;;;9805:1;9780:27;;;;;;;;;;;;;;9750:57;;9825:5;:14;;;9843:1;9825:19;9821:33;;;9846:8;;;9821:33;9915:24;9893:5;:18;;;:46;;;;;;;;;;:120;;;;-1:-1:-1;9981:32:105;9959:5;:18;;;:54;;;;;;;;;;9893:120;9868:159;;;;;;10134:160;10175:5;10198:7;10223:25;10266:14;10134:23;:160::i;:::-;10079:215;;-1:-1:-1;10079:215:105;-1:-1:-1;10079:215:105;-1:-1:-1;10309:52:105;10321:5;10328:12;10341:18;10328:32;;;;;;;;10309:11;:52::i;:::-;10397:1;10375:23;;;;9674:735;;9731:3;;9674:735;;;;10596:2;10574:18;:24;;10566:33;;;;;;10678:16;10660:34;;;10652:43;;;;;;-1:-1:-1;10766:7:105;;10787:25;;-1:-1:-1;10787:25:105;-1:-1:-1;10832:18:105;-1:-1:-1;6716:4188:105;-1:-1:-1;;;;6716:4188:105:o;13955:225:78:-;14021:41;14079:12;14094:39;14110:22;14094:15;:39::i;3301:225::-;3367:41;3424:12;3439:40;3455:23;3439:15;:40::i;1566:90:120:-;1612:8;1639:10;-1:-1:-1;;1647:1:120;1639:3;:10::i;13914:1470:43:-;14061:21;14084:16;14112:30;;:::i;:::-;14166:5;14152:19;;14187:9;14182:1196;14206:8;:15;14202:1;:19;14182:1196;;;14246:8;14255:1;14246:11;;;;;;;;;;;;;;14261:1;14246:16;14242:30;;;14264:8;;14242:30;14287:16;;:66;;14315:6;14327:1;14323:5;;14330;14337:15;14287:27;:66::i;:::-;14368:19;14398:322;14435:7;14460:6;:16;;;14581:17;:8;14590:1;14581:11;;;;;;;;;;;;;;:15;:17::i;:::-;14616:67;14667:15;14616:6;:21;;;:34;;;14651:1;14616:37;;;;;;;;;;;;;;:46;;;:50;;:67;;;;:::i;:::-;14398:6;;:322;;;14705:1;14701:5;;14398:19;:322::i;:::-;-1:-1:-1;14367:353:43;-1:-1:-1;14739:17:43;14735:633;;14842:4;14828:18;;14735:633;;;15100:152;15147:6;:19;;;15168:7;15177:6;:16;;;:27;;;15206:6;:15;;;15223:8;15232:1;15223:11;;;;;;;;;;;;;;15100:25;:152::i;:::-;15288:32;:14;15307:12;15288:18;:32::i;:::-;15271:49;;15352:1;15338:8;15347:1;15338:11;;;;;;;;;;;;;:15;;;;;14735:633;14182:1196;;14223:3;;14182:1196;;;;13914:1470;;;;;;;:::o;1900:219:99:-;1966:20;1998:41;2042:36;:34;:36::i;:::-;2095:17;;;;;;-1:-1:-1;;2095:17:99;;;;-1:-1:-1;;;;;2095:17:99;;1900:219::o;1087:737::-;1195:17;1226:35;1275:27;1316:22;1352:17;1394:47;1444:36;:34;:36::i;:::-;-1:-1:-1;;;;;1522:19:99;;;1490:29;1522:19;;;;;;;;-1:-1:-1;;1522:19:99;;;;1565:18;;;;;1623:35;;;;;;;-1:-1:-1;1690:27:99;;;;;-1:-1:-1;1746:24:99;-1:-1:-1;;;1746:24:99;;;;-1:-1:-1;;;;1793:24:99;;;;;;-1:-1:-1;1087:737:99:o;730:829:100:-;850:19;883:32;929:27;981:58;1042:40;:38;:40::i;:::-;-1:-1:-1;;;;;1141:19:100;;;;1092:46;1141:19;;;;;;;;-1:-1:-1;;1141:19:100;;;;1184:25;;;;;-1:-1:-1;;;1449:38:100;;-1:-1:-1;;;;;1449:38:100;;-1:-1:-1;;;;1519:33:100;;;;;;-1:-1:-1;730:829:100:o;15899:477:105:-;16045:21;;:::i;:::-;16078:27;;:::i;:::-;16119:21;;;16115:39;;16149:5;-1:-1:-1;16142:12:105;;16115:39;16186:45;16205:7;16214:16;16186:18;:45::i;:::-;16165:66;;16241:42;;;:23;;;:42;16332:13;16311:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;16293:15:105;;;:53;:15;15899:477;-1:-1:-1;;;;15899:477:105:o;16666:483:84:-;16779:18;16809:68;16880:30;:28;:30::i;:::-;-1:-1:-1;;;;;16960:14:84;;16920:37;16960:14;;;;;;;;;;;:26;;;;;;;;;;17010;;-1:-1:-1;;;17010:26:84;;;;;;16996:40;;;-1:-1:-1;16809:101:84;;-1:-1:-1;17125:16:84;;;17117:25;;;;;16345:200:102;16428:16;;:::i;:::-;16463:75;16510:10;16522:15;16463:46;:75::i;14775:487:93:-;14877:26;;:::i;:::-;14920:12;14935:37;14961:10;14935:37;;:25;:37::i;:::-;15066:189;;;;;;;;;;;;;;;15013:22;;;15066:189;;;;;;;;;;-1:-1:-1;;15066:189:93;;;;;14775:487::o;6170:243:78:-;6235:61;6312:12;6327:39;6343:22;6327:15;:39::i;603:160:94:-;661:7;2982:5:76;688:4:94;:21;;680:30;;;;;;2982:5:76;735:4:94;:20;;15738:329:78;15830:12;490:7;16030:9;16022:18;;;;;;;1923:1056:118;1973:11;2263:6;2255:15;;;;;;-1:-1:-1;;;2311:1:118;:40;2307:104;;2373:3;2367:9;;;;2390:10;2307:104;-1:-1:-1;;;2424:1:118;:24;2420:86;;2470:2;2464:8;;;;2486:9;2420:86;2524:11;2519:1;:16;2515:78;;2557:2;2551:8;;;;2573:9;2515:78;2611:7;2606:1;:12;2602:74;;2640:2;2634:8;;;;2656:9;2602:74;2694:5;2689:1;:10;2685:70;;2721:1;2715:7;;;;2736:8;2685:70;2773:4;2768:1;:9;2764:69;;2799:1;2793:7;;;;2814:8;2764:69;2851:3;2846:1;:8;2842:68;;2876:1;2870:7;;;;2891:8;2842:68;2928:3;2923:1;:8;2919:22;;2940:1;2933:8;1923:1056;;;:::o;3647:1015:120:-;3715:6;3790:3;3781:5;:12;:40;;;;3807:1;3798:5;:10;;:22;;;;;3819:1;3812:3;:8;;3798:22;3777:54;;;-1:-1:-1;3830:1:120;3823:8;;3777:54;3854:1;3845:5;:10;;:21;;;;;3863:3;3859:1;:7;3845:21;3841:754;;;-1:-1:-1;4047:5:120;4040:12;;3841:754;4080:1;4073:3;:8;;:21;;;;;4089:5;4085:1;:9;4073:21;4069:526;;;4278:8;4282:3;4278;:8::i;:::-;4271:15;;;;4069:526;4316:1;4307:5;:10;;:22;;;;;4328:1;4321:3;:8;;4307:22;4303:292;;;4569:15;4573:5;4580:3;4569;:15::i;13605:278:78:-;13677:75;13769:12;13784:52;13800:35;13784:15;:52::i;2410:117:120:-;2459:7;2491:1;2486;:6;;2478:15;;;;;4181:133:121;4233:6;-1:-1:-1;;;;;4259:21:121;;;4251:30;;;;;7493:440:83;7637:20;7659:23;7686:47;7697:10;7709:8;7719:13;7686:10;:47::i;:::-;7636:97;;;;7743:12;7757:10;7797:1;7781:13;:17;7777:75;;;7807:7;7800:14;;7777:75;;;-1:-1:-1;7845:7:83;7777:75;7910:2;-1:-1:-1;;;;;7878:48:83;7904:4;-1:-1:-1;;;;;7878:48:83;7892:10;-1:-1:-1;;;;;7878:48:83;;7914:3;7919:6;7878:48;;;;;;;:::i;:::-;;;;;;;;7493:440;;;;;;;;:::o;5076:627:93:-;5310:11;5305:1;:16;;:59;;;;;5340:9;:24;;;5325:11;:39;;5305:59;5297:86;;;;-1:-1:-1;;;5297:86:93;;;;;;;:::i;:::-;5393:16;5424:79;5465:37;5490:11;5465:24;:37::i;:::-;5424:36;5450:9;5424:25;:36::i;:::-;:40;;:79::i;:::-;5393:110;;5514:182;5545:9;:20;;;5514:182;;5579:8;5601:9;5624:14;5652:34;5676:9;5652:23;:34::i;:::-;5514:6;;:182;;;;:17;:182::i;5736:461:109:-;5867:16;5885:12;5921:33;5938:5;:15;;;5921:16;:33::i;:::-;:56;;;;;5976:1;5958:5;:14;;;:19;;5921:56;5913:65;;;;;;6040:68;6086:6;:21;;;6040:41;6066:5;:14;;;6040:6;:21;;;:25;;:41;;;;:::i;:68::-;6028:80;;6126:64;6168:6;:21;;;6126:37;6148:5;:14;;;6126:6;:17;;;:21;;:37;;;;:::i;:64::-;6118:72;;5736:461;;;;;:::o;1688:368:104:-;1823:15;1850:99;1952:35;:33;:35::i;:::-;-1:-1:-1;;;;;2004:14:104;;;;;;;;;;;;;;:26;;;;;;;;:36;;;;;;;:45;;;;;1997:52;;;-1:-1:-1;;1688:368:104;;;;;:::o;2805:802:109:-;2970:6;2992:13;2988:27;;-1:-1:-1;3014:1:109;3007:8;;2988:27;3168:22;3193:23;:8;3206:9;3193:12;:23::i;:::-;3168:48;;3226:21;3250:45;3268:14;3284:10;3250:17;:45::i;:::-;3226:69;;4071:3:76;3314:14:109;:42;;3306:51;;;;;;3418:9;3430:43;:8;3458:14;3430:27;:43::i;:::-;3418:55;;3568:1;3557:8;:12;:43;;3598:2;3557:43;;;3573:22;3588:2;-1:-1:-1;;3573:14:109;:22::i;:::-;3550:50;2805:802;-1:-1:-1;;;;;;;;2805:802:109:o;5463:1017:104:-;5696:6;5714:15;5732:48;5750:7;5759:10;5771:8;5732:17;:48::i;:::-;5714:66;;5901:9;5889:8;:21;5885:589;;5933:8;-1:-1:-1;5926:15:104;;5885:589;5976:12;5972:492;;;6015:125;6082:9;6093:8;6103;6113:9;6015:45;:125::i;:::-;6008:132;;;;;5972:492;6179:18;6200:50;:9;6230:8;6240:9;6200:29;:50::i;:::-;6179:71;;6275:174;6330:8;6360;6390:9;6421:10;6275:33;:174::i;:::-;6268:181;;;;;;3408:101:120;3464:6;3493:1;3489;:5;:13;;3501:1;3489:13;;;-1:-1:-1;3497:1:120;;3482:20;-1:-1:-1;3408:101:120:o;17410:420:84:-;17547:1;17529:14;:19;;17521:28;;;;;;17583:68;17654:30;:28;:30::i;:::-;-1:-1:-1;;;;;17734:14:84;;17694:37;17734:14;;;;;;;;;;;:26;;;;;;;;;;17583:101;;-1:-1:-1;17799:24:84;:14;:22;:24::i;:::-;17770:53;;;;;;;-1:-1:-1;;;;;17770:53:84;-1:-1:-1;;;17770:53:84;-1:-1:-1;;;;;17770:53:84;;;;;;-1:-1:-1;;;;17410:420:84:o;2017:716:97:-;2131:16;;2181:19;2177:38;;-1:-1:-1;2210:1:97;;-1:-1:-1;2210:1:97;2202:13;;2177:38;2250:1;2233:14;:18;2225:27;;;;;;2309:68;2355:6;:21;;;2309:41;2335:14;2309:6;:21;;;:25;;:41;;;;:::i;:68::-;2297:80;;2395:64;2437:6;:21;;;2395:37;2417:14;2395:6;:17;;;:21;;:37;;;;:::i;:64::-;2494:21;;;;2387:72;;-1:-1:-1;2494:46:97;;2525:14;2494:30;:46::i;:::-;2470:21;;;:70;2570:17;;;;:33;;2597:5;2570:26;:33::i;:::-;2550:17;;;:53;2637:21;;;;:41;;2668:9;2637:30;:41::i;:::-;2613:21;;;:65;2689:37;2613:6;2689:29;:37::i;3383:2020:104:-;3566:6;3584:20;3607:36;3623:7;3632:10;3607:36;;:15;:36::i;:::-;3584:59;;3653:99;3755:35;:33;:35::i;:::-;-1:-1:-1;;;;;3834:14:104;;3800:31;3834:14;;;;;;;;;;;:26;;;;;;;;;;:36;;;;;;;;3653:137;;-1:-1:-1;3800:31:104;3913:56;3944:14;3861:8;3913:30;:56::i;:::-;3880:89;;;;3987:7;3979:16;;;;;;4055:29;:12;4077:6;4055:21;:29::i;:::-;4051:741;;;4193:18;;;;;;4168:43;;:22;4248:29;:8;4168:43;4248:12;:29::i;:::-;4225:52;;4312:24;:13;:22;:24::i;:::-;4291:45;;;;;;;-1:-1:-1;;;;;4291:45:104;-1:-1:-1;;;;;;4291:45:104;;;;;;4351:146;4422:7;4431:10;4443:8;4453:15;4470:13;4351:53;:146::i;:::-;4581:18;4577:106;;4634:34;:12;4654:6;4662:5;4634:19;:34::i;:::-;4619:49;;4577:106;4697:50;4713:7;4722:10;4697:50;;4734:12;4697:15;:50::i;:::-;4768:13;-1:-1:-1;4761:20:104;;-1:-1:-1;;;;;;4761:20:104;4051:741;4806:13;;4802:569;;4954:19;:8;:17;:19::i;:::-;4933:40;;;;;;;-1:-1:-1;;;;;4933:40:104;-1:-1:-1;;;;;;4933:40:104;;;;;;4988:245;5059:7;5084:10;5112:8;4933:18;5211:8;4988:53;:245::i;:::-;5263:33;:12;5283:6;5291:4;5263:19;:33::i;:::-;5248:48;;5310:50;5326:7;5335:10;5310:50;;5347:12;5310:15;:50::i;:::-;-1:-1:-1;5388:8:104;;3383:2020;-1:-1:-1;;;;;;;;;3383:2020:104:o;13045:2038:105:-;13159:27;;:34;13151:42;;13143:51;;;;;;13276:1;13241:14;:32;;;:36;13233:45;;;;;;13325:35;13363:14;:27;;;13391:5;13363:34;;;;;;;;;;;;;;13325:72;;13458:24;13428:54;;;;;;;;:13;:26;;;:54;;;;;;;;;;:132;;;;-1:-1:-1;13528:32:105;13498:13;:26;;;:62;;;;;;;;;;13428:132;13407:163;;;;;;13609:32;;;:37;;-1:-1:-1;;13609:37:105;;;-1:-1:-1;;;13887:338:105;13907:27;;:34;13903:38;;13887:338;;;13962:23;13988:14;:27;;;14016:1;13988:30;;;;;;;;;;;;;;13962:56;;14052:13;14036:1;:13;;;:29;:75;;;;-1:-1:-1;14087:24:105;14069:1;:14;;;:42;;;;;;;;;;14036:75;14032:183;;;14147:1;:13;;;14131:29;;14199:1;14178:22;;14032:183;-1:-1:-1;13943:3:105;;13887:338;;;;14248:18;14239:5;:27;14235:236;;;-1:-1:-1;;14416:24:105;14387:26;;;;;:53;14454:7;;14235:236;14684:33;14720:14;:27;;;14748:18;14720:47;;;;;;;;;;;;;;;;;;14880:25;;;;;;14919:23;;;;;14777:175;;;;14989:24;14962;;;;:51;15052:24;15023:26;;:53;;;;-1:-1:-1;;;13045:2038:105;;;:::o;11948:862::-;12095:16;;12091:20;;;;;;:68;;-1:-1:-1;12115:16:105;;6326:6:76;12115:44:105;;;;;;12091:68;12083:77;;;;;;12224:5;:14;;;12220:1;:18;:56;;;;-1:-1:-1;12242:14:105;;;;12260:16;-1:-1:-1;12242:34:105;12220:56;12212:65;;;;;;12338:5;:15;;;12334:1;:19;:77;;;;-1:-1:-1;12357:15:105;;;;5700:1:76;-1:-1:-1;12357:54:105;12334:77;12326:86;;;;;;12483:14;;;;-1:-1:-1;;12464:33:105;;;;:70;;-1:-1:-1;12501:14:105;;;;12519:15;-1:-1:-1;12501:33:105;12464:70;12456:79;;;;;;12618:16;;12585:50;;12676:14;;;;12732:15;;;;12788:14;;;;;12758:45;;-1:-1:-1;;;;;12758:45:105;-1:-1:-1;;;12758:45:105;-1:-1:-1;;12701:47:105;;;;-1:-1:-1;;;12701:47:105;-1:-1:-1;;12645:46:105;;;;;;-1:-1:-1;;12585:50:105;;;;-1:-1:-1;;12585:50:105;;;;;;;12645:46;;;;;;;;12701:47;;;;;12758:45;;;;;;;;;;11948:862::o;10985:917::-;11217:4;11235:7;11256;11288:22;11313:25;:5;:23;:25::i;:::-;11288:50;-1:-1:-1;11410:19:105;;;:54;;;11450:14;11433;:31;11410:54;11406:116;;;11497:14;11480:31;;11406:116;11541:7;:29;;;;11569:1;11552:5;:14;;;:18;11541:29;11531:39;-1:-1:-1;11589:47:105;;;;11581:56;;;;;;-1:-1:-1;;11799:16:105;;11844:7;;11821:3;11783:41;;;;-1:-1:-1;;;;;;11783:41:105;11763:2;11734:31;;;;11733:92;;;;;-1:-1:-1;11880:14:105;11844:7;-1:-1:-1;10985:917:105:o;6875:263:78:-;6942:77;7035:12;7050:41;7066:24;7050:15;:41::i;784:121:121:-;842:7;874:1;869;:6;;861:15;;;;;;-1:-1:-1;893:5:121;;;784:121::o;2739:1363:97:-;2988:19;3009:27;3048:28;3147:171;3198:6;3218:9;3241:14;3269;3297:11;3147:37;:171::i;:::-;3086:232;;-1:-1:-1;3086:232:97;;-1:-1:-1;3086:232:97;-1:-1:-1;3446:17:97;;3442:654;;3479:35;3517:32;3542:6;3517:24;:32::i;:::-;3479:70;;3563:253;3598:13;3629:6;:17;;;3664:6;:21;;;3703:6;:22;;;3743:6;:17;;;3778:6;:24;;;3563:17;:253::i;:::-;3867:20;;3830:81;;3889:21;3830:36;:81::i;:::-;3926:159;3972:7;3981:9;:20;;;4003:6;:15;;;4020:14;4036:12;4050:21;3926:28;:159::i;:::-;3442:654;;2739:1363;;;;;;;;;;:::o;7997:551:83:-;8139:11;8135:24;;8152:7;;8135:24;8168:10;8181:33;8193:10;8205:8;8181:11;:33::i;:::-;8168:46;;8436:1;8427:6;:10;8423:39;;;8453:2;;8457:4;8423:39;-1:-1:-1;;;;;8478:63:83;;;;;;8493:10;8478:63;8515:2;8527:12;:6;:10;:12::i;:::-;8478:63;;;;;;;:::i;:::-;;;;;;;;7997:551;;;;;;:::o;3008:232:78:-;3074:47;3138:12;3153:40;3169:23;3153:15;:40::i;7500:250::-;7570:58;7644:12;7659:44;7675:27;7659:15;:44::i;15147:219:105:-;15247:30;15307:52;15333:7;15342:16;15307:25;:52::i;:::-;-1:-1:-1;15289:70:105;15147:219;-1:-1:-1;;;15147:219:105:o;4471:240:78:-;4531:68;4615:12;4630:34;4646:17;4630:15;:34::i;27850:1073:101:-;27962:21;;:::i;:::-;27995:31;28029;28049:10;28029:19;:31::i;:::-;27995:65;;28155:9;28130:7;:22;;;:34;28126:528;;;28180:28;28222:30;28255:38;28282:10;28255:26;:38::i;:::-;28222:71;;28341:109;28382:10;28394:7;28403:22;28427:9;28341:23;:109::i;:::-;28307:143;;-1:-1:-1;28307:143:101;-1:-1:-1;28464:71:101;28493:10;28307:143;;28464:28;:71::i;:::-;28126:528;;;;;28574:22;;:35;;28566:44;;;;;;28671:245;;;;;;;;28709:58;:50;28734:7;:24;;;28709:7;:20;;;:24;;:50;;;;:::i;:::-;:56;:58::i;:::-;28671:245;;;;28793:56;:48;28816:7;:24;;;28793:7;:18;;;:22;;:48;;;;:::i;:56::-;28671:245;;;;28881:7;:24;;;28671:245;;;28664:252;;27850:1073;;;;;:::o;10558:218:93:-;10635:12;10659:41;10703:32;:30;:32::i;:::-;10752:17;;;;;;-1:-1:-1;;10752:17:93;;;;;10558:218::o;6842:490:83:-;7019:16;;;7033:1;7019:16;;;6950;7019;;;;;;6950;;6996:20;;7019:16;;;;;;;;;;;;-1:-1:-1;7019:16:83;6996:39;;7045:10;7058:33;7070:10;7082:8;7058:11;:33::i;:::-;7045:46;;7110:2;7101:3;7105:1;7101:6;;;;;;;;;;;;;:11;;;;;-1:-1:-1;;;7131:2:83;:24;7122:3;7126:1;7122:6;;;;;;;;;;;;;;;;;:33;7192:16;;;7206:1;7192:16;;;;;;;;;7166:23;;7192:16;;;;;;;;;;;;-1:-1:-1;7192:16:83;7166:42;;7238:12;:6;:10;:12::i;:::-;7218:6;7225:1;7218:9;;;;;;;;;;;;;:33;;;;;7281:12;:6;:10;:12::i;:::-;7261:6;7268:1;7261:9;;;;;;;;;;;;;;;;;:33;7313:3;;-1:-1:-1;7318:6:83;;-1:-1:-1;;6842:490:83;;;;;;;:::o;369:144:121:-;427:7;458:5;;;481:6;;;;473:15;;;;;4759:311:93;4994:14;;;2847:3:76;1642:1:93;4994:41;;;;4972:66;;:91;;4759:311::o;10056:609:97:-;10350:22;3200:9:76;10375:36:97;10401:9;10375:25;:36::i;:::-;:56;10350:81;;10441:217;10483:6;10503:10;10527:8;10549:9;10572:14;10600:20;10634:14;10441:28;:217::i;:::-;10056:609;;;;;;;:::o;836:222:109:-;904:4;5641:1:76;939:48:109;;;;;:112;;-1:-1:-1;;5700:1:76;-1:-1:-1;1003:48:109;;836:222::o;2148:573::-;2266:6;;2318:74;2341:50;3248:11:76;2341:30:109;:10;2356:14;2341;:30::i;:::-;:34;;:50::i;:::-;2318:22;:74::i;:::-;2288:104;;2413:59;2431:8;-1:-1:-1;;;2413:17:109;:59::i;:::-;2402:70;;2493:46;2511:27;2529:8;2511:17;:27::i;:::-;2493:17;:46::i;:::-;2482:57;;2560:59;2578:8;-1:-1:-1;;;2560:17:109;:59::i;:::-;2549:70;;2629:21;2653:29;2673:8;2653:19;:29::i;:::-;2629:53;;;2148:573;-1:-1:-1;;;;;2148:573:109:o;2261:143:120:-;2332:6;2357:40;2361:9;2365:1;2368;2361:3;:9::i;:::-;4071:3:76;2357::120;:40::i;4889:752:109:-;5084:6;5106:13;5102:27;;-1:-1:-1;5128:1:109;5121:8;;5102:27;5140:21;5175:1;5164:8;:12;:161;;5266:59;5294:9;5305:8;5315:9;5266:27;:59::i;:::-;5164:161;;;5191:60;5220:9;5231:8;5241:9;5191:28;:60::i;:::-;5140:185;;4071:3:76;5344:14:109;:42;;5336:51;;;;;;5451:9;5463:43;:8;5491:14;5463:27;:43::i;:::-;5451:55;;5602:1;5591:8;:12;:43;;5632:2;5591:43;;;5607:22;5622:2;-1:-1:-1;;5607:14:109;:22::i;:::-;5584:50;4889:752;-1:-1:-1;;;;;;;4889:752:109:o;8808:1744:93:-;8965:18;8996:19;9017:18;9051:70;9075:9;:24;;;9101:8;9111:9;9051:23;:70::i;:::-;8995:126;;;;9131:18;9152:34;9176:9;9152:23;:34::i;:::-;9131:55;;9202:13;9197:1349;;9265:20;;9244:75;;;;9287:8;9297:10;9309:9;9244:20;:75::i;:::-;9231:88;;9197:1349;;;9350:21;9374:36;9400:9;9374:25;:36::i;:::-;9350:60;;9525:20;9548:56;9566:37;9591:11;9566:24;:37::i;:::-;9548:13;;:17;:56::i;:::-;9525:79;;9618:16;9653:79;9674:9;:20;;;9653:79;;9696:12;9710:10;9722:9;9653:20;:79::i;:::-;9618:114;;9747:17;9778:21;9817:11;9832:1;9817:16;9813:614;;;-1:-1:-1;;9993:19:93;;;;;:36;;9954:9;9813:614;;;10143:60;10161:41;10200:1;10186:11;:15;10161:24;:41::i;:::-;10143:13;;:17;:60::i;:::-;10127:76;;10234:178;10276:9;:20;;;10234:178;;10318:13;10353:10;10385:9;10234:20;:178::i;:::-;10222:190;;9813:614;10454:81;10476:13;10491:12;10505:9;10516:8;10526;10454:21;:81::i;:::-;10441:94;;9197:1349;;;;;;8808:1744;;;;;;;;:::o;2900:192:120:-;2950:5;-1:-1:-1;;2976:28:120;-1:-1:-1;2976:28:120;;;:60;;-1:-1:-1;3020:15:120;3008:28;;;2967:70;;;;;7109:581:97;7199:35;7237:32;7262:6;7237:24;:32::i;:::-;7199:70;;7331:23;7357:13;:24;;;;;;;;;;;;7331:50;;7392:224;7423:13;7450:6;:17;;;7481:6;:21;;;7516:6;:22;;;7552:16;7392:224;;7582:6;:24;;;7392:17;:224::i;:::-;7627:56;7646:13;7661:6;:21;;;7627:18;:56::i;715:234:118:-;787:4;820:1;811:5;:10;;:26;;;;;834:3;825:5;:12;;811:26;803:35;;;;;;-1:-1:-1;;;897:9:118;886:21;-1:-1:-1;;;885:39:118;;;884:58;;715:234::o;1296:386:104:-;2798:2:76;1437:27:104;:12;:25;:27::i;:::-;:58;;1429:86;;;;-1:-1:-1;;;1429:86:104;;;;;;;:::i;:::-;1525:61;1589:35;:33;:35::i;:::-;-1:-1:-1;;;;;1634:14:104;;;;;;;;;;;;;;;:26;;;;;;;-1:-1:-1;1634:26:104;;:41;1296:386::o;1227:752:109:-;1306:7;1351:1;1333:5;:15;;;:19;:77;;;;-1:-1:-1;1356:15:109;;;;5700:1:76;-1:-1:-1;1356:54:109;1333:77;1325:86;;;;;;1530:15;;;;5641:1:76;-1:-1:-1;1526:81:109;;-1:-1:-1;1593:14:109;;;;1586:21;;1526:81;1618:20;1641:45;1684:1;1666:5;:15;;;:19;1641:24;:45::i;:::-;1917:14;;;;1618:68;;-1:-1:-1;1917:55:109;;3200:9:76;;1917:32:109;;1618:68;1917:18;:32::i;19096:2937:96:-;19332:28;19362:25;19389:27;19500:1;19486:11;:15;19478:24;;;;;;19790:14;19769:6;:17;;;:35;19765:57;;-1:-1:-1;19814:1:96;;-1:-1:-1;19814:1:96;;-1:-1:-1;19814:1:96;19806:16;;19765:57;19833:38;19874:66;19906:9;:20;;;19928:11;19874:31;:66::i;:::-;19833:107;;19950:26;19979:62;20019:6;:21;;;19979:9;:19;;;:39;;:62;;;;:::i;:::-;19950:91;;20141:29;20180:28;20218:29;20410:192;20452:8;20474:6;20494:9;20517:19;20550:14;20578;20410:28;:192::i;:::-;20257:345;-1:-1:-1;20257:345:96;;-1:-1:-1;20257:345:96;-1:-1:-1;20257:345:96;-1:-1:-1;20675:27:96;20671:49;;20712:1;20715;20718;20704:16;;;;;;;;;;;;;20671:49;21001:17;;;;:42;;21028:14;21001:26;:42::i;:::-;20981:17;;;:62;21079:46;:19;21103:21;21079:23;:46::i;:::-;21057:68;;21140:19;21162:62;21182:1;21185:6;:17;;;21204:19;21162;:62::i;:::-;21140:84;;4071:3:76;21242:11:96;:47;21238:69;;;21299:1;21302;21305;21291:16;;;;;;;;;;;;;;21238:69;21322:28;21353:38;21369:8;21379:11;21353:15;:38::i;:::-;21322:69;-1:-1:-1;21614:25:96;21610:47;;21649:1;21652;21655;21641:16;;;;;;;;;;;;;;;21610:47;21726:22;;;:45;-1:-1:-1;21890:19:96;;;;21838:188;;21726:6;;21923:22;21959:21;21994:22;21838:18;:188::i;:::-;21792:234;;-1:-1:-1;21792:234:96;-1:-1:-1;;;;;;19096:2937:96;;;;;;;;;;:::o;6846:257:97:-;7010:18;;7047:50::o;8816:1123::-;9088:1;9074:10;:15;;:49;;;;-1:-1:-1;;;;;;9093:30:97;;;9074:49;9066:58;;;;;;9196:1;9178:14;:19;;:57;;;;-1:-1:-1;;;;;;9201:34:97;;;9178:57;9170:66;;;;;;9298:15;9294:1;:19;:58;;;;-1:-1:-1;9336:16:97;9317:35;;;9294:58;9286:67;;;;;;9416:10;9412:1;:14;:48;;;;-1:-1:-1;9444:16:97;9430:30;;;9412:48;9404:57;;;;;;9562:16;9541:37;;;9507:72;;;;;;9635:45;;-1:-1:-1;;9635:45:97;-1:-1:-1;;;;;9635:45:97;;;;-1:-1:-1;;;;9690:53:97;-1:-1:-1;;;9690:53:97;;;;;;;;;;;;-1:-1:-1;;;;9753:55:97;-1:-1:-1;;;9753:55:97;;;;;;-1:-1:-1;;;;9818:45:97;-1:-1:-1;;;9818:45:97;;;;;;;;;;;-1:-1:-1;;;;;9873:59:97;-1:-1:-1;;;9873:59:97;;;;;;;;8816:1123::o;15273:369:84:-;15369:1;15362:3;:8;;15354:17;;;;;;15428:19;15450:57;1172:42:76;15496:10:84;15450:22;:57::i;:::-;15428:79;-1:-1:-1;15532:21:84;15428:79;15549:3;15532:16;:21::i;:::-;15517:36;;15563:72;1172:42:76;15610:10:84;15622:12;15563:23;:72::i;11248:1511:83:-;11472:26;11518:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11518:47:83;;-1:-1:-1;11593:36:83;:34;:36::i;:::-;:48;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11593:48:83;;-1:-1:-1;12266:32:83;:13;12284;12266:17;:32::i;:::-;12241:57;;12308:9;-1:-1:-1;;;;;12308:33:83;;12342:7;12351:6;12359:15;12376:22;:13;:20;:22::i;:::-;12308:91;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:72;12698:6;12706:7;12715:10;12727:8;12737:14;12680:17;:72::i;6221:322::-;6353:47;2786:2;6353:47;;;;2729:1;6417:36;;;6352:102;5494:1:76;6352:174:83;6221:322;;;;:::o;1662:118:120:-;1708:6;1734:1;1730;:5;1726:47;;;1744:6;1748:1;1744:3;:6::i;:::-;1737:13;;;;1726:47;-1:-1:-1;1772:1:120;1765:8;;15372:265:105;15479:30;15511:20;15552:42;15568:7;15577:16;15552:15;:42::i;:::-;15543:51;;15610:20;15623:6;15610:12;:20::i;1663:662:101:-;1748:25;;:::i;:::-;1785:33;1821:32;:30;:32::i;:::-;:44;;;;;;;;;;;;;;;;;1894:16;;;;;1875:35;;1941:18;;;-1:-1:-1;;;;;1941:18:101;;;1920;;;:39;;;;1894:16;1988;;;;;1969;;;:35;;;;-1:-1:-1;;;2035:18:101;;;;2014;;;:39;-1:-1:-1;;;2092:26:101;;;;;;2063;;;:55;2149:18;;;-1:-1:-1;;;;;2149:18:101;;;2128;;;:39;-1:-1:-1;;;2194:14:101;;;;2177;;;:31;-1:-1:-1;;;2233:12:101;;;2218;;;:27;-1:-1:-1;;;2280:26:101;;;;2309:9;2280:38;2255:63;;;1894:16;2255:22;;:63;1875:35;:1;-1:-1:-1;1663:662:101:o;4438:255::-;4511:7;4538:25;4567:38;4594:10;4567:26;:38::i;:::-;-1:-1:-1;;;;;4567:83:101;;:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;24613:2042::-;24807:23;;:::i;:::-;24832:7;24851:28;24889:24;25062:48;25081:10;25093:9;25104:5;25062:18;:48::i;:::-;24967:18;;;24923:187;;;;24937:16;;;24923:187;;;;25280:22;;;;24923:187;;-1:-1:-1;24923:187:101;-1:-1:-1;25280:48:101;;24923:187;25280:26;:48::i;:::-;25255:22;;;:73;25867:30;;;;25818;;25867:34;25863:422;;26239:30;;;;26138:132;;:58;:22;26239:30;26138:26;:58::i;:::-;:100;;:132::i;:::-;26113:157;;25863:422;26324:116;26385:54;4160:4:76;26416:22:101;26385:30;:54::i;:::-;26324:22;;;;;:60;:116::i;:::-;26299:22;;;:141;-1:-1:-1;;26454:30:101;;;:55;;;;-1:-1:-1;;26569:32:101;;26299:22;;26627:20;;-1:-1:-1;24613:2042:101:o;10176:1240::-;10338:33;10374:32;:30;:32::i;:::-;:44;10407:10;10374:44;;;;;;;;;;;;;10338:80;;10447:27;:1;:16;;;:25;:27::i;:::-;10428:46;;-1:-1:-1;;10428:46:101;;;;;;;;;10505:18;;;;:29;;:27;:29::i;:::-;10484:18;;;:50;;-1:-1:-1;;10484:50:101;-1:-1:-1;;;;;10484:50:101;;;;;;;;;;10561:14;;;;:25;;:23;:25::i;:::-;10544:1;:14;;;:42;;;;;-1:-1:-1;;;;;10544:42:101;;;;;-1:-1:-1;;;;;10544:42:101;;;;;;10611:23;:1;:12;;;:21;:23::i;:::-;10596:1;:12;;;:38;;;;;-1:-1:-1;;;;;10596:38:101;;;;;-1:-1:-1;;;;;10596:38:101;;;;;;10735:29;:1;:18;;;:27;:29::i;:::-;10714:50;;-1:-1:-1;;;;;10714:50:101;;;;;;-1:-1:-1;;10714:50:101;;;;;;10793:16;;;;:27;;:25;:27::i;:::-;10774:16;;;:46;;-1:-1:-1;;10774:46:101;-1:-1:-1;;;;;10774:46:101;;;;;;;;;;10859:26;;;;:37;;:35;:37::i;:::-;10830:66;;-1:-1:-1;;;;;10830:66:101;;;;-1:-1:-1;;;10830:66:101;-1:-1:-1;;;;10830:66:101;;;;;;10927:18;;;;:29;;:27;:29::i;:::-;10906:50;;;;;;;-1:-1:-1;;;10906:50:101;-1:-1:-1;;;;10906:50:101;;;;;;11018:24;;11014:272;;11058:18;11079:28;:20;:26;:28::i;:::-;11058:49;;11121:61;11158:10;11170:11;11121:36;:61::i;:::-;11196:79;1172:42:76;11251:10:101;11263:11;11196:31;:79::i;:::-;11014:272;;11339:10;11301:108;;;11351:1;:18;;;11371:1;:14;;;11387:1;:12;;;11301:108;;;;;;;;:::i;:::-;;;;;;;;10176:1240;;;;:::o;1152:178:121:-;1210:7;1233:6;1229:20;;-1:-1:-1;1248:1:121;1241:8;;1229:20;1271:5;;;1275:1;1271;:5;:1;1294:5;;;;;:10;1286:19;;;;;4888:163;4937:6;-1:-1:-1;;;;;4964:1:121;:30;;4955:40;;;;;5532:217:78;5594:41;5651:12;5666:36;5682:19;5666:15;:36::i;10850:612:97:-;11138:80;11157:6;11165:10;11177:8;11187:14;11203;11138:18;:80::i;:::-;11249:206;11297:6;:24;;;11335:6;:22;;;11371:6;:17;;;11402:20;11436:9;11249:34;:206::i;:::-;11229:17;;;;:226;;;;-1:-1:-1;;;;;;10850:612:97:o;1794:120:121:-;1852:7;1883:1;1879;:5;1871:14;;;;;;1906:1;1902;:5;;;;;;;1794:120;-1:-1:-1;;;1794:120:121:o;1907:134:117:-;1960:6;1988:18;1983:1;:23;;1974:33;;;;;;-1:-1:-1;2033:2:117;2028:7;;1907:134::o;6650:222::-;6707:6;6730:1;:6;;6735:1;6730:6;;6721:16;;;;;;6743:13;6780:1;6759:22;;6774:2;6768:1;6760:10;;:16;;6759:22;;;;;;;-1:-1:-1;;;;;;;6796:19:117;;;;;:42;;-1:-1:-1;;;;;;6819:19:117;;;6796:42;6787:52;;;;;8576:105;8623:6;8646:14;;;;-1:-1:-1;;;;;;8646:14:117;;8637:24;;;;;;-1:-1:-1;8674:2:117;;;8576:105::o;21318:266::-;21365:6;-1:-1:-1;;;21388:1:117;:24;;;21379:34;;;;;;-1:-1:-1;;21436:1:117;:25;;;21432:39;;;-1:-1:-1;21470:1:117;21463:8;;21432:39;21498:81;21574:3;21530:1;21522:10;;21535:35;21522:48;:55;;21498:5;:81::i;4165:197::-;4222:6;4252:13;:9;;;:13;;;;;4269:2;4252:19;-1:-1:-1;;;;;;4286:19:117;;;;;:42;;-1:-1:-1;;;;;;4309:19:117;;;4277:52;;;;;1589:89;1665:7;;1670:2;1665:7;;1589:89::o;4147:542:109:-;4312:21;;4366:66;:9;4412:8;4422:9;4366:45;:66::i;:::-;4345:87;-1:-1:-1;4459:15:109;;:223;;4628:54;4646:23;:8;4659:9;4646:12;:23::i;:::-;4671:10;4628:17;:54::i;:::-;4459:223;;;4071:3:76;4442:240:109;4147:542;-1:-1:-1;;;;;4147:542:109:o;3613:528::-;3779:21;;3833:67;:9;3880:8;3890:9;3833:46;:67::i;:::-;3812:88;-1:-1:-1;3927:54:109;3945:23;:8;3958:9;3945:12;:23::i;3927:54::-;3910:71;;3991:24;4018:32;:9;:30;:32::i;:::-;3991:59;;4084:14;4064:17;:34;4060:74;;;4117:17;4100:34;;4060:74;3613:528;;;;;;;:::o;3004:753:94:-;3142:7;3151:4;3192:1;3175:14;:18;3167:27;;;;;;2606:1:76;3212:14:94;:51;;3204:60;;;;;;3274:12;3289:36;3315:9;3289:25;:36::i;:::-;3274:51;-1:-1:-1;3353:1:94;3336:396;3361:14;3356:1;:19;3336:396;;3396:22;3421:37;3430:27;3455:1;3430:24;:27::i;:::-;3421:4;;:8;:37::i;:::-;3396:62;;3553:8;3535:14;:26;3531:49;;;-1:-1:-1;3571:1:94;-1:-1:-1;3574:5:94;;-1:-1:-1;3563:17:94;;-1:-1:-1;3563:17:94;3531:49;3695:8;3678:14;:25;3674:47;;;-1:-1:-1;3713:1:94;-1:-1:-1;3716:4:94;;-1:-1:-1;3705:16:94;;-1:-1:-1;3705:16:94;3674:47;-1:-1:-1;3377:3:94;;3336:396;;;;3742:8;;;4108:1391:97;4279:7;4298:100;4401:29;:27;:29::i;:::-;4298:132;-1:-1:-1;4440:22:97;3200:9:76;4465:36:97;4491:9;4465:25;:36::i;:::-;4531:35;4569:17;;;;;;;;;;;:27;;;;;;;;4465:56;;;;4569:43;;;;;;;4649:29;;4465:56;;-1:-1:-1;4569:43:97;4649:29;-1:-1:-1;;;4649:29:97;;;;;-1:-1:-1;;;4709:24:97;;;;;-1:-1:-1;;;4771:31:97;;;;5212:14;5204:49;;;;-1:-1:-1;;;5204:49:97;;;;;;;:::i;:::-;5283:209;5335:17;5370:15;5403:10;5431:20;5469:9;5283:34;:209::i;:::-;5264:228;4108:1391;-1:-1:-1;;;;;;;;;;;4108:1391:97:o;6010:1576:93:-;6215:7;6258:13;6242;:29;6234:38;;;;;;6361:12;6345:13;:28;6337:37;;;;;;6621:9;6609:8;:21;6605:975;;6669:221;6880:9;6669:185;6825:28;;;6669:78;6670:20;;;6717:29;;;6669:47;:78::i;:221::-;6646:244;;;;6605:975;7256:313;7354:197;7522:28;;;7354:82;7355:20;;;7406:29;;;7354:51;:82::i;:197::-;7256:9;;:13;:313::i;8498:312:97:-;8653:1;8635:14;:19;;:57;;;;-1:-1:-1;;;;;;8658:34:97;;;8635:57;8627:66;;;;;;8750:28;;;;;:53;;-1:-1:-1;;8750:53:97;-1:-1:-1;;;;;8750:53:97;;;;;;;;;8498:312::o;7357:327:96:-;7483:31;;:::i;:::-;7533:144;7574:10;7598:11;7623:44;:42;:44::i;:::-;7533:27;:144::i;14554:312:102:-;14674:6;14692:13;14708:76;4251:4:76;14708:37:102;14729:2;:15;;;14708:16;:20;;:37;;;;:::i;22439:2396:96:-;22747:27;22784:28;22822:20;22852:27;22896:19;22918:75;22938:14;22954:6;:17;;;22973:19;22918;:75::i;:::-;22896:97;;4071:3:76;23070:11:96;:47;23066:72;;;23127:1;23130;23133;23136;23119:19;;;;;;;;;;;23066:72;23148:26;23177:38;23193:8;23203:11;23177:15;:38::i;:::-;23148:67;;23226:26;23255:119;:113;23302:56;23323:18;23343:14;23302:20;:56::i;:::-;23255:14;;:33;:113::i;:::-;:117;:119::i;:::-;23226:148;;23407:72;23430:8;23440:18;23477:1;23460:14;:18;23407:22;:72::i;:::-;23385:94;;23512:120;:114;23559:57;23580:19;23601:14;23559:20;:57::i;23512:120::-;23489:143;;23675:19;23651:20;:43;;23643:52;;;;;;23882:10;23895:45;:19;23919:20;23895:23;:45::i;:::-;23882:58;;23967:74;2186:3:76;23967:39:96;23975:30;:9;:28;:30::i;:::-;23967:3;;:7;:39::i;:74::-;23951:90;-1:-1:-1;24781:47:96;24782:39;:20;23951:90;24782:24;:39::i;24781:47::-;24757:71;;22439:2396;;;;;;;;;;;;;;;;:::o;12011:407::-;12163:19;12216:1;12202:10;:15;;12194:24;;;;;;12259:1;12236:19;:24;;12228:33;;;;;;12285:126;:104;12353:35;:19;12377:10;12353:23;:35::i;:::-;12285;:10;12305:14;12285:19;:35::i;:::-;:67;;:104::i;12518:2178::-;12649:26;12831:1;12812:8;:16;;;:20;12804:29;;;;;;4071:3:76;13163:11:96;:48;;13155:57;;;;;;13242:25;;13227:40;;13223:1467;;13436:25;;13395:18;;;;13362:100;;13436:25;13362:52;;:11;;:32;:52::i;13223:1467::-;13498:8;:25;;;13483:11;:40;13479:1211;;14077:18;;;;13994:25;;13966;;;;13869:18;;;;13785:311;;14077:18;13785:235;;13966:53;;;;13785:124;;13786:39;;;13869;;;13785:83;:124::i;13479:1211::-;14362:317;14660:8;:18;;;14362:241;14577:8;:25;;;4071:3:76;14541:61:96;14362:122;14465:8;:18;;;14446:8;:16;;;:37;14377:8;:25;;;14363:11;:39;14362:83;;:122;;;;:::i;25075:872::-;25323:6;;;25379:54;:9;25411:21;25379:31;:54::i;:::-;25533:21;;;;25349:84;;-1:-1:-1;25533:47:96;;25349:84;25533:25;:47::i;:::-;25509:21;;;:71;25676:15;25649:24;;;:42;-1:-1:-1;25729:55:96;:9;25761:22;25729:31;:55::i;:::-;25701:83;-1:-1:-1;25794:28:96;25825:55;:9;25857:22;25825:31;:55::i;:::-;25794:86;25921:18;;-1:-1:-1;25075:872:96;;-1:-1:-1;;;;;;;;25075:872:96:o;17538:1107:105:-;17640:23;847:1;17737:6;:30;;;;17729:39;;;;;;17779:90;17872:37;:35;:37::i;:::-;-1:-1:-1;;;;;17986:14:105;;17919:64;17986:14;;;;;;;;;;17779:130;;-1:-1:-1;18043:28:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;18010:61;;18087:9;18082:533;18106:6;18102:10;;:1;:10;18082:533;;;18133:42;18178:12;18191:1;18178:15;;;;;;;;18133:60;;18207:27;18237:6;18244:1;18237:9;;;;;;;;;;;;;;;;;;;18385:23;;;;;18366:42;;18439:21;;;;;18422:14;;;:38;;;;18492:22;-1:-1:-1;;;18492:22:105;;;18474:15;;;:40;-1:-1:-1;;;18545:21:105;;;;;;;18528:38;;:14;;;:38;18580:17;;:24;;;;-1:-1:-1;18385:23:105;18114:3;18082:533;;;-1:-1:-1;18632:6:105;17538:1107;-1:-1:-1;;;;;17538:1107:105:o;16696:836::-;16835:13;;16786:20;;16835:13;16864:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16864:21:105;;16858:27;;16900:9;16895:236;16915:6;16911:1;:10;16895:236;;;16942:27;16972:6;16979:1;16972:9;;;;;;;;;;;;;;16942:39;;17062:58;17070:5;:16;;;17088:5;:14;;;17104:5;:15;;;17062:7;:58::i;:::-;17053:3;17057:1;17053:6;;;;;;;;;;;;;;;;;:67;-1:-1:-1;16923:3:105;;16895:236;;;-1:-1:-1;17185:1:105;17196:330;17207:6;17203:1;:10;17196:330;;;17241:1;17256:243;17267:1;17263;:5;:28;;;;;17285:3;17289:1;17285:6;;;;;;;;;;;;;;17272:3;17280:1;17276;:5;17272:10;;;;;;;;;;;;;;:19;17263:28;17256:243;;;17371:3;17375:1;17371:6;;;;;;;;;;;;;;17379:3;17387:1;17383;:5;17379:10;;;;;;;;;;;;;;17348:3;17356:1;17352;:5;17348:10;;;;;;;;;;;;;17360:3;17364:1;17360:6;;;;;;;;;;;;;17347:43;;;;;;;;;;17438:6;17445:1;17438:9;;;;;;;;;;;;;;17449:6;17460:1;17456;:5;17449:13;;;;;;;;;;;;;;17409:6;17420:1;17416;:5;17409:13;;;;;;;;;;;;;17424:6;17431:1;17424:9;;;;;;;;;;;;;;;;;17408:55;;;;;-1:-1:-1;;17481:3:105;17256:243;;;-1:-1:-1;17512:3:105;;17196:330;;;16696:836;;;;;:::o;12513:242:78:-;12576:57;12650:12;12665:43;12681:26;12665:15;:43::i;3556:233:101:-;3634:24;3670:33;3706:39;:37;:39::i;:::-;:51;;;;;;;;;;;;;;-1:-1:-1;;3706:51:101;;;3774:8;-1:-1:-1;;;;;3774:8:101;;3556:233::o;21727:2630::-;21885:25;21920:23;21953:28;21991:24;22032:28;22070:29;22175:40;22197:10;22209:5;22175:21;:40::i;:::-;22544:20;;22109:106;;-1:-1:-1;22109:106:101;;-1:-1:-1;22109:106:101;-1:-1:-1;22443:33:101;;22479:87;;22530:35;;:9;;:13;:35::i;:::-;4071:3:76;;22479:50:101;:87::i;:::-;22443:123;-1:-1:-1;22597:233:101;22648:172;3248:11:76;22737:52:101;:21;22443:123;22737:25;:52::i;:::-;:69;;;;;4160:4:76;;22737:69:101;;22648:30;:172::i;:::-;22597:16;;;;;:37;:233::i;:::-;22577:253;-1:-1:-1;22859:230:101;22912:167;3248:11:76;23001:47:101;:16;23022:25;23001:20;:47::i;22912:167::-;22859:18;;;;;:39;:230::i;:::-;22841:248;;23238:21;23214:20;:45;23210:140;;;-1:-1:-1;23319:1:101;;-1:-1:-1;23275:64:101;;-1:-1:-1;;23275:64:101;23210:140;23487:23;23513:232;23564:171;3248:11:76;23653:51:101;:20;23678:25;23653:24;:51::i;23564:171::-;23513:16;;;;;:37;:232::i;:::-;23487:258;-1:-1:-1;23755:26:101;23784:38;:17;23487:258;23784:21;:38::i;:::-;23755:67;;24285:65;24334:15;24285:44;24310:18;24285:5;:20;;;:24;;:44;;;;:::i;:65::-;24262:88;;21727:2630;;;;;;;;;;;;;:::o;3035:150:121:-;3110:7;3136:42;3140:34;3144:1;4160:4:76;3140:3:121;:34::i;:::-;3176:1;3136:3;:42::i;3191:150::-;3266:7;3292:42;3296:9;3300:1;3303;3296:3;:9::i;:::-;4160:4:76;3292:3:121;:42::i;3621:133::-;3673:6;3704:16;3699:21;;;3691:30;;;;;4320:133;4372:6;-1:-1:-1;;;;;4398:21:121;;;4390:30;;;;;3482:133;3534:6;3565:16;3560:21;;;3552:30;;;;;12909:281:83;13032:26;13078:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;;;13136;;-1:-1:-1;;;13136:47:83;;-1:-1:-1;;;;;13078:47:83;;;;-1:-1:-1;13078:47:83;;13136:24;;:47;;13161:7;;13170:12;;13136:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12909:281;;;;:::o;5679:1161:97:-;5983:100;6086:29;:27;:29::i;:::-;6125:35;6163:17;;;;;;;;;;;:27;;;;;;;;:43;;;;;;;;;6307:25;;;6342:15;;;:26;;;6398:24;;-1:-1:-1;;;;;6398:24:97;;;6378:17;;;:44;;;;-1:-1:-1;;;6456:28:97;;;;;6432:21;;;:52;6519:29;-1:-1:-1;;;6519:29:97;;;;6494:22;;;:54;-1:-1:-1;;;6578:24:97;;;;6558:17;;;:44;-1:-1:-1;;;6639:31:97;;;;;;6612:24;;;:58;5983:132;;-1:-1:-1;6163:43:97;6681:153;;;;6739:28;;;;-1:-1:-1;;;;;6739:28:97;6715:21;;;:52;6681:153;;;6822:1;6798:21;;;:25;5679:1161;;;;;;;;:::o;10661:1216:96:-;10875:21;10939:1;10916:20;:24;10908:33;;;;;;11105:9;11088:14;:26;11084:55;;;-1:-1:-1;11123:16:96;11116:23;;11084:55;11150:16;11169:29;:9;11183:14;11169:13;:29::i;:::-;11150:48;;11291:20;11280:8;:31;11276:60;;;11320:16;11313:23;;;;;11276:60;11396:23;11422:49;:8;11450:20;11422:27;:49::i;:::-;11396:75;-1:-1:-1;11535:20:96;11558:54;4071:3:76;11396:75:96;11558:37;:54::i;:::-;11535:77;-1:-1:-1;11741:129:96;4071:3:76;11742:71:96;11784:28;:10;11535:77;11784:14;:28::i;:::-;11742:37;:16;11763:15;11742:20;:37::i;11741:129::-;11713:157;10661:1216;-1:-1:-1;;;;;;;;;10661:1216:96:o;14615:6524:117:-;14664:6;-1:-1:-1;;;14687:1:117;:24;;;14678:34;;;;;;-1:-1:-1;;14735:1:117;:25;;;14731:39;;;-1:-1:-1;14769:1:117;14762:8;;14731:39;-1:-1:-1;;;14790:14:117;14856:18;14852:22;;:26;;;14848:98;;;14904:35;14895:44;14943:3;14895:51;14848:98;14981:1;14956;14960:18;14956:22;:26;;;14952:98;;;15008:35;14999:44;15047:3;14999:51;14952:98;15085:1;15060;15064:18;15060:22;:26;;;15056:98;;;15112:35;15103:44;15151:3;15103:51;15056:98;15189:1;15164;15168:18;15164:22;:26;;;15160:98;;;15216:35;15207:44;15255:3;15207:51;15160:98;15292:1;15268;15272:17;15268:21;:25;;;15264:97;;;15319:35;15310:44;15358:3;15310:51;15264:97;15395:1;15371;15375:17;15371:21;:25;;;15367:97;;;15422:35;15413:44;15461:3;15413:51;15367:97;15498:1;15474;15478:17;15474:21;:25;;;15470:97;;;15525:35;15516:44;15564:3;15516:51;15470:97;15601:1;15577;-1:-1:-1;;;15577:21:117;:25;;;15573:97;;;15628:35;15619:44;15667:3;15619:51;15573:97;15703:1;15680;15684:16;15680:20;:24;;;15676:96;;;15730:35;15721:44;15769:3;15721:51;15676:96;15805:1;15782;15786:16;15782:20;:24;;;15778:96;;;15832:35;15823:44;15871:3;15823:51;15778:96;15907:1;15884;15888:16;15884:20;:24;;;15880:96;;;15934:35;15925:44;15973:3;15925:51;15880:96;16009:1;15986;15990:16;15986:20;:24;;;15982:96;;;16036:35;16027:44;16075:3;16027:51;15982:96;16110:1;16088;16092:15;16088:19;:23;;;16084:95;;;16137:35;16128:44;16176:3;16128:51;16084:95;16211:1;16189;16193:15;16189:19;:23;;;16185:95;;;16238:35;16229:44;16277:3;16229:51;16185:95;16312:1;16290;16294:15;16290:19;:23;;;16286:95;;;16339:35;16330:44;16378:3;16330:51;16286:95;16413:1;16391;16395:15;16391:19;:23;;;16387:95;;;16440:35;16431:44;16479:3;16431:51;16387:95;16513:1;16492;16496:14;16492:18;:22;;;16488:94;;;16540:35;16531:44;16579:3;16531:51;16488:94;16613:1;16592;16596:14;16592:18;:22;;;16588:94;;;16640:35;16631:44;16679:3;16631:51;16588:94;16713:1;16692;16696:14;16692:18;:22;;;16688:94;;;16740:35;16731:44;16779:3;16731:51;16688:94;16813:1;16792;16796:14;16792:18;:22;;;16788:94;;;16840:35;16831:44;16879:3;16831:51;16788:94;16912:1;16892;16896:13;16892:17;:21;;;16888:93;;;16939:35;16930:44;16978:3;16930:51;16888:93;17011:1;16991;16995:13;16991:17;:21;;;16987:93;;;17038:35;17029:44;17077:3;17029:51;16987:93;17110:1;17090;17094:13;17090:17;:21;;;17086:93;;;17137:35;17128:44;17176:3;17128:51;17086:93;17209:1;17189;17193:13;17189:17;:21;;;17185:93;;;17236:35;17227:44;17275:3;17227:51;17185:93;17307:1;17288;17292:12;17288:16;:20;;;17284:92;;;17334:35;17325:44;17373:3;17325:51;17284:92;17405:1;17386;17390:12;17386:16;:20;;;17382:92;;;17432:35;17423:44;17471:3;17423:51;17382:92;17503:1;17484;17488:12;17484:16;:20;;;17480:92;;;17530:35;17521:44;17569:3;17521:51;17480:92;17601:1;17582;17586:12;17582:16;:20;;;17578:92;;;17628:35;17619:44;17667:3;17619:51;17578:92;17698:1;17680;17684:11;17680:15;:19;;;17676:91;;;17725:35;17716:44;17764:3;17716:51;17676:91;17795:1;17777;17781:11;17777:15;:19;;;17773:91;;;17822:35;17813:44;17861:3;17813:51;17773:91;17892:1;17874;17878:11;17874:15;:19;;;17870:91;;;17919:35;17910:44;17958:3;17910:51;17870:91;17989:1;17971;17975:11;17971:15;:19;;;17967:91;;;18016:35;18007:44;18055:3;18007:51;17967:91;18085:1;18068;18072:10;18068:14;:18;;;18064:90;;;18112:35;18103:44;18151:3;18103:51;18064:90;18181:1;18164;18168:10;18164:14;:18;;;18160:90;;;18208:35;18199:44;18247:3;18199:51;18160:90;18277:1;18260;18264:10;18260:14;:18;;;18256:90;;;18304:35;18295:44;18343:3;18295:51;18256:90;18373:1;18356;18360:10;18356:14;:18;;;18352:90;;;18400:35;18391:44;18439:3;18391:51;18352:90;18468:1;18452;18456:9;18452:13;:17;;;18448:89;;;18495:35;18486:44;18534:3;18486:51;18448:89;18563:1;18547;18551:9;18547:13;:17;;;18543:89;;;18590:35;18581:44;18629:3;18581:51;18543:89;18658:1;18642;18646:9;18642:13;:17;;;18638:89;;;18685:35;18676:44;18724:3;18676:51;18638:89;18753:1;18737;18741:9;18737:13;:17;;;18733:89;;;18780:35;18771:44;18819:3;18771:51;18733:89;18847:1;18832;18836:8;18832:12;:16;;;18828:88;;;18874:35;18865:44;18913:3;18865:51;18828:88;18941:1;18926;18930:8;18926:12;:16;;;18922:88;;;18968:35;18959:44;19007:3;18959:51;18922:88;19035:1;19020;19024:8;19020:12;:16;;;19016:88;;;19062:35;19053:44;19101:3;19053:51;19016:88;19129:1;19114;19118:8;19114:12;:16;;;19110:88;;;19156:35;19147:44;19195:3;19147:51;19110:88;19222:1;19208;19212:7;19208:11;:15;;;19204:87;;;19249:35;19240:44;19288:3;19240:51;19204:87;19315:1;19301;19305:7;19301:11;:15;;;19297:87;;;19342:35;19333:44;19381:3;19333:51;19297:87;19408:1;19394;19398:7;19394:11;:15;;;19390:87;;;19435:35;19426:44;19474:3;19426:51;19390:87;19501:1;19487;19491:7;19487:11;:15;;;19483:87;;;19528:35;19519:44;19567:3;19519:51;19483:87;19593:1;19580;19584:6;19580:10;:14;;;19576:86;;;19620:35;19611:44;19659:3;19611:51;19576:86;19685:1;19672;19676:6;19672:10;:14;;;19668:86;;;19712:35;19703:44;19751:3;19703:51;19668:86;19777:1;19764;19768:6;19764:10;:14;;;19760:86;;;19804:35;19795:44;19843:3;19795:51;19760:86;19869:1;19856;19860:6;19856:10;:14;;;19852:86;;;19896:35;19887:44;19935:3;19887:51;19852:86;19960:1;19948;19952:5;19948:9;:13;;;19944:85;;;19987:35;19978:44;20026:3;19978:51;19944:85;20051:1;20039;20043:5;20039:9;:13;;;20035:85;;;20078:35;20069:44;20117:3;20069:51;20035:85;20142:1;20130;20134:5;20130:9;:13;;;20126:85;;;20169:35;20160:44;20208:3;20160:51;20126:85;20233:1;20221;20225:5;20221:9;:13;;;20217:85;;;20260:35;20251:44;20299:3;20251:51;20217:85;20323:1;20312;20316:4;20312:8;:12;;;20308:84;;;20350:35;20341:44;20389:3;20341:51;20308:84;20413:1;20402;20406:4;20402:8;:12;;;20398:84;;;20440:35;20431:44;20479:3;20431:51;20398:84;20503:1;20492;20496:4;20492:8;:12;;;20488:84;;;20530:35;20521:44;20569:3;20521:51;20488:84;20593:1;20582;20586:4;20582:8;:12;;;20578:84;;;20620:35;20611:44;20659:3;20611:51;20578:84;20682:1;20672;20676:3;20672:7;:11;;;20668:83;;;20709:35;20700:44;20748:3;20700:51;20668:83;20771:1;20761;20765:3;20761:7;:11;;;20757:83;;;20798:35;20789:44;20837:3;20789:51;20757:83;20860:1;20850;20854:3;20850:7;:11;;;20846:83;;;20887:35;20878:44;20926:3;20878:51;20846:83;20949:1;20939;20943:3;20939:7;:11;;;20935:83;;;20976:35;20967:44;21015:3;20967:51;20935:83;21051:7;;;;21056:2;21051:7;21045:2;:14;21036:24;;21025:35;-1:-1:-1;;;;;21075:29:117;;;21066:39;;;;;8069:729:93;8242:18;8285:51;8305:9;8316:8;8326:9;8285:19;:51::i;:::-;8272:64;;8347:18;8368:24;8382:9;8368:13;:24::i;:::-;8347:45;;8594:10;8580;:24;8576:38;;8613:1;8606:8;;;;;8576:38;8651:10;8638;:23;8625:36;;8671:21;8695:27;8712:9;8695:16;:27::i;:::-;8671:51;;8753:10;8737:13;:26;8733:58;;;8778:13;8069:729;-1:-1:-1;;;;;8069:729:93:o;7592:471::-;7766:18;7809:51;7829:9;7840:8;7850:9;7809:19;:51::i;:::-;7796:64;;7884:42;7899:26;7915:9;7899:15;:26::i;:::-;7884:10;;:14;:42::i;:::-;7871:55;;7936:21;7960:27;7977:9;7960:16;:27::i;:::-;7936:51;;8015:13;8002:10;:26;7998:58;;;8043:13;7592:471;-1:-1:-1;;;;7592:471:93:o;3973:390::-;4144:14;;;4122:92;1696:34;4144:37;;;;4122:62;;:92;4071:3:76;4304:52:93;;3973:390::o;5837:257:78:-;5896:87;5999:12;6014:33;6030:16;6014:15;:33::i;11787:253::-;11862:44;11923:12;11938:55;11954:38;11938:15;:55::i;2511:396:96:-;2686:31;;:::i;:::-;2729:12;2744:34;2766:11;2744:21;:34::i;:::-;2803:17;;;2788:12;2803:17;;;;;;;;;;2729:49;;-1:-1:-1;2788:12:96;2835:1;2821:15;;:23;;2843:1;2821:23;;;2839:1;2821:23;2803:42;;;;;;;;;;;2788:57;;2862:38;2887:6;2895:4;2862:24;:38::i;26073:577::-;26194:19;;26255:76;26278:52;3248:11:76;26278:32:96;:12;26295:14;26278:16;:32::i;26255:76::-;26225:106;;26341:21;26365:59;26383:8;-1:-1:-1;;;26365:17:96;:59::i;:::-;26341:83;;26434:16;26453:33;26471:14;26453:17;:33::i;:::-;26434:52;;26496:22;26521:60;26539:9;-1:-1:-1;;;26521:17:96;:60::i;:::-;26496:85;;26607:36;26627:15;26607:19;:36::i;:::-;26592:51;;;26073:577;-1:-1:-1;;;;;;;26073:577:96:o;2040:143:120:-;2111:6;2136:40;2140:32;2144:1;4071:3:76;2140::120;:32::i;:::-;2174:1;2136:3;:40::i;17338:897:96:-;17506:27;17545:15;17563:91;2186:3:76;17563:47:96;17586:8;:23;;;17563:18;:22;;:47;;;;:::i;:91::-;17545:109;;17678:8;:19;;;17668:7;:29;17664:64;;;-1:-1:-1;17709:19:96;;;;17664:64;17752:8;:19;;;17742:7;:29;17738:64;;;-1:-1:-1;17783:19:96;;;;17738:64;17817:8;17813:416;;;17967:31;:18;17990:7;17967:22;:31::i;:::-;17945:53;;17813:416;;;18163:18;18153:7;:28;:65;;18210:7;18189:18;:28;18153:65;;;-1:-1:-1;18184:1:96;;17338:897;-1:-1:-1;;;;17338:897:96:o;4446:200:93:-;4602:14;;;1781:32;4602:35;4581:58;;;4446:200::o;16382:308:105:-;16525:34;16557:2;16525:34;;;;16580:39;16618:1;16580:39;;;;16524:96;16647:25;;;16524:149;16382:308;;;;;:::o;13247:257:78:-;13317:57;13391:12;13406:51;13422:34;13406:15;:51::i;19401:1969:101:-;19538:28;19576:29;19615:24;20002:19;20062:1;20035:7;:24;;;:28;20031:297;;;20183:134;20266:50;20295:7;:20;;;20266:7;:24;;;:28;;:50;;;;:::i;:::-;20210:18;;;;20183:22;;;;:46;;:26;:46::i;:::-;:82;;:134::i;:::-;20169:148;;20031:297;20337:31;20371:64;20424:10;20371:52;:64::i;:::-;20337:98;-1:-1:-1;20477:30:101;20337:98;20495:11;20477:17;:30::i;:::-;20454:53;-1:-1:-1;20785:15:101;;20781:209;;20927:52;:1;20952:20;20974:4;20927:24;:52::i;:::-;20903:76;;20781:209;21238:24;;;;:28;21234:130;;21301:52;:20;21341:11;21301:39;:52::i;:::-;21282:71;;21234:130;19401:1969;;;;;;;:::o;2713:155:121:-;2786:7;2812:49;2816:41;2820:1;4071:3:76;2816::121;:41::i;3262:155:93:-;3346:7;3372:38;3387:9;1858:26;3372:14;:38::i;2711:162::-;2798:7;2824:42;2839:9;2281:30;2824:14;:42::i;2986:159::-;3072:7;3098:40;3113:9;1931:28;3098:14;:40::i;2543:162::-;2630:7;2656:42;2671:9;2008:30;2656:14;:42::i;2232:273:96:-;2306:12;2342:11;2338:1;:15;2330:24;;;;;;2606:1:76;2372:11:96;:48;;2364:57;;;;;;2460:1;2446:11;:15;:47;;2492:1;2478:11;:15;2446:47;;;2464:11;2446:47;2497:1;2440:58;;2232:273;-1:-1:-1;;2232:273:96:o;3552:1423::-;3659:31;;:::i;:::-;2186:3:76;4071;3879:4:96;3884:32;;;3879:38;;;;;;;;3865:90;:143;;;;;;3844:164;;2186:3:76;4071;4053:4:96;4058:32;;;1019:1;4058:32;4053:38;;;;;;;;4039:90;:143;;;;;;4018:1;:18;;:164;;;;;4204:53;4227:4;1077:1;4232:6;:22;;;4227:28;;;;;;;;4204:16;:53::i;:::-;4192:9;;;:65;;;4515:3;;4467:4;4472:25;;;1135:1;4472:25;4467:31;;;;;;;;4453:59;:65;;;;;;4439:11;;;:79;4592:9;;;;4604:3;;4556:4;4561:25;;;1193:1;4561:25;4556:31;;;;;;;;4542:59;:65;;;;;;4528:11;;;:79;4633:15:76;4695:4:96;4700:26;;;4633:1:76;4700:26:96;4695:32;;;;;;;;4681:87;4666:12;;;:102;5125:16:76;4807:4:96;4812:26;;;1309:1;4812:26;4807:32;;;;;;;;4793:94;4778:12;;;:109;4930:4;4801:39;4935:30;;1367:1;4935:30;4930:36;;;;;;;;4897:16;;;:71;:1;3552:1423;-1:-1:-1;;3552:1423:96:o;8019:290::-;8119:31;;:::i;:::-;8162:12;8177:44;:42;:44::i;:::-;:56;;;;;;;;;;;;;;;:59;;-1:-1:-1;8253:49:96;;8177:59;8253:24;:49::i;2874:155:121:-;2947:7;2973:49;2977:9;2981:1;2984;2977:3;:9::i;:::-;4071:3:76;2973::121;:49::i;2318:219:93:-;2466:14;;;;;2444:49;2466:24;;2444:49;5125:16:76;2444:86:93;;2318:219::o;2913:633:96:-;2981:7;3306:11;3274:43;;4981:3:76;3274:43:96;:265;;3491:48;;;5125:16:76;3491:48:96;3274:265;;;-1:-1:-1;;;3388:43:96;;;;;;5206:17:76;3387:88:96;5044:22:76;3333:142:96;;2913:633::o;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:551:213:-;;;;158:2;146:9;137:7;133:23;129:32;126:2;;;179:6;171;164:22;126:2;210:23;;-1:-1:-1;;;;;262:31:213;;252:42;;242:2;;313:6;305;298:22;242:2;341:5;-1:-1:-1;398:2:213;383:18;;370:32;446:6;433:20;;421:33;;411:2;;473:6;465;458:22;411:2;116:449;;501:7;;-1:-1:-1;;;555:2:213;540:18;;;;527:32;;116:449::o;570:255::-;;;710:2;698:9;689:7;685:23;681:32;678:2;;;731:6;723;716:22;678:2;-1:-1:-1;;759:16:213;;815:2;800:18;;;794:25;759:16;;794:25;;-1:-1:-1;668:157:213:o;830:443::-;;927:5;921:12;954:6;949:3;942:19;980:4;1009:2;1004:3;1000:12;993:19;;1046:2;1039:5;1035:14;1067:3;1079:169;1093:6;1090:1;1087:13;1079:169;;;1154:13;;1142:26;;1188:12;;;;1223:15;;;;1115:1;1108:9;1079:169;;;-1:-1:-1;1264:3:213;;897:376;-1:-1:-1;;;;;897:376:213:o;1278:445::-;-1:-1:-1;;;;;1563:15:213;;;1545:34;;1615:15;;;;1610:2;1595:18;;1588:43;1662:2;1647:18;;1640:34;1705:2;1690:18;;1683:34;;;;1494:3;1479:19;;1461:262::o;1728:375::-;-1:-1:-1;;;;;1986:15:213;;;1968:34;;2038:15;;;;2033:2;2018:18;;2011:43;2085:2;2070:18;;2063:34;;;;1918:2;1903:18;;1885:218::o;2108:272::-;-1:-1:-1;;;;;2298:32:213;;;;2280:51;;2362:2;2347:18;;2340:34;2268:2;2253:18;;2235:145::o;2385:477::-;;2642:2;2631:9;2624:21;2668:62;2726:2;2715:9;2711:18;2703:6;2668:62;:::i;:::-;2778:9;2770:6;2766:22;2761:2;2750:9;2746:18;2739:50;2806;2849:6;2841;2806:50;:::i;2867:183::-;3019:25;;;3007:2;2992:18;;2974:76::o;3055:346::-;3257:2;3239:21;;;3296:2;3276:18;;;3269:30;-1:-1:-1;;;3330:2:213;3315:18;;3308:52;3392:2;3377:18;;3229:172::o;3406:343::-;3608:2;3590:21;;;3647:2;3627:18;;;3620:30;-1:-1:-1;;;3681:2:213;3666:18;;3659:49;3740:2;3725:18;;3580:169::o;3754:337::-;3956:2;3938:21;;;3995:2;3975:18;;;3968:30;-1:-1:-1;;;4029:2:213;4014:18;;4007:43;4082:2;4067:18;;3928:163::o;4096:337::-;4298:2;4280:21;;;4337:2;4317:18;;;4310:30;-1:-1:-1;;;4371:2:213;4356:18;;4349:43;4424:2;4409:18;;4270:163::o;4438:339::-;4640:2;4622:21;;;4679:2;4659:18;;;4652:30;-1:-1:-1;;;4713:2:213;4698:18;;4691:45;4768:2;4753:18;;4612:165::o;4782:338::-;4984:2;4966:21;;;5023:2;5003:18;;;4996:30;-1:-1:-1;;;5057:2:213;5042:18;;5035:44;5111:2;5096:18;;4956:164::o;5125:332::-;5327:2;5309:21;;;5366:1;5346:18;;;5339:29;-1:-1:-1;;;5399:2:213;5384:18;;5377:39;5448:2;5433:18;;5299:158::o;5462:345::-;5664:2;5646:21;;;5703:2;5683:18;;;5676:30;-1:-1:-1;;;5737:2:213;5722:18;;5715:51;5798:2;5783:18;;5636:171::o;5812:397::-;6014:2;5996:21;;;6053:2;6033:18;;;6026:30;6092:34;6087:2;6072:18;;6065:62;-1:-1:-1;;;6158:2:213;6143:18;;6136:31;6199:3;6184:19;;5986:223::o;6214:248::-;6388:25;;;6444:2;6429:18;;6422:34;6376:2;6361:18;;6343:119::o;6467:319::-;6669:25;;;6725:2;6710:18;;6703:34;;;;6768:2;6753:18;;6746:34;6657:2;6642:18;;6624:162::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"nTokenRedeemViaBatch(address,uint16,int256)": {"notice": "When redeeming nTokens via the batch they must all be sold to cash and this method will return the amount of asset cash sold.", "params": {"currencyId": "the currency associated the nToken", "tokensToRedeem": "the amount of nTokens to convert to cash"}, "returns": {"_0": "amount of asset cash to return to the account, denominated in internal token decimals"}}}, "version": 1}, "offset": [1350, 18800], "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE22AAA3 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A PUSH2 0x55 CALLDATASIZE PUSH1 0x4 PUSH2 0x51B3 JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP2 SWAP1 PUSH2 0x52EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x84 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH1 0x0 PUSH2 0xBD JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 MLOAD PUSH1 0x0 EQ PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x5443 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP6 SGT PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x4FD8 JUMP JUMPDEST PUSH2 0xE0 DUP2 DUP9 PUSH2 0x1D9 JUMP JUMPDEST TIMESTAMP PUSH2 0xEA DUP3 PUSH2 0x1F2 JUMP JUMPDEST GT PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x5325 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD DUP7 SLT PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x5379 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x14F DUP4 PUSH1 0xC0 ADD MLOAD DUP11 PUSH2 0xFFFF AND DUP6 PUSH1 0x80 ADD MLOAD TIMESTAMP DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x225 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15D JUMPI POP DUP6 JUMPDEST ISZERO PUSH2 0x183 JUMPI PUSH2 0x17C DUP4 PUSH1 0xC0 ADD MLOAD DUP11 DUP6 PUSH1 0x80 ADD MLOAD DUP12 DUP8 PUSH1 0x40 ADD MLOAD DUP7 PUSH2 0x2D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x192 DUP6 DUP12 TIMESTAMP DUP7 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x1A8 DUP7 DUP13 DUP6 DUP6 DUP9 ISZERO TIMESTAMP PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B6 DUP14 DUP14 DUP4 DUP15 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x1C5 DUP7 DUP15 DUP13 DUP13 DUP6 DUP8 DUP12 PUSH2 0x873 JUMP JUMPDEST SWAP1 SWAP15 SWAP1 SWAP14 POP SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E3 DUP3 DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x1EC DUP2 PUSH2 0x968 JUMP JUMPDEST SWAP1 SWAP2 MSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x209 JUMPI POP PUSH1 0x0 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH3 0x76A700 SWAP1 PUSH2 0x21C SWAP1 PUSH2 0x987 JUMP JUMPDEST ADD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 GT PUSH2 0x237 JUMPI POP PUSH1 0x0 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243 DUP8 DUP8 PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x251 JUMPI SWAP1 POP PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C DUP6 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP DUP6 DUP2 EQ ISZERO PUSH2 0x286 JUMPI POP PUSH21 0x400080000002002000000002000000200000000020 NOT AND SWAP1 POP PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP5 DUP2 GT PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH2 0x29B DUP3 PUSH2 0x9DE JUMP JUMPDEST DUP4 ADD SWAP1 POP PUSH1 0x0 PUSH2 0x2AB DUP10 DUP4 PUSH2 0xA82 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x2BA DUP6 DUP3 PUSH1 0x0 PUSH2 0xB8D JUMP JUMPDEST SWAP5 POP POP POP PUSH1 0x1 ADD PUSH2 0x289 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x2E2 DUP4 PUSH2 0xBD8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2EE PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x343 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x330 PUSH2 0x5021 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x328 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP3 POP PUSH1 0x0 PUSH2 0x355 DUP7 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 PUSH2 0x36A DUP11 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x3F3 DUP13 PUSH2 0x3ED DUP16 DUP7 PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 DUP11 DUP2 MLOAD DUP2 LT PUSH2 0x403 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP16 DUP2 PUSH1 0x0 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP DUP6 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0xFF AND DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP11 ADD SWAP10 POP PUSH2 0x45C DUP3 DUP6 PUSH2 0xE14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x469 DUP2 PUSH2 0xE2A JUMP JUMPDEST DUP4 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR DUP4 SSTORE PUSH2 0x496 DUP16 DUP16 DUP7 DUP6 DUP6 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x4A2 DUP11 DUP7 PUSH1 0x0 PUSH2 0xB8D JUMP JUMPDEST SWAP10 POP PUSH2 0x4AD DUP11 PUSH2 0xCB5 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x358 JUMP JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 PUSH2 0x4E3 JUMPI PUSH2 0x4DA DUP7 DUP7 PUSH2 0xF31 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x69C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F2 DUP9 DUP8 PUSH1 0x0 PUSH2 0x1038 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x53A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x568 DUP12 PUSH1 0xC0 ADD MLOAD DUP13 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP14 PUSH1 0x80 ADD MLOAD DUP13 DUP16 PUSH1 0x0 ADD MLOAD PUSH1 0x1 DUP15 PUSH2 0x1195 JUMP JUMPDEST POP DUP12 MLOAD PUSH1 0x40 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x587 SWAP1 PUSH2 0x580 SWAP1 DUP4 PUSH2 0x1213 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x125B JUMP JUMPDEST SWAP2 POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP12 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5AC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH2 0x5D7 DUP4 PUSH2 0x5D1 DUP14 DUP5 PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xD95 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5E3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x61D DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0x3ED DUP9 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x607 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xDE3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x629 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x672 DUP2 PUSH2 0x3ED DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x648 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x65C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x67E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x58D JUMP JUMPDEST POP SWAP1 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x3ED DUP9 DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0x6E0 SWAP1 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP9 ADD MLOAD DUP9 MLOAD MLOAD PUSH2 0x6F8 SWAP3 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x710 PUSH2 0x709 DUP9 DUP9 DUP9 DUP9 DUP8 DUP10 PUSH2 0x129D JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x72D DUP8 PUSH1 0xC0 ADD MLOAD DUP9 PUSH1 0x20 ADD MLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0xFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x76D PUSH2 0x172D JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP5 SGT DUP1 ISZERO PUSH2 0x79B JUMPI POP PUSH1 0x0 DUP4 SGT JUMPDEST ISZERO PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH4 0x23DE6651 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23DE6651 SWAP1 PUSH2 0x7D0 SWAP1 DUP5 SWAP1 DUP11 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x528A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD1C095D DUP8 PUSH2 0x81B DUP7 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP3 SWAP2 SWAP1 PUSH2 0x52AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x866 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 DUP8 ISZERO PUSH2 0x89E JUMPI PUSH1 0x0 PUSH2 0x88C DUP12 DUP8 DUP13 PUSH2 0x1748 JUMP JUMPDEST SWAP3 POP SWAP1 POP PUSH2 0x89A DUP8 DUP3 PUSH2 0x125B JUMP JUMPDEST SWAP7 POP POP JUMPDEST DUP1 ISZERO PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x53F1 JUMP JUMPDEST POP SWAP4 SWAP9 SWAP2 SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D9 DUP2 PUSH2 0xFFFF AND PUSH2 0x187A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x8F9 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH1 0x0 PUSH2 0x910 DUP7 PUSH1 0xC0 ADD MLOAD PUSH2 0x190C JUMP JUMPDEST POP POP PUSH1 0x80 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP4 AND PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x944 SWAP1 DUP5 PUSH1 0x0 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MLOAD PUSH2 0x958 SWAP1 DUP7 PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x970 PUSH2 0x5065 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP4 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0xB6 DUP4 DUP3 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 DUP3 LT ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x76A700 DUP3 JUMPDEST MOD SWAP1 SWAP2 SUB SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9B3 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x9F3 JUMPI POP PUSH3 0x76A700 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0xA06 JUMPI POP PUSH3 0xED4E00 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0xA1A JUMPI POP PUSH4 0x1DA9C00 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0xA2E JUMPI POP PUSH4 0x3B53800 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0xA42 JUMPI POP PUSH4 0x9450C00 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0xA56 JUMPI POP PUSH4 0x128A1800 PUSH2 0x220 JUMP JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0xA6A JUMPI POP PUSH4 0x25143000 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x5352 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA90 DUP6 PUSH2 0x1AB3 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP5 MOD ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xB86 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xB86 JUMP JUMPDEST PUSH3 0x15180 DUP2 DUP6 SUB DIV PUSH1 0x5A DUP2 GT PUSH2 0xADB JUMPI SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0xB86 SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 GT PUSH2 0xB1A JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x7E900 DUP5 MOD DIV DUP3 ADD PUSH1 0x59 NOT ADD SWAP1 POP PUSH1 0x6 DUP2 DIV PUSH1 0x5A ADD PUSH1 0x6 DUP3 DUP2 PUSH2 0xB0A JUMPI INVALID JUMPDEST MOD PUSH1 0x0 EQ SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x870 DUP2 GT PUSH2 0xB4A JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x278D00 DUP5 MOD DIV DUP3 ADD PUSH2 0x167 NOT ADD SWAP1 POP PUSH1 0x1E DUP2 DIV PUSH1 0x87 ADD PUSH1 0x1E DUP3 DUP2 PUSH2 0xB0A JUMPI INVALID JUMPDEST PUSH2 0x1DE2 DUP2 GT PUSH2 0xB7A JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x76A700 DUP5 MOD DIV DUP3 ADD PUSH2 0x86F NOT ADD SWAP1 POP PUSH1 0x5A DUP2 DIV PUSH1 0xC3 ADD PUSH1 0x5A DUP3 DUP2 PUSH2 0xB0A JUMPI INVALID JUMPDEST PUSH2 0x100 PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI POP PUSH2 0x100 DUP4 GT ISZERO JUMPDEST PUSH2 0xBAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xBC4 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR DUP4 OR PUSH2 0xB6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR NOT DUP4 AND PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SHR PUSH32 0x5555555555555555555555555555555555555555555555555555555555555555 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x2 DUP2 SWAP1 SHR PUSH32 0x3333333333333333333333333333333333333333333333333333333333333333 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x4 DUP2 SWAP1 SHR PUSH32 0x707070707070707070707070707070707070707070707070707070707070707 SWAP2 SWAP1 SWAP2 AND ADD PUSH1 0x8 DUP2 SWAP1 SHR PUSH31 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x10 DUP2 SWAP1 SHR ADD PUSH1 0x20 DUP2 SWAP1 SHR ADD PUSH1 0x40 DUP2 SWAP1 SHR ADD PUSH1 0x80 DUP2 SWAP1 SHR PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0xC PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCC4 JUMPI POP PUSH1 0x0 PUSH2 0x220 JUMP JUMPDEST PUSH2 0xCCD DUP3 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0xFF SUB PUSH1 0x1 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xCE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP3 GT ISZERO PUSH2 0xCF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD00 DUP5 PUSH2 0x1AB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5A DUP5 GT PUSH2 0xD1B JUMPI POP PUSH3 0x15180 DUP4 MUL ADD SWAP1 POP PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x87 DUP5 GT PUSH2 0xD43 JUMPI POP PUSH1 0x59 NOT DUP4 ADD PUSH3 0x7E900 SWAP1 DUP2 MUL SWAP1 DUP3 MOD SWAP1 SWAP2 SUB ADD PUSH3 0x76A700 ADD SWAP1 POP PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0xC3 DUP5 GT PUSH2 0xD6C JUMPI POP PUSH1 0x86 NOT DUP4 ADD PUSH3 0x278D00 SWAP1 DUP2 MUL SWAP1 DUP3 MOD SWAP1 SWAP2 SUB ADD PUSH4 0x1DA9C00 ADD SWAP1 POP PUSH2 0x9D8 JUMP JUMPDEST POP PUSH1 0xC2 NOT DUP4 ADD PUSH3 0x76A700 SWAP1 DUP2 MUL SWAP1 DUP3 MOD SWAP1 SWAP2 SUB ADD PUSH4 0xB1FA800 ADD SWAP1 POP PUSH2 0x9D8 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 MUL PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0xDC5 JUMPI DUP2 ISZERO DUP1 PUSH2 0xDB7 JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0xDB4 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0xDC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D8 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0xDDA JUMPI POP DUP2 DUP4 DUP3 DUP2 PUSH2 0xDD7 JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0xDF9 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP4 EQ JUMPDEST ISZERO PUSH2 0xE03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0xE0C JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0xE4B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP3 SGT ISZERO JUMPDEST PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE64 DUP4 DUP4 PUSH2 0x1B7A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE71 JUMPI POP PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7B PUSH2 0x1C08 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP2 AND DUP2 SUB SWAP1 PUSH2 0xEB3 DUP3 DUP6 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDC PUSH2 0xED7 PUSH2 0xED2 DUP4 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x1C15 JUMP JUMPDEST PUSH2 0x1C24 JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xF25 DUP10 DUP10 DUP10 DUP8 PUSH2 0x1C3A JUMP JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD MLOAD MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF7E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFC2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102F JUMPI PUSH1 0x0 DUP7 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFE6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD SWAP1 POP PUSH2 0x100F DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0x3ED DUP9 DUP5 PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x101B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xFC8 JUMP JUMPDEST POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD MLOAD MLOAD PUSH1 0x0 SWAP1 PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1086 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x1091 PUSH2 0x5091 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x118A JUMPI DUP8 MLOAD PUSH2 0x10AF SWAP1 DUP4 PUSH1 0x1 DUP1 DUP6 ADD SWAP1 DUP12 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10C5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x10DC DUP4 DUP7 PUSH2 0x1D37 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1102 PUSH2 0x709 DUP13 PUSH1 0xC0 ADD MLOAD DUP14 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1DB2 JUMP JUMPDEST DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x110E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 PUSH2 0x116C PUSH2 0x1165 PUSH2 0x1159 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x1131 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP16 DUP16 PUSH2 0x114E JUMPI DUP12 PUSH1 0xA0 ADD MLOAD PUSH2 0x1154 JUMP JUMPDEST DUP12 PUSH1 0xC0 ADD MLOAD JUMPDEST PUSH2 0x1DF7 JUMP JUMPDEST DUP15 MLOAD PUSH1 0x40 ADD MLOAD SWAP1 PUSH2 0x1213 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x1178 DUP10 DUP3 PUSH2 0x125B JUMP JUMPDEST SWAP9 POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x1094 SWAP2 POP POP JUMP JUMPDEST POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x11A3 DUP5 PUSH2 0xCB5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1206 JUMPI PUSH1 0x0 PUSH2 0x11B8 DUP10 DUP4 PUSH2 0xCDA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11CA DUP13 DUP13 DUP5 DUP13 DUP13 DUP13 PUSH2 0x1E67 JUMP JUMPDEST SWAP1 POP PUSH2 0x11D6 DUP6 DUP3 PUSH2 0x125B JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x1 SWAP4 POP JUMPDEST PUSH2 0x11F2 DUP7 DUP5 PUSH1 0x0 PUSH2 0xB8D JUMP JUMPDEST SWAP6 POP PUSH2 0x11FD DUP7 PUSH2 0xCB5 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x11A6 JUMP JUMPDEST POP SWAP8 POP SWAP8 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1237 SWAP1 PUSH2 0x3ED DUP6 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0xD95 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT PUSH2 0x1247 JUMPI DUP1 PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1253 DUP2 PUSH1 0x0 NOT PUSH2 0x1EC3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x127D DUP4 DUP4 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1298 DUP4 DUP4 DUP4 PUSH2 0x1ED9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A7 PUSH2 0x5091 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x14D4 JUMPI PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12CE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1302 DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0xE14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SLT PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x5414 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x133A JUMPI INVALID JUMPDEST EQ PUSH2 0x1344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 DUP3 ADD DUP2 SWAP1 MSTORE DUP11 MLOAD PUSH2 0x135F SWAP2 DUP6 SWAP1 DUP6 DUP2 ADD SWAP1 DUP11 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1388 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1371 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x1F4D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP SWAP1 POP PUSH2 0x1396 DUP7 DUP3 PUSH2 0x125B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x0 DUP7 ISZERO PUSH2 0x147E JUMPI PUSH1 0x0 PUSH2 0x13C2 DUP14 PUSH1 0xC0 ADD MLOAD DUP15 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1DB2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13E1 DUP15 PUSH1 0x40 ADD MLOAD PUSH2 0x3ED DUP16 DUP6 PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x13ED DUP5 DUP3 PUSH2 0x125B JUMP JUMPDEST DUP12 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x13F9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x140E DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MLOAD SWAP1 SWAP4 POP PUSH2 0x142A SWAP1 PUSH2 0x1424 DUP5 DUP8 PUSH2 0x125B JUMP JUMPDEST SWAP1 PUSH2 0x125B JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x144B JUMPI POP DUP11 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x143E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 NOT EQ JUMPDEST ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 DUP12 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x145E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x1474 DUP4 PUSH1 0x1 PUSH2 0xE14 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x14A4 DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x148D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0xE14 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x14C4 DUP13 PUSH1 0xC0 ADD MLOAD DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP16 PUSH1 0x80 ADD MLOAD DUP6 PUSH2 0x1FF5 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0x12AA SWAP1 POP JUMP JUMPDEST POP POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 JUMPDEST DUP10 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1571 JUMPI PUSH1 0x0 DUP11 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1506 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x151C JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152C JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x1537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1549 JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x1559 JUMPI POP PUSH1 0x60 DUP2 ADD MLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1568 DUP12 DUP4 PUSH2 0x2151 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x14EA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP10 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 DUP11 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1591 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A8 JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x15CC JUMPI PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 SSTORE PUSH2 0x160B JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15DE JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x15F7 JUMPI PUSH1 0x80 DUP2 ADD MLOAD DUP1 PUSH2 0x15F4 DUP4 DUP3 PUSH2 0x22A1 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1603 DUP2 DUP7 DUP7 DUP7 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1575 JUMP JUMPDEST POP PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x0 PUSH2 0x1624 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP JUMPDEST DUP13 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x16EE JUMPI PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x165F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x167C JUMPI POP PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x168E JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x16AC JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16A9 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C1 DUP2 DUP10 DUP10 DUP10 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP PUSH2 0x16DE DUP2 DUP5 DUP8 PUSH1 0x8 DUP2 LT PUSH2 0x16D8 JUMPI INVALID JUMPDEST ADD PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SWAP5 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1640 JUMP JUMPDEST POP PUSH1 0x10 DUP4 GT ISZERO PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH5 0xFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x21 PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x3 PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 PUSH1 0x0 NOT DUP4 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1753 PUSH2 0x5091 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1870 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x176F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1784 JUMPI PUSH2 0x1868 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x1797 SWAP1 DUP4 PUSH1 0x1 DUP5 ADD PUSH1 0x0 TIMESTAMP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17FE DUP7 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0x17BE DUP11 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x17B1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x173A JUMP JUMPDEST PUSH2 0x17F0 TIMESTAMP DUP14 PUSH1 0x20 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x17D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH2 0x2453 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 DUP9 ADD PUSH2 0x2468 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x180F JUMPI PUSH1 0x1 SWAP4 POP PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x183F DUP9 PUSH1 0xC0 ADD MLOAD DUP8 DUP11 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP7 PUSH1 0x20 ADD MLOAD DUP12 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1832 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24E7 JUMP JUMPDEST PUSH2 0x1849 DUP6 DUP3 PUSH2 0x125B JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1859 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x175A JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1885 PUSH2 0x172D JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x18B1 PUSH2 0x2564 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x40 SWAP1 SWAP5 KECCAK256 SLOAD PUSH2 0xFFFF DUP2 AND SWAP6 PUSH4 0xFFFFFFFF PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP7 POP PUSH7 0x1000000000000 DUP4 DIV AND SWAP5 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV AND SWAP4 POP PUSH1 0x1 PUSH1 0x58 SHL SWAP1 SWAP2 DIV PUSH1 0xD0 SHL SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x191A PUSH2 0x2571 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP6 SWAP1 SWAP6 MSTORE POP POP PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0x60 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP4 POP PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV PUSH4 0xFFFFFFFF AND SWAP2 POP JUMP JUMPDEST PUSH2 0x1975 PUSH2 0x50D9 JUMP JUMPDEST PUSH2 0x197D PUSH2 0x50D9 JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH2 0x198C JUMPI SWAP1 POP PUSH2 0xB6 JUMP JUMPDEST PUSH2 0x1996 DUP6 DUP6 PUSH2 0x257E JUMP JUMPDEST DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x19B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19F2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x19DF PUSH2 0x5021 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x19D7 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0B PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xA SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP5 POP SWAP2 SWAP3 POP DUP4 SLT ISZERO PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A59 PUSH2 0x5101 JUMP JUMPDEST PUSH2 0x9D8 DUP3 TIMESTAMP PUSH2 0x259F JUMP JUMPDEST PUSH2 0x1A6B PUSH2 0x5065 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7A DUP5 PUSH2 0xFFFF AND PUSH2 0x2665 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0xB PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 DUP3 LT ISZERO PUSH2 0x1AC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15180 DUP3 PUSH2 0x99F JUMP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 DUP3 PUSH1 0x26 DUP2 GT ISZERO PUSH2 0x21C JUMPI INVALID JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1AED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x1B00 JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT PUSH2 0x1B13 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1B27 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1B39 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x1B4A JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x1B5A JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x1B6A JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x220 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ DUP1 PUSH2 0x1B97 JUMPI POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x1B97 JUMPI POP PUSH1 0x0 DUP3 SLT ISZERO JUMPDEST ISZERO PUSH2 0x1BA4 JUMPI POP PUSH1 0x0 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO DUP1 ISZERO PUSH2 0x1BB5 JUMPI POP DUP2 PUSH1 0x0 SLT JUMPDEST ISZERO PUSH2 0x1BC1 JUMPI POP DUP2 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO DUP1 ISZERO PUSH2 0x1BD2 JUMPI POP DUP3 PUSH1 0x0 SLT JUMPDEST ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE0 DUP3 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO DUP1 ISZERO PUSH2 0x1BF9 JUMPI POP PUSH1 0x0 DUP3 SGT ISZERO JUMPDEST ISZERO PUSH2 0x35 JUMPI PUSH2 0x1BE0 DUP4 DUP4 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x20 PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C48 DUP6 DUP6 DUP6 PUSH2 0x2682 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SLT ISZERO PUSH2 0x1C60 JUMPI DUP8 SWAP2 POP PUSH2 0x1C63 JUMP JUMPDEST POP DUP7 JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1CB2 SWAP3 SWAP2 SWAP1 PUSH2 0x52C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x1CD9 JUMPI POP DUP5 PUSH1 0x20 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0x1CF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x53C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D12 PUSH2 0x1D03 DUP6 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x1D0C DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP1 PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH2 0x86B DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP3 DUP5 DUP7 PUSH2 0x1D2C DUP12 PUSH2 0x277B JUMP JUMPDEST DUP11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1D47 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x27B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D58 JUMPI POP PUSH1 0x0 DUP5 PUSH1 0x60 ADD MLOAD SLT ISZERO JUMPDEST PUSH2 0x1D61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D84 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x3ED DUP7 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA9 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x3ED DUP7 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1DBD PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH2 0x1E06 JUMPI POP PUSH1 0x0 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 DUP6 DUP6 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E20 DUP3 DUP6 PUSH2 0x27CF JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 SGT ISZERO PUSH2 0x1E33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E3F DUP9 DUP4 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP9 SLT PUSH2 0x1E4F JUMPI DUP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1E5B DUP2 PUSH1 0x0 NOT PUSH2 0x1EC3 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E75 DUP9 DUP9 DUP9 PUSH2 0x1DB2 JUMP JUMPDEST SWAP1 POP DUP5 DUP7 GT PUSH2 0x1E85 JUMPI SWAP1 POP PUSH2 0x4BE JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1E9F JUMPI PUSH2 0x1E97 DUP5 DUP3 DUP9 DUP9 PUSH2 0x285B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC DUP6 DUP9 DUP9 PUSH2 0x28D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EBA DUP3 DUP9 DUP9 DUP5 PUSH2 0x1DF7 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SLT PUSH2 0x1ED2 JUMPI DUP2 PUSH2 0xB6 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EF1 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x1F22 DUP4 PUSH2 0x29BD JUMP JUMPDEST DUP2 SLOAD PUSH1 0xA SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB AND PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0x1F60 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT PUSH2 0x1F6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8C DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x3ED DUP6 DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x3ED DUP6 DUP8 PUSH1 0x40 ADD MLOAD PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x1FBF SWAP1 DUP5 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1FD3 SWAP1 DUP3 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x1FE7 SWAP1 DUP4 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0xB86 DUP5 PUSH2 0x29EE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2006 DUP8 DUP8 PUSH2 0xFFFF AND PUSH2 0x9A8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2012 PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP DUP1 PUSH2 0x204D DUP9 DUP11 PUSH2 0xA82 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x205B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2065 DUP6 DUP4 PUSH2 0x2A46 JUMP JUMPDEST ISZERO PUSH2 0x20E8 JUMPI DUP3 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 PUSH2 0x207F DUP10 DUP4 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x208A DUP2 PUSH2 0xE2A JUMP JUMPDEST DUP6 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR DUP6 SSTORE PUSH2 0x20B7 DUP14 DUP14 DUP14 DUP6 DUP6 PUSH2 0xE58 JUMP JUMPDEST DUP1 PUSH2 0x20CB JUMPI PUSH2 0x20C8 DUP8 DUP6 PUSH1 0x0 PUSH2 0xB8D JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH2 0x20DA DUP14 DUP14 PUSH2 0xFFFF AND DUP10 PUSH2 0x2A76 JUMP JUMPDEST SWAP7 POP PUSH2 0x2CC SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP7 ISZERO PUSH2 0x2142 JUMPI PUSH2 0x20F7 DUP8 PUSH2 0xE2A JUMP JUMPDEST DUP4 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR DUP4 SSTORE PUSH2 0x2125 DUP12 DUP12 DUP12 PUSH1 0x0 DUP12 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0x2131 DUP6 DUP4 PUSH1 0x1 PUSH2 0xB8D JUMP JUMPDEST SWAP5 POP PUSH2 0x2142 DUP12 DUP12 PUSH2 0xFFFF AND DUP8 PUSH2 0x2A76 JUMP JUMPDEST POP SWAP5 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD MLOAD DUP2 LT PUSH2 0x215F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD GT PUSH2 0x2170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2182 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2199 JUMPI INVALID JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21A9 JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0x21C7 JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21C4 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP4 ADD DUP1 MLOAD PUSH1 0x0 NOT ADD SWAP1 MSTORE PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x2243 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x21FD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP3 DUP2 PUSH1 0x80 ADD MLOAD GT DUP1 ISZERO PUSH2 0x222A JUMPI POP PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2227 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x223A JUMPI DUP1 PUSH1 0x80 ADD MLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x21E1 JUMP JUMPDEST POP DUP2 DUP5 EQ ISZERO PUSH2 0x225C JUMPI POP POP PUSH1 0x2 PUSH1 0xA0 SWAP2 SWAP1 SWAP2 ADD MSTORE PUSH2 0x229D JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x226E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 DUP6 DUP2 ADD DUP1 MLOAD SWAP2 DUP4 ADD DUP1 MLOAD SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x1 PUSH1 0xA0 SWAP2 DUP3 ADD MSTORE PUSH1 0x2 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP POP JUMPDEST POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0xFFFF AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x22BE JUMPI POP DUP2 MLOAD PUSH2 0x3FFF PUSH2 0xFFFF SWAP1 SWAP2 AND GT ISZERO JUMPDEST PUSH2 0x22C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x22E4 JUMPI POP PUSH1 0x20 DUP3 ADD MLOAD PUSH5 0xFFFFFFFFFF LT ISZERO JUMPDEST PUSH2 0x22ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x2306 JUMPI POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x8 LT ISZERO JUMPDEST PUSH2 0x230F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF NOT SGT DUP1 ISZERO SWAP1 PUSH2 0x233E JUMPI POP PUSH1 0x60 DUP3 ADD MLOAD PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF SLT ISZERO JUMPDEST PUSH2 0x2347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 SWAP1 SWAP6 ADD MLOAD PUSH1 0xA SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB AND PUSH1 0x1 PUSH1 0x40 SHL MUL PUSH19 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000 NOT PUSH1 0xFF SWAP1 SWAP7 AND PUSH1 0x1 PUSH1 0x38 SHL MUL PUSH8 0xFF00000000000000 NOT PUSH5 0xFFFFFFFFFF SWAP1 SWAP4 AND PUSH3 0x10000 MUL PUSH7 0xFFFFFFFFFF0000 NOT PUSH2 0xFFFF SWAP1 SWAP7 AND PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x23E7 DUP9 PUSH2 0x2AD0 JUMP JUMPDEST SWAP1 POP DUP5 ISZERO DUP1 PUSH2 0x23F5 JUMPI POP DUP1 DUP6 GT JUMPDEST ISZERO PUSH2 0x23FE JUMPI DUP1 SWAP5 POP JUMPDEST DUP7 DUP1 PUSH2 0x240E JUMPI POP PUSH1 0x0 DUP9 PUSH1 0x60 ADD MLOAD SLT JUMPDEST SWAP7 POP PUSH2 0xFFFF DUP7 AND ISZERO PUSH2 0x241F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP5 MLOAD SWAP4 SWAP6 PUSH1 0xF0 SWAP5 SWAP1 SWAP5 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT AND PUSH1 0x10 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP4 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0xD PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x247A DUP10 DUP9 DUP9 DUP9 DUP9 PUSH2 0x2B37 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0x24DB JUMPI PUSH1 0x0 PUSH2 0x2493 DUP11 PUSH2 0x2C77 JUMP JUMPDEST SWAP1 POP PUSH2 0x24B7 DUP2 DUP12 PUSH1 0x40 ADD MLOAD DUP13 PUSH1 0x60 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD DUP15 PUSH1 0xC0 ADD MLOAD DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x2C7B JUMP JUMPDEST DUP8 MLOAD PUSH2 0x24C3 SWAP1 DUP4 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x24D9 DUP10 DUP10 PUSH1 0x0 ADD MLOAD DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP9 DUP8 PUSH2 0x2DC6 JUMP JUMPDEST POP JUMPDEST POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x24F1 JUMPI PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24FD DUP5 DUP5 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x250C JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND CALLER PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP5 PUSH2 0x2546 DUP8 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2554 SWAP3 SWAP2 SWAP1 PUSH2 0x5484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x2 PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x11 PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x258A DUP4 DUP4 PUSH2 0x2EDC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x6 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x25A7 PUSH2 0x5101 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B2 DUP5 PUSH2 0x2EF4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x25F1 JUMPI PUSH1 0x0 DUP1 PUSH2 0x25CC DUP7 PUSH2 0x2FBE JUMP JUMPDEST SWAP1 POP PUSH2 0x25DA DUP7 DUP5 DUP4 DUP9 PUSH2 0x303B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x25EA DUP7 DUP4 DUP6 PUSH2 0x30DF JUMP JUMPDEST POP POP PUSH2 0x25FE JUMP JUMPDEST DUP1 MLOAD DUP4 EQ PUSH2 0x25FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x262C PUSH2 0x2627 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x333C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x264F PUSH2 0x2627 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xE0 ADD MLOAD PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2670 PUSH2 0x3352 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE DUP3 SWAP2 PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x26B6 DUP8 DUP8 PUSH2 0x2E9D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x26C6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x40 SHL DUP2 OR DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x26E6 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x271F DUP7 PUSH2 0x2EBB JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x272C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x2741 DUP7 PUSH2 0x2EBB JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x274E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 ADD MLOAD PUSH2 0x12C PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x279E DUP6 PUSH2 0x987 JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x27B0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x335F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x9D8 JUMPI POP POP PUSH1 0x8 LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x27F2 PUSH2 0x27ED PUSH4 0x1DA9C00 PUSH2 0x27E7 DUP7 DUP9 PUSH2 0x3315 JUMP JUMPDEST SWAP1 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x33B5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2804 DUP2 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x33D3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2817 PUSH2 0x2812 DUP3 PUSH2 0x3426 JUMP JUMPDEST PUSH2 0x3448 JUMP JUMPDEST SWAP1 POP PUSH2 0x2829 DUP2 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x349D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2836 DUP3 PUSH2 0x34D3 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x2851 DUP5 DUP5 PUSH2 0xD95 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x286A JUMPI POP PUSH1 0x0 PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 SGT PUSH2 0x2883 JUMPI PUSH2 0x287E DUP7 DUP6 DUP6 PUSH2 0x34DC JUMP JUMPDEST PUSH2 0x288E JUMP JUMPDEST PUSH2 0x288E DUP7 DUP6 DUP6 PUSH2 0x3518 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 SGT ISZERO PUSH2 0x28A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28AD DUP7 DUP4 PUSH2 0x2842 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 SLT PUSH2 0x28BD JUMPI DUP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH2 0x28C9 DUP2 PUSH1 0x0 NOT PUSH2 0x1EC3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x28E8 DUP7 PUSH1 0x20 ADD MLOAD DUP7 DUP7 PUSH2 0x3559 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x28F7 DUP8 PUSH2 0x277B JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x2917 JUMPI DUP7 MLOAD PUSH2 0x2910 SWAP1 PUSH2 0xFFFF AND DUP8 DUP4 DUP9 PUSH2 0x35E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x29B3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2922 DUP7 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2939 PUSH2 0x2932 DUP7 PUSH2 0x9DE JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2951 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP4 DUP7 DUP12 PUSH2 0x35E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 EQ ISZERO PUSH2 0x296F JUMPI POP POP PUSH1 0x40 DUP1 DUP12 ADD MLOAD ADD MLOAD DUP9 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x2985 PUSH2 0x297E PUSH1 0x1 DUP11 SUB PUSH2 0x9DE JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH2 0x299B DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP3 DUP9 DUP14 PUSH2 0x35E0 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x29AB DUP2 DUP6 DUP5 DUP7 DUP16 PUSH2 0x367F JUMP JUMPDEST SWAP9 POP POP POP POP POP POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0xE4B JUMPI POP PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29F9 DUP3 PUSH2 0x2C77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x18 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH2 0x2A38 DUP3 DUP5 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x60 ADD MLOAD DUP7 PUSH1 0xA0 ADD MLOAD DUP6 PUSH4 0xFFFFFFFF AND DUP9 PUSH1 0xE0 ADD MLOAD PUSH2 0x2C7B JUMP JUMPDEST PUSH2 0x1298 DUP3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x36DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x2A5B JUMPI POP PUSH2 0x100 DUP3 GT ISZERO JUMPDEST PUSH2 0x2A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 NOT ADD SHL PUSH1 0x1 PUSH1 0xFF SHL SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x14 PUSH2 0x2A81 DUP3 PUSH2 0xBD8 JUMP JUMPDEST GT ISZERO PUSH2 0x2A9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x53A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AA9 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 DUP3 MSTORE SWAP4 SWAP1 SWAP5 MSTORE POP SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 ADD MLOAD GT DUP1 ISZERO PUSH2 0x2AEA JUMPI POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x8 LT ISZERO JUMPDEST PUSH2 0x2AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 LT PUSH2 0x2B0A JUMPI POP PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B1C PUSH1 0x1 DUP5 PUSH1 0x40 ADD MLOAD SUB PUSH2 0x9DE JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0xB6 SWAP1 PUSH3 0x76A700 SWAP1 PUSH2 0x1D0C SWAP1 DUP5 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x2B48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP9 PUSH1 0x40 ADD MLOAD SGT PUSH2 0x2B61 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP9 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x3726 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B90 DUP11 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x3740 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2BA5 DUP6 DUP15 DUP15 DUP8 DUP16 DUP16 PUSH2 0x376D JUMP JUMPDEST SWAP9 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 PUSH2 0x2BC8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x40 DUP14 ADD MLOAD PUSH2 0x2BD7 SWAP1 DUP13 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MSTORE PUSH2 0x2BE6 DUP5 DUP4 PUSH2 0x125B JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x2BFA PUSH1 0x0 DUP16 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x384C JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 GT ISZERO PUSH2 0x2C1E JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2A DUP8 DUP4 PUSH2 0x3889 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C48 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0x2C6C JUMP JUMPDEST PUSH1 0xA0 DUP16 ADD MSTORE POP PUSH1 0x40 DUP13 ADD MLOAD PUSH2 0x2C61 SWAP1 DUP15 SWAP1 DUP6 DUP6 DUP6 PUSH2 0x393C JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 SLT ISZERO DUP1 ISZERO PUSH2 0x2C93 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 SGT ISZERO JUMPDEST PUSH2 0x2C9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SLT ISZERO DUP1 ISZERO PUSH2 0x2CB4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 SGT ISZERO JUMPDEST PUSH2 0x2CBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x2CD1 JUMPI POP PUSH4 0xFFFFFFFF DUP4 GT ISZERO JUMPDEST PUSH2 0x2CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x2CEE JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP6 DUP7 AND OR PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x2D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2DAB PUSH2 0xFEE DUP5 PUSH2 0x1A00 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DB7 DUP2 DUP4 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP PUSH2 0x1298 PUSH2 0xFEE DUP5 DUP4 PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD0 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x2DF8 PUSH2 0x172D JUMP JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x2E22 DUP6 DUP6 PUSH2 0x125B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCCB2D5ED DUP11 DUP5 DUP5 PUSH2 0x2E3F DUP10 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5261 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF25 DUP3 DUP11 DUP11 DUP11 DUP11 PUSH2 0x24E7 JUMP JUMPDEST PUSH8 0xFFFF000000000000 PUSH1 0x30 DUP4 SWAP1 SHL AND PUSH1 0x8 DUP3 SWAP1 SHL OR PUSH1 0x1 OR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x2ED5 JUMPI PUSH2 0x2ECE DUP3 PUSH2 0x173A JUMP JUMPDEST SWAP1 POP PUSH2 0x220 JUMP JUMPDEST POP DUP1 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x2EE9 DUP5 DUP5 PUSH2 0x3991 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA9 DUP3 PUSH2 0x3AB3 JUMP JUMPDEST PUSH2 0x2EFC PUSH2 0x5122 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F06 PUSH2 0x3C74 JUMP JUMPDEST PUSH2 0xFFFF SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP7 MSTORE PUSH6 0x10000000000 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP1 DUP2 AND SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL DUP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12C MUL SWAP1 SWAP3 AND PUSH2 0x100 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2FCA DUP4 PUSH2 0x3C81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xEF81F216 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3003 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3017 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x5204 JUMP JUMPDEST PUSH2 0x3043 PUSH2 0x5122 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3053 DUP9 DUP7 DUP10 PUSH2 0x3CB1 JUMP JUMPDEST PUSH1 0xC0 DUP12 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP11 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP10 ADD MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x3077 SWAP1 DUP4 PUSH2 0x2769 JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x30A5 JUMPI PUSH1 0x80 DUP9 ADD MLOAD PUSH2 0x30A2 SWAP1 PUSH2 0x309C DUP10 DUP3 PUSH2 0x2453 JUMP JUMPDEST SWAP1 PUSH2 0x3DBC JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x30C5 PUSH2 0x30BA PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x2769 JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MLOAD SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE POP POP PUSH1 0x80 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE POP POP DUP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E9 PUSH2 0x3C74 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x310D DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x3DF6 JUMP JUMPDEST DUP2 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x3132 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x3165 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x319A DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x1C24 JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x31CF DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x3E0A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH6 0x10000000000 MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFF0000000000 NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x320B SWAP1 PUSH2 0x3E0A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x323F SWAP1 PUSH2 0x3E0A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x3277 SWAP1 PUSH2 0x3E20 JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xD8 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE DUP3 ISZERO PUSH2 0x32C3 JUMPI PUSH1 0x0 PUSH2 0x32A8 DUP5 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP PUSH2 0x32B4 DUP6 DUP3 PUSH2 0x2D8F JUMP JUMPDEST PUSH2 0x32C1 PUSH2 0xFEE DUP7 DUP4 PUSH2 0x3E33 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH32 0xEF25641E225E493886510CA1AD6584FA7B442B9FEA820A29D1DE3CE27D270FD2 DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x3307 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3324 JUMPI POP PUSH1 0x0 PUSH2 0x9D8 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x3331 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x9 PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x336C DUP8 DUP8 DUP8 DUP7 DUP6 PUSH2 0x3EBD JUMP JUMPDEST PUSH2 0x3385 DUP8 PUSH1 0xE0 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP6 DUP9 PUSH2 0x3F77 JUMP JUMPDEST PUSH1 0xC0 SWAP1 SWAP8 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x33A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x33AD JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x7FFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x33CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ ISZERO PUSH2 0x33E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0x40 DUP6 PUSH1 0xF SIGNEXTEND SWAP1 SHL DUP2 PUSH2 0x33FB JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x341D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF DUP3 SWAP1 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT EQ ISZERO PUSH2 0x3441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x345D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x347A JUMPI POP PUSH1 0x0 PUSH2 0x220 JUMP JUMPDEST PUSH2 0x9D8 PUSH1 0x80 DUP4 PUSH1 0xF SIGNEXTEND PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 MUL SWAP1 SAR PUSH2 0x3FFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x341D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x40 SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x34EA DUP6 DUP6 DUP6 PUSH2 0x4AB4 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x350A JUMPI PUSH2 0x3505 PUSH2 0x34FF DUP6 DUP6 PUSH2 0x2453 JUMP JUMPDEST DUP3 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3526 DUP6 DUP6 DUP6 PUSH2 0x4B04 JUMP JUMPDEST SWAP1 POP PUSH2 0x3535 PUSH2 0x34FF DUP6 DUP6 PUSH2 0x2453 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x3542 DUP7 PUSH2 0x4B45 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH2 0x3550 JUMPI DUP1 SWAP3 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT PUSH2 0x3569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP6 GT ISZERO PUSH2 0x3577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3582 DUP5 PUSH2 0x987 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP7 DUP2 GT PUSH2 0x35DA JUMPI PUSH1 0x0 PUSH2 0x35A3 PUSH2 0x359C DUP4 PUSH2 0x9DE JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 EQ ISZERO PUSH2 0x35BB JUMPI POP SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2761 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 GT ISZERO PUSH2 0x35D1 JUMPI POP SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x2761 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3587 JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x35EB PUSH2 0x4B60 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x35FC DUP6 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND DUP2 PUSH2 0x3663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9 SWAP1 PUSH2 0x52F5 JUMP JUMPDEST PUSH2 0x3670 DUP2 DUP5 DUP5 DUP13 DUP13 PUSH2 0x3F77 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 LT PUSH2 0x368D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP3 LT PUSH2 0x3699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 LT PUSH2 0x36BF JUMPI PUSH2 0x36B8 DUP5 PUSH2 0x1D0C DUP9 DUP9 SUB PUSH2 0x27E7 DUP4 DUP9 SUB DUP12 DUP9 SUB PUSH2 0x3315 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x36B8 PUSH2 0x36D6 DUP8 DUP8 SUB PUSH2 0x27E7 DUP7 DUP9 SUB DUP11 DUP8 SUB PUSH2 0x3315 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO DUP1 ISZERO PUSH2 0x36F5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0x36FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x372E PUSH2 0x516E JUMP JUMPDEST PUSH2 0xB6 DUP4 DUP4 PUSH2 0x373B PUSH2 0x4B6D JUMP JUMPDEST PUSH2 0x4B7A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1237 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x3ED DUP7 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0xD95 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3784 DUP8 DUP12 PUSH1 0x40 ADD MLOAD DUP11 PUSH2 0x384C JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 GT ISZERO PUSH2 0x37A6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0x383F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B2 DUP13 DUP4 PUSH2 0x3889 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x37D2 PUSH2 0x37CD PUSH2 0x37C6 DUP5 DUP12 PUSH2 0x4BD1 JUMP JUMPDEST DUP12 SWAP1 PUSH2 0x4C37 JUMP JUMPDEST PUSH2 0x173A JUMP JUMPDEST SWAP1 POP PUSH2 0x37E2 DUP14 DUP4 PUSH1 0x0 DUP13 SLT PUSH2 0x4C50 JUMP JUMPDEST SWAP4 POP PUSH2 0x37F4 PUSH2 0x37CD PUSH2 0x37C6 DUP7 DUP12 PUSH2 0x4BD1 JUMP JUMPDEST SWAP7 POP DUP1 DUP8 SGT ISZERO PUSH2 0x3803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x380F DUP3 DUP10 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP PUSH2 0x3829 PUSH1 0x64 PUSH2 0x3ED PUSH2 0x3822 DUP16 PUSH2 0x4CC8 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0xD95 JUMP JUMPDEST SWAP6 POP PUSH2 0x3838 PUSH2 0x37CD DUP10 DUP9 PUSH2 0x125B JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x385B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x3869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1253 PUSH2 0xED2 PUSH2 0x3879 DUP5 DUP7 PUSH2 0x125B JUMP JUMPDEST PUSH2 0x3883 DUP7 DUP9 PUSH2 0x1271 JUMP JUMPDEST SWAP1 PUSH2 0x4C37 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x80 ADD MLOAD GT PUSH2 0x389B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT ISZERO PUSH2 0x38AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP3 GT PUSH2 0x38CB JUMPI DUP3 MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x1BE0 SWAP2 SWAP1 PUSH2 0x27E7 SWAP1 DUP6 SWAP1 PUSH2 0x3315 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 GT PUSH2 0x3903 JUMPI PUSH1 0x40 DUP4 ADD MLOAD DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x1BE0 SWAP4 SWAP3 PUSH2 0x1D0C SWAP3 DUP2 SWAP1 SUB SWAP2 PUSH2 0x27E7 SWAP2 DUP9 SUB SWAP1 DUP6 SWAP1 SUB PUSH2 0x3315 JUMP JUMPDEST PUSH2 0xB6 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x1D0C DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0x3B9ACA00 SUB PUSH2 0x27E7 DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD SUB DUP9 PUSH1 0x20 ADD MLOAD DUP9 SUB PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x394A DUP8 DUP7 PUSH2 0x1213 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x395C SWAP1 DUP3 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x0 PUSH2 0x3973 DUP9 DUP7 PUSH2 0x1213 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3981 DUP10 DUP10 PUSH2 0x1213 JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP1 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x39A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x39AE PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH1 0xFF DUP6 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x39E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A1D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3A0A PUSH2 0x5021 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3A02 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 PUSH1 0xFF AND DUP2 LT ISZERO PUSH2 0x3AA9 JUMPI PUSH1 0x0 DUP4 DUP3 PUSH1 0x8 DUP2 LT PUSH2 0x3A3C JUMPI INVALID JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3A4D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP4 SLOAD PUSH2 0xFFFF DUP2 AND DUP3 MSTORE PUSH5 0xFFFFFFFFFF PUSH3 0x10000 DUP3 DIV AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0x38 SHL DUP4 DIV AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV PUSH1 0xA SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 ADD PUSH2 0x3A23 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3ACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AF9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B56 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3B15 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x3B36 DUP2 PUSH1 0x0 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x4CD5 JUMP JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3B42 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x3AFF JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C6D JUMPI DUP1 JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x3B9C JUMPI POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3B7B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3B92 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT JUMPDEST ISZERO PUSH2 0x3C64 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3BAD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3BC4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP5 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3BDB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3BEE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3C0B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3C22 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x1 DUP5 SUB DUP2 MLOAD DUP2 LT PUSH2 0x3C39 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3C4C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH1 0x0 NOT ADD PUSH2 0x3B64 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x3B5A JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x1D PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C8C PUSH2 0x4CFE JUMP JUMPDEST PUSH2 0xFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x3CC4 DUP10 DUP9 PUSH2 0x4D0B JUMP JUMPDEST DUP10 MLOAD SWAP1 SWAP6 POP SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3CEB SWAP1 PUSH2 0x3CE0 SWAP1 DUP12 SWAP1 PUSH2 0x2453 JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x3315 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D25 PUSH2 0x3D1A PUSH4 0x1DA9C00 PUSH2 0x3D02 DUP6 DUP6 PUSH2 0x3315 JUMP JUMPDEST DUP2 PUSH2 0x3D09 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 DIV PUSH2 0x2769 JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST SWAP7 POP PUSH2 0x3D47 PUSH2 0x3D3C PUSH4 0x1DA9C00 PUSH2 0x3D02 DUP8 DUP6 PUSH2 0x3315 JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST SWAP6 POP DUP2 DUP4 EQ ISZERO PUSH2 0x3D5E JUMPI POP PUSH1 0x0 SWAP4 POP PUSH2 0x3DB3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D80 PUSH2 0x3D75 PUSH4 0x1DA9C00 PUSH2 0x3D02 DUP8 DUP7 PUSH2 0x3315 JUMP JUMPDEST PUSH1 0xE0 DUP12 ADD MLOAD SWAP1 PUSH2 0x3DD9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3D8E DUP10 DUP4 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DAB DUP9 PUSH2 0x27E7 DUP4 DUP14 PUSH1 0x40 ADD MLOAD PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x3DD3 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3315 JUMP JUMPDEST DUP4 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x3DE8 DUP5 DUP5 PUSH2 0x3315 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0xE54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E3D PUSH2 0x1720 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xAD1C095D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xAD1C095D SWAP1 PUSH2 0x3E85 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x52AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC7 PUSH2 0x4B60 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 DUP11 MSTORE SWAP1 DUP10 ADD DUP8 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP3 AND SWAP4 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x50 SHL DUP2 DIV SWAP1 SWAP3 AND PUSH1 0x60 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL DUP4 DIV DUP2 AND PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 SWAP2 POP DUP1 DUP5 ISZERO PUSH2 0x3F66 JUMPI PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x3EB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP10 ADD MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x3F85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0x3F94 JUMPI POP DUP4 PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA0 DUP4 DUP9 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x3FB3 JUMPI DUP6 SWAP2 POP POP PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBF DUP3 DUP7 PUSH2 0x4DA6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FD1 PUSH4 0x3B9ACA00 DUP4 PUSH2 0x2453 JUMP JUMPDEST SWAP1 POP PUSH2 0x3FF2 PUSH4 0x3B9ACA00 PUSH2 0x27E7 PUSH2 0x3FE8 DUP11 DUP6 PUSH2 0x3315 JUMP JUMPDEST PUSH2 0x1D0C DUP13 DUP8 PUSH2 0x3315 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x4014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x4031 JUMPI POP PUSH1 0x0 PUSH2 0x220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7F SHL PUSH1 0x0 PUSH8 0x8000000000000000 DUP5 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4063 JUMPI PUSH17 0x16A09E667F3BCC908B2FB1366EA957D3E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x4000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4090 JUMPI PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x2000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x40BD JUMPI PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x1000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x40EA JUMPI PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x800000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4117 JUMPI PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x400000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4144 JUMPI PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x200000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4171 JUMPI PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x38 SHL AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x419A JUMPI PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x80000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x41C6 JUMPI PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x40000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x41F2 JUMPI PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x20000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x421E JUMPI PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x10000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x424A JUMPI PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x8000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4276 JUMPI PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x4000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x42A2 JUMPI PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x2000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x42CE JUMPI PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x1000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x42FA JUMPI PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x800000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4325 JUMPI PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x400000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4350 JUMPI PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x200000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x437B JUMPI PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x100000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x43A6 JUMPI PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x80000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x43D1 JUMPI PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x40000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x43FC JUMPI PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x20000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4427 JUMPI PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x10000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4452 JUMPI PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x8000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x447C JUMPI PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x4000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x44A6 JUMPI PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x2000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x44D0 JUMPI PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x1000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x44FA JUMPI PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x800000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4524 JUMPI PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x400000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x454E JUMPI PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x200000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4578 JUMPI PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x100000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x45A2 JUMPI PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x80000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x45CB JUMPI PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x40000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x45F4 JUMPI PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x20000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x461D JUMPI PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x10000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4646 JUMPI PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x8000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x466F JUMPI PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x4000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4698 JUMPI PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x2000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x46C1 JUMPI PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x1000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x46EA JUMPI PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x800000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4712 JUMPI PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x400000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x473A JUMPI PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x200000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4762 JUMPI PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x100000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x478A JUMPI PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x80000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x47B2 JUMPI PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x40000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x47DA JUMPI PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x20000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4802 JUMPI PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x10000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x482A JUMPI PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x8000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4851 JUMPI PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4878 JUMPI PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x2000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x489F JUMPI PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x1000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x48C6 JUMPI PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x800 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x48ED JUMPI PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x400 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4914 JUMPI PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x200 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x493B JUMPI PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x100 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4962 JUMPI PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4988 JUMPI PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x49AE JUMPI PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x49D4 JUMPI PUSH17 0x100000000000000162E42FEFA39EF366F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x10 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x49FA JUMPI PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x8 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4A20 JUMPI PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4A46 JUMPI PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4A6C JUMPI PUSH17 0x1000000000000000162E42FEFA39EF358 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x4A92 JUMPI PUSH17 0x10000000000000000B17217F7D1CF79AB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0xF DUP4 DUP2 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x3F SUB SWAP1 SIGNEXTEND SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AC1 DUP5 DUP5 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4ACE DUP6 PUSH2 0x4DB9 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT PUSH2 0x4AE1 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xB6 JUMP JUMPDEST DUP1 DUP3 SUB SWAP2 POP PUSH1 0x0 PUSH2 0x4AF1 DUP7 PUSH2 0x4DC6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x3550 JUMPI SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B11 DUP5 DUP5 DUP5 PUSH2 0x28D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x4B26 PUSH2 0x4B1F DUP6 PUSH2 0x4DD3 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x2769 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4B33 DUP6 PUSH2 0x4DE0 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x258A JUMPI SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH3 0x7A120 PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL PUSH4 0x3B9ACA00 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0xA PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x1B PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x4B82 PUSH2 0x516E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B8D DUP5 PUSH2 0x4DED JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH1 0x4 DUP7 LT PUSH2 0x4BB3 JUMPI PUSH1 0x1 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0x4BC3 JUMPI INVALID JUMPDEST ADD SLOAD SWAP1 POP PUSH2 0x4BE DUP3 DUP3 PUSH2 0x4E26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4BE9 PUSH2 0x27ED PUSH4 0x1DA9C00 PUSH2 0x27E7 DUP8 DUP8 PUSH2 0x3315 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4BFD DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x33D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C0A DUP3 PUSH2 0x3448 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4C1E DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x349D JUMP JUMPDEST SWAP1 POP PUSH2 0x4C29 DUP2 PUSH2 0x34D3 JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x4C4A DUP5 PUSH4 0x3B9ACA00 PUSH2 0xD95 JUMP JUMPDEST DUP4 PUSH2 0xDE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C6F PUSH1 0x64 PUSH2 0x27E7 DUP8 PUSH1 0xE0 ADD MLOAD DUP8 PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xA0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x4C84 JUMPI POP PUSH1 0xA0 DUP5 ADD MLOAD JUMPDEST DUP5 PUSH1 0xC0 ADD MLOAD DUP2 GT ISZERO PUSH2 0x4C97 JUMPI POP PUSH1 0xC0 DUP5 ADD MLOAD JUMPDEST DUP3 ISZERO PUSH2 0x4CAE JUMPI PUSH2 0x4CA7 DUP5 DUP3 PUSH2 0x2769 JUMP JUMPDEST SWAP2 POP PUSH2 0x258A JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x4CBD JUMPI DUP1 DUP5 SUB PUSH2 0x2CC JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH1 0x18 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH8 0xFFFF000000000000 PUSH1 0x30 DUP5 SWAP1 SHL AND PUSH6 0xFFFFFFFFFF00 PUSH1 0x8 DUP5 SWAP1 SHL AND OR PUSH1 0xFF DUP3 AND OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9D8 PUSH1 0x1F PUSH2 0x1ACF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x4D58 JUMPI PUSH2 0x4D55 PUSH2 0x4D3C DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x3315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0x4D4F SWAP2 PUSH2 0x3315 JUMP JUMPDEST SWAP1 PUSH2 0x4DA6 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4D63 DUP8 PUSH2 0x4F45 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D6F DUP2 DUP4 PUSH2 0x3889 JUMP JUMPDEST SWAP5 POP DUP2 ISZERO PUSH2 0x4D86 JUMPI PUSH2 0x4D83 DUP2 DUP7 PUSH1 0x1 PUSH2 0x4C50 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x4D9D JUMPI PUSH2 0x4D9A DUP6 DUP4 PUSH2 0x4F78 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x3DD3 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x3315 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH1 0x20 PUSH2 0x4F91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH1 0x48 PUSH2 0x4F91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH1 0x28 PUSH2 0x4F91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH1 0x30 PUSH2 0x4F91 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 LT PUSH2 0x4DFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP3 GT ISZERO PUSH2 0x4E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x4E1B JUMPI PUSH1 0x4 DUP3 SUB PUSH2 0x4E1D JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x8 MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4E2E PUSH2 0x516E JUMP JUMPDEST PUSH1 0x64 PUSH4 0x3B9ACA00 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x20 DUP2 LT PUSH2 0x4E44 JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x4E4D JUMPI INVALID JUMPDEST DIV DUP2 MSTORE PUSH1 0x64 PUSH4 0x3B9ACA00 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x1 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4E69 JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x4E72 JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x4E97 DUP3 PUSH1 0x2 DUP6 PUSH1 0xFF AND ADD PUSH1 0x20 DUP2 LT PUSH2 0x4E91 JUMPI INVALID JUMPDEST BYTE PUSH2 0x4FA4 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x3 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4EB4 JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x4EBD JUMPI INVALID JUMPDEST DIV PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x100 SWAP1 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x4 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4EDE JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x4EE7 JUMPI INVALID JUMPDEST DIV PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x7A120 DUP3 PUSH1 0xFF DUP6 AND PUSH1 0x5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4F03 JUMPI INVALID JUMPDEST BYTE MUL PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x2625A0 DUP3 PUSH1 0xFF DUP6 AND PUSH1 0x6 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4F20 JUMPI INVALID JUMPDEST BYTE MUL PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0xFF DUP5 AND PUSH1 0x7 ADD PUSH1 0x20 DUP2 LT PUSH2 0x4F39 JUMPI INVALID JUMPDEST BYTE PUSH1 0xE0 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F4D PUSH2 0x516E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F57 PUSH2 0x4B6D JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0xB6 SWAP1 DUP3 PUSH2 0x4E26 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6 PUSH2 0x4F87 DUP5 DUP5 PUSH2 0x3315 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x3396 JUMP JUMPDEST PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0xFF SWAP2 SHR AND PUSH3 0x2625A0 MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x96 LT PUSH2 0x4FBF JUMPI PUSH1 0xFF DUP3 AND PUSH3 0x2625A0 MUL PUSH2 0x9D8 JUMP JUMPDEST POP PUSH1 0x95 NOT PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND ADD PUSH3 0xE4E1C0 MUL PUSH4 0x165A0BC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x4FEB PUSH2 0x5065 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4FF8 PUSH2 0x50D9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5060 JUMPI INVALID JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x5084 PUSH2 0x5101 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51C7 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x51DD JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x51F3 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5216 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5256 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x523A JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x52DA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x5227 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2CC DUP2 DUP6 PUSH2 0x5227 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x14995C5D5A5C995CC81CD95D1D1B195B595B9D PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x43616E6E6F742072656465656D PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820617373657473 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081B585C9AD95D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x526573696475616C73 PUSH1 0xB8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x43616E6E6F742072656465656D20746F207A65726F PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742072656465656D207669612062617463682C2072657369647561 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 LOG4 PUSH32 0x105E7617863D0E700A7B51B06E6A5478B7B6AB6939A5841B650821717E64736F PUSH13 0x63430007060033000000000000 ", "sha1": "b187c094b27984814f5397057675f01024c99341", "source": "// SPDX-License-Identifier: BSUL-1.1\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport {\n    BalanceState,\n    CashGroupParameters,\n    MarketParameters,\n    nTokenPortfolio,\n    PortfolioState,\n    PortfolioAsset,\n    ifCashStorage,\n    AssetStorageState\n} from \"../../global/Types.sol\";\nimport {Constants} from \"../../global/Constants.sol\";\nimport {LibStorage} from \"../../global/LibStorage.sol\";\nimport {SafeInt256} from \"../../math/SafeInt256.sol\";\nimport {SafeUint256} from \"../../math/SafeUint256.sol\";\nimport {Bitmap} from \"../../math/Bitmap.sol\";\n\nimport {Emitter} from \"../../internal/Emitter.sol\";\nimport {Market} from \"../../internal/markets/Market.sol\";\nimport {DateTime} from \"../../internal/markets/DateTime.sol\";\nimport {CashGroup} from \"../../internal/markets/CashGroup.sol\";\nimport {nTokenHandler} from \"../../internal/nToken/nTokenHandler.sol\";\nimport {nTokenCalculations} from \"../../internal/nToken/nTokenCalculations.sol\";\nimport {PortfolioHandler} from \"../../internal/portfolio/PortfolioHandler.sol\";\nimport {TransferAssets} from \"../../internal/portfolio/TransferAssets.sol\";\nimport {BitmapAssetsHandler} from \"../../internal/portfolio/BitmapAssetsHandler.sol\";\nimport {BalanceHandler} from \"../../internal/balances/BalanceHandler.sol\";\nimport {PrimeCashExchangeRate} from \"../../internal/pCash/PrimeCashExchangeRate.sol\";\n\nlibrary nTokenRedeemAction {\n    using SafeInt256 for int256;\n    using SafeUint256 for uint256;\n    using Bitmap for bytes32;\n    using BalanceHandler for BalanceState;\n    using Market for MarketParameters;\n    using CashGroup for CashGroupParameters;\n    using PortfolioHandler for PortfolioState;\n    using nTokenHandler for nTokenPortfolio;\n\n    /// @notice When redeeming nTokens via the batch they must all be sold to cash and this\n    /// method will return the amount of asset cash sold.\n    /// @param currencyId the currency associated the nToken\n    /// @param tokensToRedeem the amount of nTokens to convert to cash\n    /// @return amount of asset cash to return to the account, denominated in internal token decimals\n    function nTokenRedeemViaBatch(address account, uint16 currencyId, int256 tokensToRedeem)\n        external\n        returns (int256)\n    {\n        (int256 totalPrimeCash, PortfolioAsset[] memory newifCashAssets) = _redeem({\n            account: account, currencyId: currencyId, tokensToRedeem: tokensToRedeem,\n            sellTokenAssets: true,\n            acceptResidualAssets: false\n        });\n\n        require(newifCashAssets.length == 0, \"Cannot redeem via batch, residual\");\n        return totalPrimeCash;\n    }\n\n    function _redeem(\n        address account,\n        uint16 currencyId,\n        int256 tokensToRedeem,\n        bool sellTokenAssets,\n        bool acceptResidualAssets\n    ) internal returns (int256, PortfolioAsset[] memory) {\n        require(tokensToRedeem > 0);\n        nTokenPortfolio memory nToken;\n        nToken.loadNTokenPortfolioStateful(currencyId);\n        // nTokens cannot be redeemed during the period of time where they require settlement.\n        require(nToken.getNextSettleTime() > block.timestamp, \"Requires settlement\");\n        require(tokensToRedeem < nToken.totalSupply, \"Cannot redeem\");\n        PortfolioAsset[] memory newifCashAssets;\n\n        // Get the ifCash bits that are idiosyncratic\n        bytes32 ifCashBits = nTokenCalculations.getNTokenifCashBits(\n            nToken.tokenAddress,\n            currencyId,\n            nToken.lastInitializedTime,\n            block.timestamp,\n            nToken.cashGroup.maxMarketIndex\n        );\n\n        if (ifCashBits != 0 && acceptResidualAssets) {\n            // This will remove all the ifCash assets proportionally from the account\n            newifCashAssets = _reduceifCashAssetsProportional(\n                nToken.tokenAddress,\n                currencyId,\n                nToken.lastInitializedTime,\n                tokensToRedeem,\n                nToken.totalSupply,\n                ifCashBits\n            );\n\n            // Once the ifCash bits have been withdrawn, set this to zero so that getLiquidityTokenWithdraw\n            // simply gets the proportional amount of liquidity tokens to remove\n            ifCashBits = 0;\n        }\n\n        // Returns the liquidity tokens to withdraw per market and the netfCash amounts. Net fCash amounts are only\n        // set when ifCashBits != 0. Otherwise they must be calculated in _withdrawLiquidityTokens\n        (int256[] memory tokensToWithdraw, int256[] memory netfCash) = nTokenCalculations.getLiquidityTokenWithdraw(\n            nToken, tokensToRedeem, block.timestamp, ifCashBits\n        );\n\n        // Returns the totalPrimeCash as a result of withdrawing liquidity tokens and cash. netfCash will be updated\n        // in memory if required and will contain the fCash to be sold or returned to the portfolio\n        int256 totalPrimeCash = _reduceLiquidAssets(\n            nToken,\n            tokensToRedeem,\n            tokensToWithdraw,\n            netfCash,\n            ifCashBits == 0, // If there are no residuals then we need to populate netfCash amounts\n            block.timestamp\n        );\n\n        // Emits the nToken burn before selling or transferring any fCash assets. This ensures that the prime cash\n        // transfer events do not double count the transfers between the account and the nToken.\n        Emitter.emitNTokenBurn(account, currencyId, totalPrimeCash, tokensToRedeem);\n        (totalPrimeCash, newifCashAssets) = _resolveResidualAssets(\n            nToken, account, sellTokenAssets, acceptResidualAssets, totalPrimeCash, netfCash, newifCashAssets\n        );\n\n        return (totalPrimeCash, newifCashAssets);\n    }\n\n    function _resolveResidualAssets(\n        nTokenPortfolio memory nToken,\n        address account,\n        bool sellTokenAssets,\n        bool acceptResidualAssets,\n        int256 totalPrimeCash,\n        int256[] memory netfCash,\n        PortfolioAsset[] memory newifCashAssets\n    ) internal returns (int256, PortfolioAsset[] memory) {\n        bool netfCashRemaining = true;\n        if (sellTokenAssets) {\n            int256 primeCash;\n            // NOTE: netfCash is modified in place and set to zero if the fCash is sold\n            (primeCash, netfCashRemaining) = _sellfCashAssets(nToken, netfCash, account);\n            totalPrimeCash = totalPrimeCash.add(primeCash);\n        }\n\n        require(netfCashRemaining == false, \"Residuals\");\n\n        return (totalPrimeCash, newifCashAssets);\n    }\n\n    /// @notice Removes liquidity tokens and cash from the nToken\n    /// @param nToken portfolio object\n    /// @param nTokensToRedeem tokens to redeem\n    /// @param tokensToWithdraw array of liquidity tokens to withdraw\n    /// @param netfCash array of netfCash figures\n    /// @param mustCalculatefCash true if netfCash must be calculated in the removeLiquidityTokens step\n    /// @param blockTime current block time\n    /// @return primeCashShare amount of cash the redeemer will receive from withdrawing cash assets from the nToken\n    function _reduceLiquidAssets(\n        nTokenPortfolio memory nToken,\n        int256 nTokensToRedeem,\n        int256[] memory tokensToWithdraw,\n        int256[] memory netfCash,\n        bool mustCalculatefCash,\n        uint256 blockTime\n    ) private returns (int256 primeCashShare) {\n        // Get asset cash share for the nToken, if it exists. It is required in balance handler that the\n        // nToken can never have a negative cash asset cash balance so what we get here is always positive\n        // or zero.\n        primeCashShare = nToken.cashBalance.mul(nTokensToRedeem).div(nToken.totalSupply);\n        if (primeCashShare > 0) {\n            nToken.cashBalance = nToken.cashBalance.subNoNeg(primeCashShare);\n            BalanceHandler.setBalanceStorageForNToken(\n                nToken.tokenAddress,\n                nToken.cashGroup.currencyId,\n                nToken.cashBalance\n            );\n        }\n\n        // Get share of liquidity tokens to remove, netfCash is modified in memory during this method if mustCalculatefcash\n        // is set to true\n        primeCashShare = primeCashShare.add(\n            _removeLiquidityTokens(nToken, nTokensToRedeem, tokensToWithdraw, netfCash, blockTime, mustCalculatefCash)\n        );\n\n        nToken.portfolioState.storeAssets(nToken.tokenAddress);\n\n        // NOTE: Token supply change will happen when we finalize balances and after minting of incentives\n        return primeCashShare;\n    }\n\n    /// @notice Removes nToken liquidity tokens and updates the netfCash figures.\n    /// @param nToken portfolio object\n    /// @param nTokensToRedeem tokens to redeem\n    /// @param tokensToWithdraw array of liquidity tokens to withdraw\n    /// @param netfCash array of netfCash figures\n    /// @param blockTime current block time\n    /// @param mustCalculatefCash true if netfCash must be calculated in the removeLiquidityTokens step\n    /// @return totalPrimeCashClaims is the amount of asset cash raised from liquidity token cash claims\n    function _removeLiquidityTokens(\n        nTokenPortfolio memory nToken,\n        int256 nTokensToRedeem,\n        int256[] memory tokensToWithdraw,\n        int256[] memory netfCash,\n        uint256 blockTime,\n        bool mustCalculatefCash\n    ) private returns (int256 totalPrimeCashClaims) {\n        MarketParameters memory market;\n\n        for (uint256 i = 0; i < nToken.portfolioState.storedAssets.length; i++) {\n            PortfolioAsset memory asset = nToken.portfolioState.storedAssets[i];\n            asset.notional = asset.notional.sub(tokensToWithdraw[i]);\n            // Cannot redeem liquidity tokens down to zero or this will cause many issues with\n            // market initialization.\n            require(asset.notional > 0, \"Cannot redeem to zero\");\n            require(asset.storageState == AssetStorageState.NoChange);\n            asset.storageState = AssetStorageState.Update;\n\n            // This will load a market object in memory\n            nToken.cashGroup.loadMarket(market, i + 1, true, blockTime);\n            int256 fCashClaim;\n            {\n                int256 primeCash;\n                // Remove liquidity from the market\n                (primeCash, fCashClaim) = market.removeLiquidity(tokensToWithdraw[i]);\n                totalPrimeCashClaims = totalPrimeCashClaims.add(primeCash);\n            }\n\n            int256 fCashToNToken;\n            if (mustCalculatefCash) {\n                // Do this calculation if net ifCash is not set, will happen if there are no residuals\n                int256 fCashBalance = BitmapAssetsHandler.getifCashNotional(\n                    nToken.tokenAddress,\n                    nToken.cashGroup.currencyId,\n                    asset.maturity\n                );\n                int256 fCashShare = fCashBalance.mul(nTokensToRedeem).div(nToken.totalSupply);\n                // netfCash = fCashClaim + fCashShare\n                netfCash[i] = fCashClaim.add(fCashShare);\n                fCashToNToken = fCashShare.neg();\n\n                // Rounding errors occur due to a division before multiplication issue in the\n                // code path. To calculate the fCash claim the calculations are:\n                //   nTokenCalculations._getProportionalLiquidityTokens:\n                //      tokensToWithdraw = totalLiquidity * nTokensToRedeem / nToken.totalSupply\n                //   Market.removeLiquidity:\n                //      fCashClaim = tokensToWithdraw * totalfCash / totalLiquidity\n                //\n                //   `totalLiquidity` is multiplied and divided which may cause an off by one error\n                //   when compared to the more direct fCashShare math:\n                //      fCashShare = fCashBalance * nTokensToRedeem / nToken.totalSupply\n                //\n                // Since all division rounds down, fCashClaim will be less than to fCashShare by\n                // exactly one unit. A netfCash of -1 will cause a failure to sell the fCash position. This\n                // condition can only present itself when the netfCash position of the nToken is exactly in\n                // balance, which occurs for the longest dated fCash market after every initialize markets.\n                // Users could \"exit\" this position by holding the -1 fCash balance but that is a poor UX and\n                // not very gas efficient.\n                if (\n                    fCashBalance.add(fCashClaim).add(market.totalfCash) == 0 &&\n                    netfCash[i] == -1\n                ) {\n                    // Transfers the -1 fCash back to the nToken, this ensures that the total sum of fCash\n                    // does not change.\n                    netfCash[i] = 0;\n                    fCashToNToken = fCashToNToken.sub(1);\n                }\n            } else {\n                // Account will receive netfCash amount. Deduct that from the fCash claim and add the\n                // remaining back to the nToken to net off the nToken's position\n                // fCashToNToken = -fCashShare\n                // netfCash = fCashClaim + fCashShare\n                // fCashToNToken = -(netfCash - fCashClaim)\n                // fCashToNToken = fCashClaim - netfCash\n                fCashToNToken = fCashClaim.sub(netfCash[i]);\n            }\n\n            // Removes the account's fCash position from the nToken, will burn negative fCash\n            BitmapAssetsHandler.addifCashAsset(\n                nToken.tokenAddress,\n                asset.currencyId,\n                asset.maturity,\n                nToken.lastInitializedTime,\n                fCashToNToken\n            );\n        }\n\n        return totalPrimeCashClaims;\n    }\n\n    /// @notice Sells fCash assets back into the market for cash. Negative fCash assets will decrease netPrimeCash\n    /// as a result. The aim here is to ensure that accounts can redeem nTokens without having to take on\n    /// fCash assets.\n    function _sellfCashAssets(\n        nTokenPortfolio memory nToken,\n        int256[] memory netfCash,\n        address account\n    ) private returns (int256 totalPrimeCash, bool hasResidual) {\n        MarketParameters memory market;\n        hasResidual = false;\n\n        for (uint256 i = 0; i < netfCash.length; i++) {\n            if (netfCash[i] == 0) continue;\n\n            nToken.cashGroup.loadMarket(market, i + 1, false, block.timestamp);\n            (int256 netPrimeCash, /* */) = market.executeTrade(\n                account,\n                nToken.cashGroup,\n                // Use the negative of fCash notional here since we want to net it out\n                netfCash[i].neg(),\n                nToken.portfolioState.storedAssets[i].maturity.sub(block.timestamp),\n                i + 1\n            );\n\n            if (netPrimeCash == 0) {\n                // This means that the trade failed\n                hasResidual = true;\n            } else {\n                // If the sale of the fCash is successful, then emit the transfer here to complete the accounting,\n                // otherwise the account will accept residuals and transfers will be emitted there.\n                Emitter.emitTransferfCash(\n                    nToken.tokenAddress, account, nToken.cashGroup.currencyId, market.maturity, netfCash[i]\n                );\n\n                totalPrimeCash = totalPrimeCash.add(netPrimeCash);\n                netfCash[i] = 0;\n            }\n        }\n    }\n\n    /// @notice Combines newifCashAssets array with netfCash assets into a single finalfCashAssets array\n    function _addResidualsToAssets(\n        PortfolioAsset[] memory liquidityTokens,\n        PortfolioAsset[] memory newifCashAssets,\n        int256[] memory netfCash\n    ) internal pure returns (PortfolioAsset[] memory finalfCashAssets) {\n        uint256 numAssetsToExtend;\n        for (uint256 i = 0; i < netfCash.length; i++) {\n            if (netfCash[i] != 0) numAssetsToExtend++;\n        }\n\n        uint256 newLength = newifCashAssets.length + numAssetsToExtend;\n        finalfCashAssets = new PortfolioAsset[](newLength);\n        uint index = 0;\n        for (; index < newifCashAssets.length; index++) {\n            finalfCashAssets[index] = newifCashAssets[index];\n        }\n\n        uint netfCashIndex = 0;\n        for (; index < finalfCashAssets.length; ) {\n            if (netfCash[netfCashIndex] != 0) {\n                PortfolioAsset memory asset = finalfCashAssets[index];\n                asset.currencyId = liquidityTokens[netfCashIndex].currencyId;\n                asset.maturity = liquidityTokens[netfCashIndex].maturity;\n                asset.assetType = Constants.FCASH_ASSET_TYPE;\n                asset.notional = netfCash[netfCashIndex];\n                index++;\n            }\n\n            netfCashIndex++;\n        }\n\n        return finalfCashAssets;\n    }\n\n    /// @notice Used to reduce an nToken ifCash assets portfolio proportionately when redeeming\n    /// nTokens to its underlying assets.\n    function _reduceifCashAssetsProportional(\n        address nTokenAddress,\n        uint16 currencyId,\n        uint256 lastInitializedTime,\n        int256 tokensToRedeem,\n        int256 totalSupply,\n        bytes32 assetsBitmap\n    ) internal returns (PortfolioAsset[] memory) {\n        uint256 index = assetsBitmap.totalBitsSet();\n        mapping(address => mapping(uint256 =>\n            mapping(uint256 => ifCashStorage))) storage store = LibStorage.getifCashBitmapStorage();\n\n        PortfolioAsset[] memory assets = new PortfolioAsset[](index);\n        index = 0;\n\n        uint256 bitNum = assetsBitmap.getNextBitNum();\n        while (bitNum != 0) {\n            uint256 maturity = DateTime.getMaturityFromBitNum(lastInitializedTime, bitNum);\n            ifCashStorage storage fCashSlot = store[nTokenAddress][currencyId][maturity];\n            int256 notional = fCashSlot.notional;\n            int256 finalNotional;\n\n            {\n                int256 notionalToTransfer = notional.mul(tokensToRedeem).div(totalSupply);\n\n                PortfolioAsset memory asset = assets[index];\n                asset.currencyId = currencyId;\n                asset.maturity = maturity;\n                asset.assetType = Constants.FCASH_ASSET_TYPE;\n                asset.notional = notionalToTransfer;\n                index += 1;\n            \n                finalNotional = notional.sub(notionalToTransfer);\n            }\n\n            // Store the new fCash amount\n            fCashSlot.notional = finalNotional.toInt128();\n\n            PrimeCashExchangeRate.updateTotalfCashDebtOutstanding(\n                nTokenAddress, currencyId, maturity, notional, finalNotional\n            );\n\n            // Turn off the bit and look for the next one\n            assetsBitmap = assetsBitmap.setBit(bitNum, false);\n            bitNum = assetsBitmap.getNextBitNum();\n        }\n\n        return assets;\n    }\n}\n", "sourceMap": "1350:17450:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/external/actions/nTokenRedeemAction.sol", "type": "library", "deployment": {"address": "0xcE3F1D83CEcee26b1D4a7010123b86cED67a48d4", "chainid": "1", "blockHeight": 19485799}}