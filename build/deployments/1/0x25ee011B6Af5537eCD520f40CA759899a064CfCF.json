{"abi": [{"inputs": [{"internalType": "contract NotionalProxy", "name": "notional", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [], "name": "Notional", "outputs": [{"internalType": "contract NotionalProxy", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"components": [{"internalType": "enum DepositActionType", "name": "actionType", "type": "uint8"}, {"internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"internalType": "uint256", "name": "depositActionAmount", "type": "uint256"}, {"internalType": "uint256", "name": "withdrawAmountInternalPrecision", "type": "uint256"}, {"internalType": "bool", "name": "withdrawEntireCashBalance", "type": "bool"}, {"internalType": "bool", "name": "redeemToUnderlying", "type": "bool"}, {"internalType": "bytes32[]", "name": "trades", "type": "bytes32[]"}], "internalType": "struct BalanceActionWithTrades[]", "name": "borrowAction", "type": "tuple[]"}, {"internalType": "uint256", "name": "convertCashAmount", "type": "uint256"}], "name": "doLeveragedNToken", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "account", "type": "address"}, {"internalType": "bytes", "name": "callbackData", "type": "bytes"}], "name": "notionalCallback", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"189": "interfaces/chainlink/AggregatorInterface.sol", "190": "interfaces/chainlink/AggregatorV2V3Interface.sol", "191": "interfaces/chainlink/AggregatorV3Interface.sol", "199": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "200": "interfaces/notional/IRewarder.sol", "204": "interfaces/notional/IVaultController.sol", "205": "interfaces/notional/NotionalCalculations.sol", "206": "interfaces/notional/NotionalCallback.sol", "207": "interfaces/notional/NotionalGovernance.sol", "208": "interfaces/notional/NotionalProxy.sol", "209": "interfaces/notional/NotionalTreasury.sol", "210": "interfaces/notional/NotionalViews.sol", "211": "interfaces/notional/nERC1155Interface.sol", "212": "interfaces/notional/nTokenERC20.sol", "46": "contracts/external/adapters/LeveragedNToken.sol", "81": "contracts/global/Types.sol"}, "ast": {"absolutePath": "contracts/external/adapters/LeveragedNToken.sol", "exportedSymbols": {"AccountBalance": [87844], "AccountContext": [87729], "AggregatorInterface": [95010], "AggregatorV2V3Interface": [91212], "AggregatorV3Interface": [95625], "AssetRateAdapter": [93052], "AssetRateStorage": [87695], "AssetStorageState": [87482], "BalanceAction": [87503], "BalanceActionWithTrades": [87519], "BalanceState": [87620], "BalanceStorage": [87753], "BatchLend": [87490], "CashGroupParameters": [87636], "CashGroupSettings": [87716], "Deployments": [88390], "DepositActionType": [87477], "DepositData": [90009], "Deprecated_AssetRateParameters": [87627], "Deprecated_VaultSettledAssetsStorage": [87971], "ETHRate": [87599], "ETHRateStorage": [87690], "ILendingPool": [94699], "IPrimeCashHoldingsOracle": [90110], "IRewarder": [91306], "IUpgradeableBeacon": [91203], "IVaultController": [88864], "InterestRateCurveSettings": [87807], "InterestRateParameters": [87790], "LendingPoolStorage": [94617], "LeveragedNTokenAdapter": [22264], "LiquidationFactors": [87577], "MarketParameters": [87666], "MarketStorage": [87773], "NotionalCalculations": [88327], "NotionalCallback": [90729], "NotionalGovernance": [89675], "NotionalProxy": [89293], "NotionalTreasury": [90272], "NotionalViews": [90717], "OracleData": [90031], "PortfolioAsset": [87649], "PortfolioAssetStorage": [87819], "PortfolioState": [87588], "PrimeCashFactors": [88065], "PrimeCashFactorsStorage": [88046], "PrimeCashHoldingsOracle": [88084], "PrimeRate": [88072], "PrimeSettlementRateStorage": [88081], "RebalancingContextStorage": [88091], "RebalancingTargetData": [88103], "RedeemData": [90022], "SettleAmount": [87528], "SettlementRateStorage": [87760], "Token": [87539], "TokenStorage": [87677], "TokenType": [87462], "TotalfCashDebtStorage": [88098], "TradeActionType": [87469], "VaultAccount": [88008], "VaultAccountHealthFactors": [88019], "VaultAccountSecondaryDebtShareStorage": [87918], "VaultAccountStorage": [87995], "VaultBorrowCapacityStorage": [87911], "VaultConfig": [87953], "VaultConfigParams": [87875], "VaultConfigStorage": [87906], "VaultState": [87980], "VaultStateStorage": [87966], "WETH9": [94085], "ifCashStorage": [87810], "nERC1155Interface": [89836], "nTokenContext": [87744], "nTokenERC20": [89990], "nTokenPortfolio": [87554], "nTokenTotalSupplyStorage": [87833], "nTokenTotalSupplyStorage_deprecated": [87826]}, "id": 22265, "license": "BSUL-1.1", "nodeType": "SourceUnit", "nodes": [{"id": 22048, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "37:23:46"}, {"id": 22049, "literals": ["abicoder", "v2"], "nodeType": "PragmaDirective", "src": "61:19:46"}, {"absolutePath": "contracts/global/Types.sol", "file": "../../global/Types.sol", "id": 22050, "nodeType": "ImportDirective", "scope": 22265, "sourceUnit": 88104, "src": "82:32:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/notional/NotionalProxy.sol", "file": "../../../interfaces/notional/NotionalProxy.sol", "id": 22051, "nodeType": "ImportDirective", "scope": 22265, "sourceUnit": 89294, "src": "115:56:46", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/notional/NotionalCallback.sol", "file": "../../../interfaces/notional/NotionalCallback.sol", "id": 22052, "nodeType": "ImportDirective", "scope": 22265, "sourceUnit": 90730, "src": "172:59:46", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 22053, "name": "NotionalCallback", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 90729, "src": "268:16:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalCallback_$90729", "typeString": "contract NotionalCallback"}}, "id": 22054, "nodeType": "InheritanceSpecifier", "src": "268:16:46"}], "contractDependencies": [90729], "contractKind": "contract", "fullyImplemented": true, "id": 22264, "linearizedBaseContracts": [22264, 90729], "name": "LeveragedNTokenAdapter", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "LeveragedNTokenAdapter.EncodedData", "id": 22059, "members": [{"constant": false, "id": 22056, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 22059, "src": "320:17:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 22055, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "320:6:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 22058, "mutability": "mutable", "name": "depositActionAmount", "nodeType": "VariableDeclaration", "scope": 22059, "src": "347:27:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22057, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "347:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "EncodedData", "nodeType": "StructDefinition", "scope": 22264, "src": "291:90:46", "visibility": "public"}, {"constant": true, "functionSelector": "06fdde03", "id": 22062, "mutability": "constant", "name": "name", "nodeType": "VariableDeclaration", "scope": 22264, "src": "387:56:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 22060, "name": "string", "nodeType": "ElementaryTypeName", "src": "387:6:46", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "value": {"hexValue": "4c6576657261676564204e546f6b656e2041646170746572", "id": 22061, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "417:26:46", "typeDescriptions": {"typeIdentifier": "t_stringliteral_7c2d61e7f535e2ba9e85942b7fc2ab1c570d6e4e0ed4bea62b58a6855e6bd833", "typeString": "literal_string \"Leveraged NToken Adapter\""}, "value": "Leveraged NToken Adapter"}, "visibility": "public"}, {"constant": false, "functionSelector": "221c3b4c", "id": 22064, "mutability": "immutable", "name": "Notional", "nodeType": "VariableDeclaration", "scope": 22264, "src": "449:39:46", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}, "typeName": {"id": 22063, "name": "NotionalProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 89293, "src": "449:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "visibility": "public"}, {"body": {"id": 22073, "nodeType": "Block", "src": "531:24:46", "statements": [{"expression": {"id": 22071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22069, "name": "Notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22064, "src": "533:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 22070, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22066, "src": "544:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "src": "533:19:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "id": 22072, "nodeType": "ExpressionStatement", "src": "533:19:46"}]}, "id": 22074, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 22067, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22066, "mutability": "mutable", "name": "notional", "nodeType": "VariableDeclaration", "scope": 22074, "src": "507:22:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}, "typeName": {"id": 22065, "name": "NotionalProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 89293, "src": "507:13:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "visibility": "internal"}], "src": "506:24:46"}, "returnParameters": {"id": 22068, "nodeType": "ParameterList", "parameters": [], "src": "531:0:46"}, "scope": 22264, "src": "495:60:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 22123, "nodeType": "Block", "src": "1172:416:46", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22087, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22084, "name": "borrowAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22078, "src": "1190:12:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}}, "id": 22085, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1190:19:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "31", "id": 22086, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1213:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "1190:24:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 22083, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1182:7:46", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22088, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1182:33:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22089, "nodeType": "ExpressionStatement", "src": "1182:33:46"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}, "id": 22097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"baseExpression": {"id": 22091, "name": "borrowAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22078, "src": "1262:12:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}}, "id": 22093, "indexExpression": {"hexValue": "30", "id": 22092, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1275:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1262:15:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata"}}, "id": 22094, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "actionType", "nodeType": "MemberAccess", "referencedDeclaration": 87505, "src": "1262:26:46", "typeDescriptions": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 22095, "name": "DepositActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87477, "src": "1292:17:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_DepositActionType_$87477_$", "typeString": "type(enum DepositActionType)"}}, "id": 22096, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "DepositUnderlying", "nodeType": "MemberAccess", "src": "1292:35:46", "typeDescriptions": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}}, "src": "1262:65:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 22090, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1254:7:46", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22098, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1254:74:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22099, "nodeType": "ExpressionStatement", "src": "1254:74:46"}, {"assignments": [22101], "declarations": [{"constant": false, "id": 22101, "mutability": "mutable", "name": "callbackData", "nodeType": "VariableDeclaration", "scope": 22123, "src": "1359:25:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 22100, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1359:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 22110, "initialValue": {"arguments": [{"expression": {"baseExpression": {"id": 22104, "name": "borrowAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22078, "src": "1398:12:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}}, "id": 22106, "indexExpression": {"hexValue": "30", "id": 22105, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1411:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1398:15:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata"}}, "id": 22107, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87507, "src": "1398:26:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 22108, "name": "convertCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22080, "src": "1426:17:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22102, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1387:3:46", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 22103, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encode", "nodeType": "MemberAccess", "src": "1387:10:46", "typeDescriptions": {"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 22109, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1387:57:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "1359:85:46"}, {"expression": {"arguments": [{"expression": {"id": 22117, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1533:3:46", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22118, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1533:10:46", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 22119, "name": "borrowAction", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22078, "src": "1545:12:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}}, {"id": 22120, "name": "callbackData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22101, "src": "1559:12:46", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades calldata[] calldata"}, {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "expression": {"id": 22111, "name": "Notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22064, "src": "1454:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "id": 22113, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "batchBalanceAndTradeActionWithCallback", "nodeType": "MemberAccess", "referencedDeclaration": 89139, "src": "1454:47:46", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,struct BalanceActionWithTrades memory[] memory,bytes memory) payable external"}}, "id": 22116, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"expression": {"id": 22114, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1509:3:46", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22115, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "value", "nodeType": "MemberAccess", "src": "1509:9:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "1454:65:46", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$value", "typeString": "function (address,struct BalanceActionWithTrades memory[] memory,bytes memory) payable external"}}, "id": 22121, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1454:127:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22122, "nodeType": "ExpressionStatement", "src": "1454:127:46"}]}, "documentation": {"id": 22075, "nodeType": "StructuredDocumentation", "src": "561:464:46", "text": " Batch Balance and Trade Action does not allow for margin deposit along with converting cash\n balances to nTokens. Therefore, we use two authorized callback calls here to deposit margin,\n borrow cash, and then convert some amount of cash to nTokens in a single transaction. These\n methods use the `WithCallback` method that allows for Notional to perform ERC20 transfers\n to take advantage of any existing token approvals."}, "functionSelector": "a5b77b6b", "id": 22124, "implemented": true, "kind": "function", "modifiers": [], "name": "doLeveragedNToken", "nodeType": "FunctionDefinition", "parameters": {"id": 22081, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22078, "mutability": "mutable", "name": "borrowAction", "nodeType": "VariableDeclaration", "scope": 22124, "src": "1066:47:46", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_calldata_ptr_$dyn_calldata_ptr", "typeString": "struct BalanceActionWithTrades[]"}, "typeName": {"baseType": {"id": 22076, "name": "BalanceActionWithTrades", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87519, "src": "1066:23:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_storage_ptr", "typeString": "struct BalanceActionWithTrades"}}, "id": 22077, "nodeType": "ArrayTypeName", "src": "1066:25:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_storage_$dyn_storage_ptr", "typeString": "struct BalanceActionWithTrades[]"}}, "visibility": "internal"}, {"constant": false, "id": 22080, "mutability": "mutable", "name": "convertCashAmount", "nodeType": "VariableDeclaration", "scope": 22124, "src": "1123:25:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1123:7:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1056:98:46"}, "returnParameters": {"id": 22082, "nodeType": "ParameterList", "parameters": [], "src": "1172:0:46"}, "scope": 22264, "src": "1030:558:46", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"baseFunctions": [90728], "body": {"id": 22262, "nodeType": "Block", "src": "1730:1171:46", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 22148, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 22141, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22135, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1748:3:46", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22136, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1748:10:46", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 22139, "name": "Notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22064, "src": "1770:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}], "id": 22138, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1762:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 22137, "name": "address", "nodeType": "ElementaryTypeName", "src": "1762:7:46", "typeDescriptions": {}}}, "id": 22140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1762:17:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1748:31:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 22147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22142, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "1783:6:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 22145, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1801:4:46", "typeDescriptions": {"typeIdentifier": "t_contract$_LeveragedNTokenAdapter_$22264", "typeString": "contract LeveragedNTokenAdapter"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_LeveragedNTokenAdapter_$22264", "typeString": "contract LeveragedNTokenAdapter"}], "id": 22144, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1793:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 22143, "name": "address", "nodeType": "ElementaryTypeName", "src": "1793:7:46", "typeDescriptions": {}}}, "id": 22146, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1793:13:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1783:23:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1748:58:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "556e617574686f72697a65642063616c6c6261636b", "id": 22149, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1808:23:46", "typeDescriptions": {"typeIdentifier": "t_stringliteral_397aaaccf4e12d92be59946dfcacdf68dc2c5b82b4a37f6e4ef2cd79e09c3db4", "typeString": "literal_string \"Unauthorized callback\""}, "value": "Unauthorized callback"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_397aaaccf4e12d92be59946dfcacdf68dc2c5b82b4a37f6e4ef2cd79e09c3db4", "typeString": "literal_string \"Unauthorized callback\""}], "id": 22134, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1740:7:46", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1740:92:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22151, "nodeType": "ExpressionStatement", "src": "1740:92:46"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22152, "name": "callbackData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22130, "src": "1947:12:46", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, "id": 22153, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "1947:19:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 22154, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1970:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1947:24:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22157, "nodeType": "IfStatement", "src": "1943:37:46", "trueBody": {"functionReturnParameters": 22133, "id": 22156, "nodeType": "Return", "src": "1973:7:46"}}, {"assignments": [22159], "declarations": [{"constant": false, "id": 22159, "mutability": "mutable", "name": "data", "nodeType": "VariableDeclaration", "scope": 22262, "src": "1990:23:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData"}, "typeName": {"id": 22158, "name": "EncodedData", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 22059, "src": "1990:11:46", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_storage_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData"}}, "visibility": "internal"}], "id": 22166, "initialValue": {"arguments": [{"id": 22162, "name": "callbackData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22130, "src": "2027:12:46", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}}, {"components": [{"id": 22163, "name": "EncodedData", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22059, "src": "2042:11:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_EncodedData_$22059_storage_ptr_$", "typeString": "type(struct LeveragedNTokenAdapter.EncodedData storage pointer)"}}], "id": 22164, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "TupleExpression", "src": "2041:13:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_EncodedData_$22059_storage_ptr_$", "typeString": "type(struct LeveragedNTokenAdapter.EncodedData storage pointer)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata"}, {"typeIdentifier": "t_type$_t_struct$_EncodedData_$22059_storage_ptr_$", "typeString": "type(struct LeveragedNTokenAdapter.EncodedData storage pointer)"}], "expression": {"id": 22160, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2016:3:46", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 22161, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "decode", "nodeType": "MemberAccess", "src": "2016:10:46", "typeDescriptions": {"typeIdentifier": "t_function_abidecode_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 22165, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2016:39:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData memory"}}, "nodeType": "VariableDeclarationStatement", "src": "1990:65:46"}, {"assignments": [22170], "declarations": [{"constant": false, "id": 22170, "mutability": "mutable", "name": "action", "nodeType": "VariableDeclaration", "scope": 22262, "src": "2065:39:46", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades[]"}, "typeName": {"baseType": {"id": 22168, "name": "BalanceActionWithTrades", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87519, "src": "2065:23:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_storage_ptr", "typeString": "struct BalanceActionWithTrades"}}, "id": 22169, "nodeType": "ArrayTypeName", "src": "2065:25:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_storage_$dyn_storage_ptr", "typeString": "struct BalanceActionWithTrades[]"}}, "visibility": "internal"}], "id": 22176, "initialValue": {"arguments": [{"hexValue": "31", "id": 22174, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2137:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}], "id": 22173, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "2107:29:46", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (struct BalanceActionWithTrades memory[] memory)"}, "typeName": {"baseType": {"id": 22171, "name": "BalanceActionWithTrades", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87519, "src": "2111:23:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_storage_ptr", "typeString": "struct BalanceActionWithTrades"}}, "id": 22172, "nodeType": "ArrayTypeName", "src": "2111:25:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_storage_$dyn_storage_ptr", "typeString": "struct BalanceActionWithTrades[]"}}}, "id": 22175, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2107:32:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2065:74:46"}, {"expression": {"id": 22183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22177, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2149:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22179, "indexExpression": {"hexValue": "30", "id": 22178, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2156:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2149:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22180, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "actionType", "nodeType": "MemberAccess", "referencedDeclaration": 87505, "src": "2149:20:46", "typeDescriptions": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 22181, "name": "DepositActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87477, "src": "2172:17:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_DepositActionType_$87477_$", "typeString": "type(enum DepositActionType)"}}, "id": 22182, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "ConvertCashToNToken", "nodeType": "MemberAccess", "src": "2172:37:46", "typeDescriptions": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}}, "src": "2149:60:46", "typeDescriptions": {"typeIdentifier": "t_enum$_DepositActionType_$87477", "typeString": "enum DepositActionType"}}, "id": 22184, "nodeType": "ExpressionStatement", "src": "2149:60:46"}, {"expression": {"id": 22191, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22185, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2219:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22187, "indexExpression": {"hexValue": "30", "id": 22186, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2226:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2219:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22188, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87507, "src": "2219:20:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 22189, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22159, "src": "2242:4:46", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData memory"}}, "id": 22190, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 22056, "src": "2242:15:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "2219:38:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "id": 22192, "nodeType": "ExpressionStatement", "src": "2219:38:46"}, {"expression": {"id": 22198, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22193, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2267:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22195, "indexExpression": {"hexValue": "30", "id": 22194, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2274:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2267:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22196, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "withdrawAmountInternalPrecision", "nodeType": "MemberAccess", "referencedDeclaration": 87511, "src": "2267:41:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 22197, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2311:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2267:45:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22199, "nodeType": "ExpressionStatement", "src": "2267:45:46"}, {"expression": {"id": 22205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22200, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2322:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22202, "indexExpression": {"hexValue": "30", "id": 22201, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2329:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2322:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22203, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "withdrawEntireCashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 87513, "src": "2322:35:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "66616c7365", "id": 22204, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2360:5:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "src": "2322:43:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22206, "nodeType": "ExpressionStatement", "src": "2322:43:46"}, {"expression": {"id": 22212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22207, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2430:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22209, "indexExpression": {"hexValue": "30", "id": 22208, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2437:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2430:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22210, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "redeemToUnderlying", "nodeType": "MemberAccess", "referencedDeclaration": 87515, "src": "2430:28:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 22211, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2461:4:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "2430:35:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22213, "nodeType": "ExpressionStatement", "src": "2430:35:46"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22217, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22214, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22159, "src": "2480:4:46", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData memory"}}, "id": 22215, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "depositActionAmount", "nodeType": "MemberAccess", "referencedDeclaration": 22058, "src": "2480:24:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 22216, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2508:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2480:29:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 22252, "nodeType": "Block", "src": "2735:81:46", "statements": [{"expression": {"id": 22250, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22244, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2749:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22246, "indexExpression": {"hexValue": "30", "id": 22245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2756:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2749:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22247, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "depositActionAmount", "nodeType": "MemberAccess", "referencedDeclaration": 87509, "src": "2749:29:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 22248, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22159, "src": "2781:4:46", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData memory"}}, "id": 22249, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "depositActionAmount", "nodeType": "MemberAccess", "referencedDeclaration": 22058, "src": "2781:24:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2749:56:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22251, "nodeType": "ExpressionStatement", "src": "2749:56:46"}]}, "id": 22253, "nodeType": "IfStatement", "src": "2476:340:46", "trueBody": {"id": 22243, "nodeType": "Block", "src": "2511:218:46", "statements": [{"assignments": [22219, null, null], "declarations": [{"constant": false, "id": 22219, "mutability": "mutable", "name": "cashBalance", "nodeType": "VariableDeclaration", "scope": 22243, "src": "2526:18:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 22218, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2526:6:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, null, null], "id": 22226, "initialValue": {"arguments": [{"expression": {"id": 22222, "name": "data", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22159, "src": "2589:4:46", "typeDescriptions": {"typeIdentifier": "t_struct$_EncodedData_$22059_memory_ptr", "typeString": "struct LeveragedNTokenAdapter.EncodedData memory"}}, "id": 22223, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 22056, "src": "2589:15:46", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 22224, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22128, "src": "2606:7:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 22220, "name": "Notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22064, "src": "2562:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "id": 22221, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getAccountBalance", "nodeType": "MemberAccess", "referencedDeclaration": 90605, "src": "2562:26:46", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint16_$_t_address_$returns$_t_int256_$_t_int256_$_t_uint256_$", "typeString": "function (uint16,address) view external returns (int256,int256,uint256)"}}, "id": 22225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2562:52:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$_t_uint256_$", "typeString": "tuple(int256,int256,uint256)"}}, "nodeType": "VariableDeclarationStatement", "src": "2525:89:46"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 22230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22228, "name": "cashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22219, "src": "2636:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 22229, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2650:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2636:15:46", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 22227, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2628:7:46", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22231, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2628:24:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22232, "nodeType": "ExpressionStatement", "src": "2628:24:46"}, {"expression": {"id": 22241, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"baseExpression": {"id": 22233, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2666:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, "id": 22235, "indexExpression": {"hexValue": "30", "id": 22234, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2673:1:46", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2666:9:46", "typeDescriptions": {"typeIdentifier": "t_struct$_BalanceActionWithTrades_$87519_memory_ptr", "typeString": "struct BalanceActionWithTrades memory"}}, "id": 22236, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "depositActionAmount", "nodeType": "MemberAccess", "referencedDeclaration": 87509, "src": "2666:29:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22239, "name": "cashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22219, "src": "2706:11:46", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 22238, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2698:7:46", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 22237, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2698:7:46", "typeDescriptions": {}}}, "id": 22240, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2698:20:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "2666:52:46", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22242, "nodeType": "ExpressionStatement", "src": "2666:52:46"}]}}, {"expression": {"arguments": [{"id": 22257, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22128, "src": "2874:7:46", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22258, "name": "action", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22170, "src": "2883:6:46", "typeDescriptions": {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}}, {"hexValue": "", "id": 22259, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2891:2:46", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr", "typeString": "struct BalanceActionWithTrades memory[] memory"}, {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"id": 22254, "name": "Notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22064, "src": "2826:8:46", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$89293", "typeString": "contract NotionalProxy"}}, "id": 22256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "batchBalanceAndTradeActionWithCallback", "nodeType": "MemberAccess", "referencedDeclaration": 89139, "src": "2826:47:46", "typeDescriptions": {"typeIdentifier": "t_function_external_payable$_t_address_$_t_array$_t_struct$_BalanceActionWithTrades_$87519_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$", "typeString": "function (address,struct BalanceActionWithTrades memory[] memory,bytes memory) payable external"}}, "id": 22260, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2826:68:46", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22261, "nodeType": "ExpressionStatement", "src": "2826:68:46"}]}, "functionSelector": "aa1a0cae", "id": 22263, "implemented": true, "kind": "function", "modifiers": [], "name": "notionalCallback", "nodeType": "FunctionDefinition", "overrides": {"id": 22132, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1721:8:46"}, "parameters": {"id": 22131, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22126, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 22263, "src": "1629:14:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22125, "name": "address", "nodeType": "ElementaryTypeName", "src": "1629:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22128, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22263, "src": "1653:15:46", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22127, "name": "address", "nodeType": "ElementaryTypeName", "src": "1653:7:46", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22130, "mutability": "mutable", "name": "callbackData", "nodeType": "VariableDeclaration", "scope": 22263, "src": "1678:27:46", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes"}, "typeName": {"id": 22129, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "1678:5:46", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "src": "1619:92:46"}, "returnParameters": {"id": 22133, "nodeType": "ParameterList", "parameters": [], "src": "1730:0:46"}, "scope": 22264, "src": "1594:1307:46", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 22265, "src": "233:2670:46"}], "src": "37:2866:46"}, "bytecode": "60a060405234801561001057600080fd5b50604051610c42380380610c4283398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610b9f6100a36000398061010152806101df528061025f52806103fa52806104ee5250610b9f6000f3fe60806040526004361061003f5760003560e01c806306fdde0314610044578063221c3b4c1461006f578063a5b77b6b14610091578063aa1a0cae146100a6575b600080fd5b34801561005057600080fd5b506100596100c6565b6040516100669190610a7f565b60405180910390f35b34801561007b57600080fd5b506100846100ff565b6040516100669190610a6b565b6100a461009f36600461067c565b610123565b005b3480156100b257600080fd5b506100a46100c13660046105f3565b610254565b6040518060400160405280601881526020017f4c6576657261676564204e546f6b656e2041646170746572000000000000000081525081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001821461013057600080fd5b60028383600081811061013f57fe5b90506020028101906101519190610af2565b61015f9060208101906106f1565b600681111561016a57fe5b1461017457600080fd5b60008383600081811061018357fe5b90506020028101906101959190610af2565b6101a690604081019060200161078f565b826040516020016101b8929190610ade565b60408051601f1981840301815290829052635950d8e960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635950d8e990349061021c903390899089908890600401610876565b6000604051808303818588803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561029457506001600160a01b03841630145b6102b95760405162461bcd60e51b81526004016102b090610a92565b60405180910390fd5b806102c35761055a565b60006102d18284018461073f565b60408051600180825281830190925291925060009190816020015b6102f4610560565b8152602001906001900390816102ec57905050905060068160008151811061031857fe5b602002602001015160000190600681111561032f57fe5b9081600681111561033c57fe5b90525081518151829060009061034e57fe5b60200260200101516020019061ffff16908161ffff168152505060008160008151811061037757fe5b6020026020010151606001818152505060008160008151811061039657fe5b602002602001015160800190151590811515815250506001816000815181106103bb57fe5b602002602001015160a00190151590811515815250508160200151600014156104b457815160405163fc1b134560e01b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163fc1b13459161042f918a90600401610ac1565b60606040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610712565b505090506000811361049057600080fd5b808260008151811061049e57fe5b60200260200101516040018181525050506104d7565b8160200151816000815181106104c657fe5b602002602001015160400181815250505b604051635950d8e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635950d8e9906105259088908590600401610994565b600060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b5050505050505b50505050565b6040805160e081019091528060008152602001600061ffff1681526020016000815260200160008152602001600015158152602001600015158152602001606081525090565b80356001600160a01b03811681146105bd57600080fd5b919050565b803580151581146105bd57600080fd5b8035600781106105bd57600080fd5b803561ffff811681146105bd57600080fd5b60008060008060608587031215610608578384fd5b610611856105a6565b935061061f602086016105a6565b9250604085013567ffffffffffffffff8082111561063b578384fd5b818701915087601f83011261064e578384fd5b81358181111561065c578485fd5b88602082850101111561066d578485fd5b95989497505060200194505050565b600080600060408486031215610690578283fd5b833567ffffffffffffffff808211156106a7578485fd5b818601915086601f8301126106ba578485fd5b8135818111156106c8578586fd5b87602080830285010111156106db578586fd5b6020928301989097509590910135949350505050565b600060208284031215610702578081fd5b61070b826105d2565b9392505050565b600080600060608486031215610726578283fd5b8351925060208401519150604084015190509250925092565b600060408284031215610750578081fd5b6040516040810181811067ffffffffffffffff8211171561076d57fe5b604052610779836105e1565b8152602083013560208201528091505092915050565b6000602082840312156107a0578081fd5b61070b826105e1565b81835260006001600160fb1b038311156107c1578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561080c578151875295820195908201906001016107f0565b509495945050505050565b15159052565b60008151808452815b8181101561084257602081850181015186830182015201610826565b818111156108535782602083870101525b50601f01601f19169290920160200192915050565b6007811061087257fe5b9052565b6001600160a01b038516815260606020808301829052828201859052600091906080908185018782028601830189865b8a81101561097157888303607f190184528135368d900360de190181126108cb578889fd5b8c0160e06108e1856108dc846105d2565b610868565b61ffff6108ef8884016105e1565b16858801526040828101359086015288820135898601526109118883016105c2565b61091d89870182610817565b5060a061092b8184016105c2565b61093782880182610817565b505060c061094781840184610b1a565b9350828288015261095b83880185836107a9565b97890197965050509286019250506001016108a6565b50508681036040880152610985818961081d565b9b9a5050505050505050505050565b6001600160a01b0383168152606060208083018290528351838301819052600092916080918286019080830287018401888401875b83811015610a4957607f198a8403018552815160e06109e9858351610868565b8188015161ffff168589015260408083015190860152898201518a8601528882015115158986015260a08083015115159086015260c091820151918501819052610a35818601836107dd565b9688019694505050908501906001016109c9565b50508781036040890152610a5d8782610b11565b9a9950505050505050505050565b6001600160a01b0391909116815260200190565b60006020825261070b602083018461081d565b602080825260159082015274556e617574686f72697a65642063616c6c6261636b60581b604082015260600190565b61ffff9290921682526001600160a01b0316602082015260400190565b61ffff929092168252602082015260400190565b6000823560de19833603018112610b07578182fd5b9190910192915050565b90815260200190565b6000808335601e19843603018112610b30578283fd5b830160208101925035905067ffffffffffffffff811115610b5057600080fd5b602081023603831315610b6257600080fd5b925092905056fea264697066735822122087b06901dc7207739cf8e87cb4cce134362f7e0e52f3fc2e0f8e2b0000a6e39964736f6c63430007060033", "bytecodeSha1": "daa685e281173cded5dea26e5d23b1153295d065", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "LeveragedNTokenAdapter", "coverageMap": {"branches": {"189": {}, "190": {}, "191": {}, "199": {}, "200": {}, "204": {}, "205": {}, "206": {}, "207": {}, "208": {}, "209": {}, "210": {}, "211": {}, "212": {}, "46": {"LeveragedNTokenAdapter.doLeveragedNToken": {"14": [1190, 1214, true], "15": [1262, 1327, true]}, "LeveragedNTokenAdapter.notionalCallback": {"16": [1748, 1779, false], "17": [1783, 1806, true], "18": [1947, 1971, false], "19": [2480, 2509, false], "20": [2636, 2651, true]}}, "81": {}}, "statements": {"189": {}, "190": {}, "191": {}, "199": {}, "200": {}, "204": {}, "205": {}, "206": {}, "207": {}, "208": {}, "209": {}, "210": {}, "211": {}, "212": {}, "46": {"LeveragedNTokenAdapter.doLeveragedNToken": {"0": [1182, 1215], "1": [1254, 1328], "2": [1454, 1581]}, "LeveragedNTokenAdapter.notionalCallback": {"3": [1740, 1832], "4": [1973, 1980], "5": [2149, 2209], "6": [2219, 2257], "7": [2267, 2312], "8": [2322, 2365], "9": [2430, 2465], "10": [2628, 2652], "11": [2666, 2718], "12": [2749, 2805], "13": [2826, 2894]}}, "81": {}}}, "dependencies": ["AggregatorInterface", "AggregatorV2V3Interface", "AggregatorV3Interface", "IPrimeCashHoldingsOracle", "IRewarder", "IVaultAccountAction", "IVaultAccountHealth", "IVaultAction", "IVaultController", "IVaultLiquidationAction", "NotionalCalculations", "NotionalCallback", "NotionalGovernance", "NotionalProxy", "NotionalTreasury", "NotionalViews", "nERC1155Interface", "nTokenERC20"], "deployedBytecode": "60806040526004361061003f5760003560e01c806306fdde0314610044578063221c3b4c1461006f578063a5b77b6b14610091578063aa1a0cae146100a6575b600080fd5b34801561005057600080fd5b506100596100c6565b6040516100669190610a7f565b60405180910390f35b34801561007b57600080fd5b506100846100ff565b6040516100669190610a6b565b6100a461009f36600461067c565b610123565b005b3480156100b257600080fd5b506100a46100c13660046105f3565b610254565b6040518060400160405280601881526020017f4c6576657261676564204e546f6b656e2041646170746572000000000000000081525081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001821461013057600080fd5b60028383600081811061013f57fe5b90506020028101906101519190610af2565b61015f9060208101906106f1565b600681111561016a57fe5b1461017457600080fd5b60008383600081811061018357fe5b90506020028101906101959190610af2565b6101a690604081019060200161078f565b826040516020016101b8929190610ade565b60408051601f1981840301815290829052635950d8e960e01b825291506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635950d8e990349061021c903390899089908890600401610876565b6000604051808303818588803b15801561023557600080fd5b505af1158015610249573d6000803e3d6000fd5b505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561029457506001600160a01b03841630145b6102b95760405162461bcd60e51b81526004016102b090610a92565b60405180910390fd5b806102c35761055a565b60006102d18284018461073f565b60408051600180825281830190925291925060009190816020015b6102f4610560565b8152602001906001900390816102ec57905050905060068160008151811061031857fe5b602002602001015160000190600681111561032f57fe5b9081600681111561033c57fe5b90525081518151829060009061034e57fe5b60200260200101516020019061ffff16908161ffff168152505060008160008151811061037757fe5b6020026020010151606001818152505060008160008151811061039657fe5b602002602001015160800190151590811515815250506001816000815181106103bb57fe5b602002602001015160a00190151590811515815250508160200151600014156104b457815160405163fc1b134560e01b81526000916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163fc1b13459161042f918a90600401610ac1565b60606040518083038186803b15801561044757600080fd5b505afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610712565b505090506000811361049057600080fd5b808260008151811061049e57fe5b60200260200101516040018181525050506104d7565b8160200151816000815181106104c657fe5b602002602001015160400181815250505b604051635950d8e960e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635950d8e9906105259088908590600401610994565b600060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b5050505050505b50505050565b6040805160e081019091528060008152602001600061ffff1681526020016000815260200160008152602001600015158152602001600015158152602001606081525090565b80356001600160a01b03811681146105bd57600080fd5b919050565b803580151581146105bd57600080fd5b8035600781106105bd57600080fd5b803561ffff811681146105bd57600080fd5b60008060008060608587031215610608578384fd5b610611856105a6565b935061061f602086016105a6565b9250604085013567ffffffffffffffff8082111561063b578384fd5b818701915087601f83011261064e578384fd5b81358181111561065c578485fd5b88602082850101111561066d578485fd5b95989497505060200194505050565b600080600060408486031215610690578283fd5b833567ffffffffffffffff808211156106a7578485fd5b818601915086601f8301126106ba578485fd5b8135818111156106c8578586fd5b87602080830285010111156106db578586fd5b6020928301989097509590910135949350505050565b600060208284031215610702578081fd5b61070b826105d2565b9392505050565b600080600060608486031215610726578283fd5b8351925060208401519150604084015190509250925092565b600060408284031215610750578081fd5b6040516040810181811067ffffffffffffffff8211171561076d57fe5b604052610779836105e1565b8152602083013560208201528091505092915050565b6000602082840312156107a0578081fd5b61070b826105e1565b81835260006001600160fb1b038311156107c1578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561080c578151875295820195908201906001016107f0565b509495945050505050565b15159052565b60008151808452815b8181101561084257602081850181015186830182015201610826565b818111156108535782602083870101525b50601f01601f19169290920160200192915050565b6007811061087257fe5b9052565b6001600160a01b038516815260606020808301829052828201859052600091906080908185018782028601830189865b8a81101561097157888303607f190184528135368d900360de190181126108cb578889fd5b8c0160e06108e1856108dc846105d2565b610868565b61ffff6108ef8884016105e1565b16858801526040828101359086015288820135898601526109118883016105c2565b61091d89870182610817565b5060a061092b8184016105c2565b61093782880182610817565b505060c061094781840184610b1a565b9350828288015261095b83880185836107a9565b97890197965050509286019250506001016108a6565b50508681036040880152610985818961081d565b9b9a5050505050505050505050565b6001600160a01b0383168152606060208083018290528351838301819052600092916080918286019080830287018401888401875b83811015610a4957607f198a8403018552815160e06109e9858351610868565b8188015161ffff168589015260408083015190860152898201518a8601528882015115158986015260a08083015115159086015260c091820151918501819052610a35818601836107dd565b9688019694505050908501906001016109c9565b50508781036040890152610a5d8782610b11565b9a9950505050505050505050565b6001600160a01b0391909116815260200190565b60006020825261070b602083018461081d565b602080825260159082015274556e617574686f72697a65642063616c6c6261636b60581b604082015260600190565b61ffff9290921682526001600160a01b0316602082015260400190565b61ffff929092168252602082015260400190565b6000823560de19833603018112610b07578182fd5b9190910192915050565b90815260200190565b6000808335601e19843603018112610b30578283fd5b830160208101925035905067ffffffffffffffff811115610b5057600080fd5b602081023603831315610b6257600080fd5b925092905056fea264697066735822122087b06901dc7207739cf8e87cb4cce134362f7e0e52f3fc2e0f8e2b0000a6e39964736f6c63430007060033", "deployedSourceMap": "233:2670:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1030:558::-;;;;;;:::i;:::-;;:::i;:::-;;1594:1307;;;;;;;;;;-1:-1:-1;1594:1307:46;;;;;:::i;:::-;;:::i;387:56::-;;;;;;;;;;;;;;;;;;;:::o;449:39::-;;;:::o;1030:558::-;1213:1;1190:24;;1182:33;;;;;;1292:35;1262:12;;1275:1;1262:15;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;;;;:::i;:::-;:65;;;;;;;;;1254:74;;;;;;1359:25;1398:12;;1411:1;1398:15;;;;;;;;;;;;;;;;;;:::i;:::-;:26;;;;;;;;;:::i;:::-;1426:17;1387:57;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1387:57:46;;;;;;;;;;-1:-1:-1;;;1454:127:46;;1387:57;-1:-1:-1;;;;;;1454:8:46;:47;;;;1509:9;;1454:127;;1533:10;;1545:12;;;;1387:57;;1454:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1030:558;;;;:::o;1594:1307::-;1748:10;-1:-1:-1;;;;;1770:8:46;1748:31;;:58;;;;-1:-1:-1;;;;;;1783:23:46;;1801:4;1783:23;1748:58;1740:92;;;;-1:-1:-1;;;1740:92:46;;;;;;;:::i;:::-;;;;;;;;;1947:24;1943:37;;1973:7;;1943:37;1990:23;2016:39;;;;2027:12;2016:39;:::i;:::-;2107:32;;;2137:1;2107:32;;;;;;;;;1990:65;;-1:-1:-1;2065:39:46;;2107:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2065:74;;2172:37;2149:6;2156:1;2149:9;;;;;;;;;;;;;;:20;;:60;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2242:15:46;;2219:9;;:6;;2242:15;;2219:9;;;;;;;;;;:20;;:38;;;;;;;;;;;2311:1;2267:6;2274:1;2267:9;;;;;;;;;;;;;;:41;;:45;;;;;2360:5;2322:6;2329:1;2322:9;;;;;;;;;;;;;;:35;;:43;;;;;;;;;;;2461:4;2430:6;2437:1;2430:9;;;;;;;;;;;;;;:28;;:35;;;;;;;;;;;2480:4;:24;;;2508:1;2480:29;2476:340;;;2589:15;;2562:52;;-1:-1:-1;;;2562:52:46;;2526:18;;-1:-1:-1;;;;;2562:8:46;:26;;;;:52;;2606:7;;2562:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2525:89;;;;2650:1;2636:11;:15;2628:24;;;;;;2706:11;2666:6;2673:1;2666:9;;;;;;;;;;;;;;:29;;:52;;;;;2476:340;;;;2781:4;:24;;;2749:6;2756:1;2749:9;;;;;;;;;;;;;;:29;;:56;;;;;2476:340;2826:68;;-1:-1:-1;;;2826:68:46;;-1:-1:-1;;;;;2826:8:46;:47;;;;:68;;2874:7;;2883:6;;2826:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1594:1307;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:213:-;84:20;;-1:-1:-1;;;;;133:31:213;;123:42;;113:2;;179:1;176;169:12;113:2;65:124;;;:::o;194:162::-;261:20;;317:13;;310:21;300:32;;290:2;;346:1;343;336:12;361:161;447:20;;496:1;486:12;;476:2;;512:1;509;502:12;527:161;596:20;;656:6;645:18;;635:29;;625:2;;678:1;675;668:12;693:793;;;;;858:2;846:9;837:7;833:23;829:32;826:2;;;879:6;871;864:22;826:2;907:31;928:9;907:31;:::i;:::-;897:41;;957:40;993:2;982:9;978:18;957:40;:::i;:::-;947:50;;1048:2;1037:9;1033:18;1020:32;1071:18;1112:2;1104:6;1101:14;1098:2;;;1133:6;1125;1118:22;1098:2;1176:6;1165:9;1161:22;1151:32;;1221:7;1214:4;1210:2;1206:13;1202:27;1192:2;;1248:6;1240;1233:22;1192:2;1293;1280:16;1319:2;1311:6;1308:14;1305:2;;;1340:6;1332;1325:22;1305:2;1390:7;1385:2;1376:6;1372:2;1368:15;1364:24;1361:37;1358:2;;;1416:6;1408;1401:22;1358:2;816:670;;;;-1:-1:-1;;1452:2:213;1444:11;;-1:-1:-1;;;816:670:213:o;1491:786::-;;;;1699:2;1687:9;1678:7;1674:23;1670:32;1667:2;;;1720:6;1712;1705:22;1667:2;1765:9;1752:23;1794:18;1835:2;1827:6;1824:14;1821:2;;;1856:6;1848;1841:22;1821:2;1899:6;1888:9;1884:22;1874:32;;1944:7;1937:4;1933:2;1929:13;1925:27;1915:2;;1971:6;1963;1956:22;1915:2;2016;2003:16;2042:2;2034:6;2031:14;2028:2;;;2063:6;2055;2048:22;2028:2;2126:7;2119:4;2111;2103:6;2099:17;2095:2;2091:26;2087:37;2084:50;2081:2;;;2152:6;2144;2137:22;2081:2;2188:4;2180:13;;;;2212:6;;-1:-1:-1;2250:20:213;;;;2237:34;;1657:620;-1:-1:-1;;;;1657:620:213:o;2282:237::-;;2417:2;2405:9;2396:7;2392:23;2388:32;2385:2;;;2438:6;2430;2423:22;2385:2;2466:47;2503:9;2466:47;:::i;:::-;2456:57;2375:144;-1:-1:-1;;;2375:144:213:o;2524:314::-;;;;2679:2;2667:9;2658:7;2654:23;2650:32;2647:2;;;2700:6;2692;2685:22;2647:2;2734:9;2728:16;2718:26;;2784:2;2773:9;2769:18;2763:25;2753:35;;2828:2;2817:9;2813:18;2807:25;2797:35;;2637:201;;;;;:::o;2843:517::-;;2985:2;2973:9;2964:7;2960:23;2956:32;2953:2;;;3006:6;2998;2991:22;2953:2;3044;3038:9;3086:2;3078:6;3074:15;3155:6;3143:10;3140:22;3119:18;3107:10;3104:34;3101:62;3098:2;;;3166:9;3098:2;3193;3186:22;3232:30;3252:9;3232:30;:::i;:::-;3224:6;3217:46;3324:2;3313:9;3309:18;3296:32;3291:2;3283:6;3279:15;3272:57;3348:6;3338:16;;;2943:417;;;;:::o;3365:196::-;;3476:2;3464:9;3455:7;3451:23;3447:32;3444:2;;;3497:6;3489;3482:22;3444:2;3525:30;3545:9;3525:30;:::i;3566:369::-;3660:19;;;3566:369;-1:-1:-1;;;;;3691:31:213;;3688:2;;;3737:3;3732;3725:16;3688:2;3780:4;3772:6;3768:17;3830:8;3823:5;3816:4;3811:3;3807:14;3794:45;3862:18;;;;3882:4;3858:29;3896:15;;;-1:-1:-1;3858:29:213;;3650:285;-1:-1:-1;3650:285:213:o;3940:443::-;;4037:5;4031:12;4064:6;4059:3;4052:19;4090:4;4119:2;4114:3;4110:12;4103:19;;4156:2;4149:5;4145:14;4177:3;4189:169;4203:6;4200:1;4197:13;4189:169;;;4264:13;;4252:26;;4298:12;;;;4333:15;;;;4225:1;4218:9;4189:169;;;-1:-1:-1;4374:3:213;;4007:376;-1:-1:-1;;;;;4007:376:213:o;4388:93::-;4460:13;4453:21;4441:34;;4431:50::o;4486:477::-;;4567:5;4561:12;4594:6;4589:3;4582:19;4619:3;4631:162;4645:6;4642:1;4639:13;4631:162;;;4707:4;4763:13;;;4759:22;;4753:29;4735:11;;;4731:20;;4724:59;4660:12;4631:162;;;4811:6;4808:1;4805:13;4802:2;;;4877:3;4870:4;4861:6;4856:3;4852:16;4848:27;4841:40;4802:2;-1:-1:-1;4945:2:213;4924:15;-1:-1:-1;;4920:29:213;4911:39;;;;4952:4;4907:50;;4537:426;-1:-1:-1;;4537:426:213:o;4968:142::-;5060:1;5053:5;5050:12;5040:2;;5066:9;5040:2;5086:18;;5030:80::o;5115:2220::-;-1:-1:-1;;;;;5534:32:213;;5516:51;;5464:2;5586;5604:18;;;5597:30;;;5489:18;;;5662:22;;;5115:2220;;5464:2;5703:3;;5722:18;;;5782:15;;;5767:31;;5763:40;;5826:6;5115:2220;5863:1354;5877:6;5874:1;5871:13;5863:1354;;;5942:22;;;-1:-1:-1;;5938:37:213;5926:50;;6015:20;;6090:14;6086:27;;;-1:-1:-1;;6082:42:213;6058:67;;6048:2;;6142:4;6136;6129:18;6048:2;6175:31;;6229:4;6246:89;6328:6;6283:43;6175:31;6283:43;:::i;:::-;6246:89;:::i;:::-;6413:6;6376:35;6407:2;6400:5;6396:14;6376:35;:::i;:::-;6372:48;6355:15;;;6348:73;6444:4;6498:14;;;6485:28;6468:15;;;6461:53;6564:14;;;6551:28;6534:15;;;6527:53;6608:33;6626:14;;;6608:33;:::i;:::-;6654:43;6693:2;6685:6;6681:15;6672:7;6654:43;:::i;:::-;;6720:4;6752:33;6781:2;6774:5;6770:14;6752:33;:::i;:::-;6798:43;6837:2;6829:6;6825:15;6816:7;6798:43;:::i;:::-;;;6864:4;6915:71;6982:2;6975:5;6971:14;6964:5;6915:71;:::i;:::-;6881:105;;7023:2;7018;7010:6;7006:15;6999:27;7049:88;7133:2;7125:6;7121:15;7107:12;7093;7049:88;:::i;:::-;7195:12;;;;7039:98;-1:-1:-1;;;7160:15:213;;;;-1:-1:-1;;5899:1:213;5892:9;5863:1354;;;5867:3;;7267:9;7259:6;7255:22;7248:4;7237:9;7233:20;7226:52;7295:34;7322:6;7314;7295:34;:::i;:::-;7287:42;5444:1891;-1:-1:-1;;;;;;;;;;;5444:1891:213:o;7340:1886::-;-1:-1:-1;;;;;7793:32:213;;7775:51;;7723:2;7845;7863:18;;;7856:30;;;7935:13;;7748:18;;;7957:22;;;7340:1886;;7723:2;7998:3;;8017:18;;;;8077:15;;;8062:31;;8058:40;;8121:15;;;7340:1886;8167:909;8181:6;8178:1;8175:13;8167:909;;;8274:3;8270:8;8258:9;8250:6;8246:22;8242:37;8237:3;8230:50;8309:6;8303:13;8339:4;8356:55;8404:6;8399:2;8393:9;8356:55;:::i;:::-;8458:11;;;8452:18;8472:6;8448:31;8431:15;;;8424:56;8503:4;8550:11;;;8544:18;8527:15;;;8520:43;8606:11;;;8600:18;8583:15;;;8576:43;8676:11;;;8670:18;8663:26;8656:34;8639:15;;;8632:59;8714:4;8775:11;;;8769:18;8762:26;8755:34;8738:15;;;8731:59;8813:4;8856:11;;;8850:18;8888:15;;;8881:27;;;8931:65;8980:15;;;8850:18;8931:65;:::i;:::-;9054:12;;;;8921:75;-1:-1:-1;;;9019:15:213;;;;8203:1;8196:9;8167:909;;;8171:3;;9126:9;9118:6;9114:22;9107:4;9096:9;9092:20;9085:52;9154:66;9215:4;9207:6;9154:66;:::i;:::-;9146:74;7703:1523;-1:-1:-1;;;;;;;;;;7703:1523:213:o;9231:226::-;-1:-1:-1;;;;;9418:32:213;;;;9400:51;;9388:2;9373:18;;9355:102::o;9462:221::-;;9611:2;9600:9;9593:21;9631:46;9673:2;9662:9;9658:18;9650:6;9631:46;:::i;9688:345::-;9890:2;9872:21;;;9929:2;9909:18;;;9902:30;-1:-1:-1;;;9963:2:213;9948:18;;9941:51;10024:2;10009:18;;9862:171::o;10038:285::-;10240:6;10228:19;;;;10210:38;;-1:-1:-1;;;;;10284:32:213;10279:2;10264:18;;10257:60;10198:2;10183:18;;10165:158::o;10328:259::-;10530:6;10518:19;;;;10500:38;;10569:2;10554:18;;10547:34;10488:2;10473:18;;10455:132::o;10592:348::-;;10760:11;10747:25;10854:3;10850:8;10839;10823:14;10819:29;10815:44;10795:18;10791:69;10781:2;;10877:4;10871;10864:18;10781:2;10901:33;;;;;10711:229;-1:-1:-1;;10711:229:213:o;10945:167::-;11049:19;;;11101:4;11092:14;;11039:73::o;11117:540::-;;;11260:3;11247:17;11346:2;11342:7;11331:8;11315:14;11311:29;11307:43;11287:18;11283:68;11273:2;;11369:5;11362;11355:20;11273:2;11401:33;;11505:4;11492:18;;;-1:-1:-1;11453:21:213;;-1:-1:-1;11533:18:213;11522:30;;11519:2;;;11565:1;11562;11555:12;11519:2;11627:4;11619:6;11615:17;11599:14;11595:38;11585:8;11581:53;11578:2;;;11647:1;11644;11637:12;11578:2;11211:446;;;;;:::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"doLeveragedNToken((uint8,uint16,uint256,uint256,bool,bool,bytes32[])[],uint256)": {"notice": "Batch Balance and Trade Action does not allow for margin deposit along with converting cash balances to nTokens. Therefore, we use two authorized callback calls here to deposit margin, borrow cash, and then convert some amount of cash to nTokens in a single transaction. These methods use the `WithCallback` method that allows for Notional to perform ERC20 transfers to take advantage of any existing token approvals."}}, "version": 1}, "offset": [233, 2903], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x221C3B4C EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xA5B77B6B EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xAA1A0CAE EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x84 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0xA4 PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA4 PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6576657261676564204E546F6B656E20416461707465720000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP3 EQ PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x13F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH2 0x15F SWAP1 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x16A JUMPI INVALID JUMPDEST EQ PUSH2 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x183 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xAF2 JUMP JUMPDEST PUSH2 0x1A6 SWAP1 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x78F JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B8 SWAP3 SWAP2 SWAP1 PUSH2 0xADE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH4 0x5950D8E9 PUSH1 0xE0 SHL DUP3 MSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5950D8E9 SWAP1 CALLVALUE SWAP1 PUSH2 0x21C SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x876 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x294 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ JUMPDEST PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B0 SWAP1 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2C3 JUMPI PUSH2 0x55A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D1 DUP3 DUP5 ADD DUP5 PUSH2 0x73F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x2F4 PUSH2 0x560 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2EC JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x6 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x318 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD SWAP1 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x32F JUMPI INVALID JUMPDEST SWAP1 DUP2 PUSH1 0x6 DUP2 GT ISZERO PUSH2 0x33C JUMPI INVALID JUMPDEST SWAP1 MSTORE POP DUP2 MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x34E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD SWAP1 PUSH2 0xFFFF AND SWAP1 DUP2 PUSH2 0xFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x377 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x396 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x4B4 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0xFC1B1345 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xFC1B1345 SWAP2 PUSH2 0x42F SWAP2 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x712 JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x49E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0x4D7 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x4C6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5950D8E9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5950D8E9 SWAP1 PUSH2 0x525 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x994 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x7 DUP2 LT PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x608 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x611 DUP6 PUSH2 0x5A6 JUMP JUMPDEST SWAP4 POP PUSH2 0x61F PUSH1 0x20 DUP7 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x63B JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x64E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x65C JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x66D JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x690 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6A7 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6BA JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6C8 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x6DB JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x702 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x70B DUP3 PUSH2 0x5D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x726 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x750 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x76D JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE PUSH2 0x779 DUP4 PUSH2 0x5E1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x70B DUP3 PUSH2 0x5E1 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x7C1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7F0 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x842 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x826 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x853 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 LT PUSH2 0x872 JUMPI INVALID JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x80 SWAP1 DUP2 DUP6 ADD DUP8 DUP3 MUL DUP7 ADD DUP4 ADD DUP10 DUP7 JUMPDEST DUP11 DUP2 LT ISZERO PUSH2 0x971 JUMPI DUP9 DUP4 SUB PUSH1 0x7F NOT ADD DUP5 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP14 SWAP1 SUB PUSH1 0xDE NOT ADD DUP2 SLT PUSH2 0x8CB JUMPI DUP9 DUP10 REVERT JUMPDEST DUP13 ADD PUSH1 0xE0 PUSH2 0x8E1 DUP6 PUSH2 0x8DC DUP5 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x868 JUMP JUMPDEST PUSH2 0xFFFF PUSH2 0x8EF DUP9 DUP5 ADD PUSH2 0x5E1 JUMP JUMPDEST AND DUP6 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP7 ADD MSTORE DUP9 DUP3 ADD CALLDATALOAD DUP10 DUP7 ADD MSTORE PUSH2 0x911 DUP9 DUP4 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x91D DUP10 DUP8 ADD DUP3 PUSH2 0x817 JUMP JUMPDEST POP PUSH1 0xA0 PUSH2 0x92B DUP2 DUP5 ADD PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x937 DUP3 DUP9 ADD DUP3 PUSH2 0x817 JUMP JUMPDEST POP POP PUSH1 0xC0 PUSH2 0x947 DUP2 DUP5 ADD DUP5 PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP DUP3 DUP3 DUP9 ADD MSTORE PUSH2 0x95B DUP4 DUP9 ADD DUP6 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP8 DUP10 ADD SWAP8 SWAP7 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x8A6 JUMP JUMPDEST POP POP DUP7 DUP2 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x985 DUP2 DUP10 PUSH2 0x81D JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x80 SWAP2 DUP3 DUP7 ADD SWAP1 DUP1 DUP4 MUL DUP8 ADD DUP5 ADD DUP9 DUP5 ADD DUP8 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA49 JUMPI PUSH1 0x7F NOT DUP11 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0xE0 PUSH2 0x9E9 DUP6 DUP4 MLOAD PUSH2 0x868 JUMP JUMPDEST DUP2 DUP9 ADD MLOAD PUSH2 0xFFFF AND DUP6 DUP10 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP7 ADD MSTORE DUP10 DUP3 ADD MLOAD DUP11 DUP7 ADD MSTORE DUP9 DUP3 ADD MLOAD ISZERO ISZERO DUP10 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD SWAP2 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0xA35 DUP2 DUP7 ADD DUP4 PUSH2 0x7DD JUMP JUMPDEST SWAP7 DUP9 ADD SWAP7 SWAP5 POP POP POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x9C9 JUMP JUMPDEST POP POP DUP8 DUP2 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0xA5D DUP8 DUP3 PUSH2 0xB11 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x70B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x81D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x556E617574686F72697A65642063616C6C6261636B PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0xFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xB07 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xB30 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xB0 PUSH10 0x1DC7207739CF8E87CB4 0xCC 0xE1 CALLVALUE CALLDATASIZE 0x2F PUSH31 0xE52F3FC2E0F8E2B0000A6E39964736F6C6343000706003300000000000000 ", "sha1": "c01d9baa07cae4256b884fea97663ebdcbeb890d", "source": "// SPDX-License-Identifier: BSUL-1.1\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport \"../../global/Types.sol\";\nimport \"../../../interfaces/notional/NotionalProxy.sol\";\nimport \"../../../interfaces/notional/NotionalCallback.sol\";\n\ncontract LeveragedNTokenAdapter is NotionalCallback {\n    struct EncodedData {\n        uint16 currencyId;\n        uint256 depositActionAmount;\n    }\n\n    string public constant name = \"Leveraged NToken Adapter\";\n    NotionalProxy public immutable Notional;\n\n    constructor(NotionalProxy notional) { Notional = notional; }\n\n    /**\n     * Batch Balance and Trade Action does not allow for margin deposit along with converting cash\n     * balances to nTokens. Therefore, we use two authorized callback calls here to deposit margin,\n     * borrow cash, and then convert some amount of cash to nTokens in a single transaction. These\n     * methods use the `WithCallback` method that allows for Notional to perform ERC20 transfers\n     * to take advantage of any existing token approvals.\n     */\n    function doLeveragedNToken(\n        BalanceActionWithTrades[] calldata borrowAction,\n        uint256 convertCashAmount\n    ) external payable {\n        require(borrowAction.length == 1); // dev: borrow action length\n        require(borrowAction[0].actionType == DepositActionType.DepositUnderlying); // dev: deposit type\n        bytes memory callbackData = abi.encode(borrowAction[0].currencyId, convertCashAmount);\n        Notional.batchBalanceAndTradeActionWithCallback{value: msg.value}(\n            msg.sender, borrowAction, callbackData\n        );\n    }\n\n    function notionalCallback(\n        address sender,\n        address account,\n        bytes calldata callbackData\n    ) external override {\n        require(msg.sender == address(Notional) && sender == address(this), \"Unauthorized callback\");\n        // If callback data is empty then exit, this is the second callback to convert cash balances\n        if (callbackData.length == 0) return;\n\n        EncodedData memory data = abi.decode(callbackData, (EncodedData));\n        BalanceActionWithTrades[] memory action = new BalanceActionWithTrades[](1);\n        action[0].actionType = DepositActionType.ConvertCashToNToken;\n        action[0].currencyId = data.currencyId;\n        action[0].withdrawAmountInternalPrecision = 0;\n        action[0].withdrawEntireCashBalance = false;\n        // NOTE: this must always be set to true in v3\n        action[0].redeemToUnderlying = true;\n\n        if (data.depositActionAmount == 0) {\n            (int256 cashBalance, /* */, /* */) = Notional.getAccountBalance(data.currencyId, account);\n            require(cashBalance > 0);\n            action[0].depositActionAmount = uint256(cashBalance);\n        } else {\n            action[0].depositActionAmount = data.depositActionAmount;\n        }\n\n        Notional.batchBalanceAndTradeActionWithCallback(account, action, \"\");\n    }\n}", "sourceMap": "233:2670:46:-:0;;;495:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;533:19;;-1:-1:-1;;;;;;533:19:46;;;233:2670;;14:333:213;;160:2;148:9;139:7;135:23;131:32;128:2;;;181:6;173;166:22;128:2;212:16;;-1:-1:-1;;;;;257:31:213;;247:42;;237:2;;308:6;300;293:22;237:2;336:5;118:229;-1:-1:-1;;;118:229:213:o;:::-;233:2670:46;;;;;;;;;;;", "sourcePath": "contracts/external/adapters/LeveragedNToken.sol", "type": "contract", "deployment": {"address": "0x25ee011B6Af5537eCD520f40CA759899a064CfCF", "chainid": "1", "blockHeight": 19353427}}