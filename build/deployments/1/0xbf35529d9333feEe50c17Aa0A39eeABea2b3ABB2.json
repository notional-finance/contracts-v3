{"abi": [{"inputs": [{"internalType": "contract NotionalProxy", "name": "notional", "type": "address"}, {"internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"internalType": "contract IERC20", "name": "incentive_token", "type": "address"}, {"internalType": "uint128", "name": "_emissionRatePerYear", "type": "uint128"}, {"internalType": "uint32", "name": "_endTime", "type": "uint32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "emissionRatePerYear", "type": "uint256"}, {"indexed": false, "internalType": "uint256", "name": "endTime", "type": "uint256"}], "name": "RewardEmissionUpdate", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "rewardToken", "type": "address"}, {"indexed": true, "internalType": "address", "name": "account", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "RewardTransfer", "type": "event"}, {"inputs": [], "name": "CURRENCY_ID", "outputs": [{"internalType": "uint16", "name": "", "type": "uint16"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "NOTIONAL", "outputs": [{"internalType": "contract NotionalProxy", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "NTOKEN_ADDRESS", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "REWARD_TOKEN", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "REWARD_TOKEN_DECIMALS", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "accumulatedRewardPerNToken", "outputs": [{"internalType": "uint128", "name": "", "type": "uint128"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint16", "name": "currencyId", "type": "uint16"}, {"internalType": "uint256", "name": "nTokenBalanceBefore", "type": "uint256"}, {"internalType": "uint256", "name": "nTokenBalanceAfter", "type": "uint256"}, {"internalType": "uint256", "name": "priorNTokenSupply", "type": "uint256"}], "name": "claimRewards", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "nTokenBalanceAtDetach", "type": "uint256"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}], "name": "claimRewardsDirect", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "detach", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "detached", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "emissionRatePerYear", "outputs": [{"internalType": "uint128", "name": "", "type": "uint128"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "endTime", "outputs": [{"internalType": "uint32", "name": "", "type": "uint32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "nTokenBalanceAtDetach", "type": "uint256"}, {"internalType": "bytes32[]", "name": "proof", "type": "bytes32[]"}], "name": "getAccountRewardClaim", "outputs": [{"internalType": "uint256", "name": "rewardToClaim", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint32", "name": "blockTime", "type": "uint32"}], "name": "getAccountRewardClaim", "outputs": [{"internalType": "uint256", "name": "rewardToClaim", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "lastAccumulatedTime", "outputs": [{"internalType": "uint32", "name": "", "type": "uint32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "merkleRoot", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "token", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "recover", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "rewardDebtPerAccount", "outputs": [{"internalType": "uint128", "name": "", "type": "uint128"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint128", "name": "_emissionRatePerYear", "type": "uint128"}, {"internalType": "uint32", "name": "_endTime", "type": "uint32"}], "name": "setIncentiveEmissionRate", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}], "name": "setMerkleRoot", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"1": "/Users/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/cryptography/MerkleProof.sol", "117": "contracts/proxy/beacon/IBeacon.sol", "123": "interfaces/IEIP20NonStandard.sol", "125": "interfaces/IERC20.sol", "127": "interfaces/WETH9.sol", "130": "interfaces/chainlink/AggregatorInterface.sol", "131": "interfaces/chainlink/AggregatorV2V3Interface.sol", "132": "interfaces/chainlink/AggregatorV3Interface.sol", "137": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "138": "interfaces/notional/IRewarder.sol", "141": "interfaces/notional/IVaultController.sol", "142": "interfaces/notional/NotionalCalculations.sol", "144": "interfaces/notional/NotionalGovernance.sol", "145": "interfaces/notional/NotionalProxy.sol", "146": "interfaces/notional/NotionalTreasury.sol", "147": "interfaces/notional/NotionalViews.sol", "148": "interfaces/notional/nERC1155Interface.sol", "149": "interfaces/notional/nTokenERC20.sol", "35": "contracts/external/adapters/SecondaryRewarder.sol", "47": "contracts/global/Constants.sol", "48": "contracts/global/Deployments.sol", "52": "contracts/global/Types.sol", "60": "contracts/internal/balances/protocols/GenericToken.sol", "89": "contracts/math/Bitmap.sol", "90": "contracts/math/FloatingPoint.sol", "91": "contracts/math/SafeInt256.sol", "92": "contracts/math/SafeUint256.sol"}, "ast": {"absolutePath": "contracts/external/adapters/SecondaryRewarder.sol", "exportedSymbols": {"Constants": [67348], "FloatingPoint": [74769], "GenericToken": [34082], "IEIP20NonStandard": [74910], "IERC20": [74993], "IRewarder": [74005], "MerkleProof": [74840], "NotionalProxy": [70968], "SafeInt256": [69187], "SafeUint256": [69708], "SecondaryRewarder": [22577]}, "id": 22578, "license": "GPL-3.0-only", "nodeType": "SourceUnit", "nodes": [{"id": 21771, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "41:23:35"}, {"absolutePath": "contracts/internal/balances/protocols/GenericToken.sol", "file": "../../internal/balances/protocols/GenericToken.sol", "id": 21773, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 34083, "src": "66:80:35", "symbolAliases": [{"foreign": {"id": 21772, "name": "GenericToken", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "74:12:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/notional/IRewarder.sol", "file": "../../../interfaces/notional/IRewarder.sol", "id": 21775, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 74006, "src": "147:69:35", "symbolAliases": [{"foreign": {"id": 21774, "name": "IRewarder", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "155:9:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/notional/NotionalProxy.sol", "file": "../../../interfaces/notional/NotionalProxy.sol", "id": 21777, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 70969, "src": "217:77:35", "symbolAliases": [{"foreign": {"id": 21776, "name": "NotionalProxy", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "225:13:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/IERC20.sol", "file": "../../../interfaces/IERC20.sol", "id": 21779, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 74994, "src": "295:54:35", "symbolAliases": [{"foreign": {"id": 21778, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "303:6:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "interfaces/IEIP20NonStandard.sol", "file": "../../../interfaces/IEIP20NonStandard.sol", "id": 21781, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 74911, "src": "350:76:35", "symbolAliases": [{"foreign": {"id": 21780, "name": "IEIP20NonStandard", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "358:17:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/global/Constants.sol", "file": "../../global/Constants.sol", "id": 21783, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 67349, "src": "427:53:35", "symbolAliases": [{"foreign": {"id": 21782, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "435:9:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeInt256.sol", "file": "../../math/SafeInt256.sol", "id": 21785, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 69188, "src": "481:53:35", "symbolAliases": [{"foreign": {"id": 21784, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "489:10:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeUint256.sol", "file": "../../math/SafeUint256.sol", "id": 21787, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 69709, "src": "535:55:35", "symbolAliases": [{"foreign": {"id": 21786, "name": "SafeUint256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "543:11:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/FloatingPoint.sol", "file": "../../math/FloatingPoint.sol", "id": 21789, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 74770, "src": "591:59:35", "symbolAliases": [{"foreign": {"id": 21788, "name": "FloatingPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "599:13:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "/Users/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/cryptography/MerkleProof.sol", "file": "@openzeppelin/contracts/cryptography/MerkleProof.sol", "id": 21791, "nodeType": "ImportDirective", "scope": 22578, "sourceUnit": 74841, "src": "651:81:35", "symbolAliases": [{"foreign": {"id": 21790, "name": "MerkleProof", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "659:11:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 21792, "name": "IRewarder", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 74005, "src": "764:9:35", "typeDescriptions": {"typeIdentifier": "t_contract$_IRewarder_$74005", "typeString": "contract IRewarder"}}, "id": 21793, "nodeType": "InheritanceSpecifier", "src": "764:9:35"}], "contractDependencies": [74005], "contractKind": "contract", "fullyImplemented": true, "id": 22577, "linearizedBaseContracts": [22577, 74005], "name": "SecondaryRewarder", "nodeType": "ContractDefinition", "nodes": [{"id": 21796, "libraryName": {"id": 21794, "name": "SafeUint256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 69708, "src": "786:11:35", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeUint256_$69708", "typeString": "library SafeUint256"}}, "nodeType": "UsingForDirective", "src": "780:30:35", "typeName": {"id": 21795, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "802:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"id": 21799, "libraryName": {"id": 21797, "name": "SafeInt256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 69187, "src": "821:10:35", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeInt256_$69187", "typeString": "library SafeInt256"}}, "nodeType": "UsingForDirective", "src": "815:28:35", "typeName": {"id": 21798, "name": "int256", "nodeType": "ElementaryTypeName", "src": "836:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"constant": false, "functionSelector": "858dccb3", "id": 21801, "mutability": "immutable", "name": "NOTIONAL", "nodeType": "VariableDeclaration", "scope": 22577, "src": "849:39:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}, "typeName": {"id": 21800, "name": "NotionalProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70968, "src": "849:13:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "visibility": "public"}, {"baseFunctions": [73932], "constant": false, "functionSelector": "1c921976", "id": 21804, "mutability": "immutable", "name": "NTOKEN_ADDRESS", "nodeType": "VariableDeclaration", "overrides": {"id": 21803, "nodeType": "OverrideSpecifier", "overrides": [], "src": "919:8:35"}, "scope": 22577, "src": "894:48:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21802, "name": "address", "nodeType": "ElementaryTypeName", "src": "894:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "99248ea7", "id": 21806, "mutability": "immutable", "name": "REWARD_TOKEN", "nodeType": "VariableDeclaration", "scope": 22577, "src": "948:37:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21805, "name": "address", "nodeType": "ElementaryTypeName", "src": "948:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "0330d663", "id": 21808, "mutability": "immutable", "name": "REWARD_TOKEN_DECIMALS", "nodeType": "VariableDeclaration", "scope": 22577, "src": "991:44:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 21807, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "991:5:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "public"}, {"baseFunctions": [73937], "constant": false, "functionSelector": "9d4be3f5", "id": 21811, "mutability": "immutable", "name": "CURRENCY_ID", "nodeType": "VariableDeclaration", "overrides": {"id": 21810, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1065:8:35"}, "scope": 22577, "src": "1041:44:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 21809, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "1041:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 21812, "nodeType": "StructuredDocumentation", "src": "1092:162:35", "text": "@notice When a rewarder is detached, it converts to an airdrop contract using the\n this merkleRoot that is set.\n @dev Uses a single storage slot"}, "functionSelector": "2eb4a7ab", "id": 21814, "mutability": "mutable", "name": "merkleRoot", "nodeType": "VariableDeclaration", "scope": 22577, "src": "1259:25:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 21813, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1259:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"baseFunctions": [73942], "constant": false, "documentation": {"id": 21815, "nodeType": "StructuredDocumentation", "src": "1352:84:35", "text": "@notice When true user needs to call contract directly to claim any rewards left"}, "functionSelector": "432cc1b3", "id": 21818, "mutability": "mutable", "name": "detached", "nodeType": "VariableDeclaration", "overrides": {"id": 21817, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1453:8:35"}, "scope": 22577, "src": "1441:29:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 21816, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1441:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 21819, "nodeType": "StructuredDocumentation", "src": "1477:127:35", "text": "@notice Marks the timestamp when incentives will end. Will always be less than block.timestamp\n if detached is true."}, "functionSelector": "3197cbb6", "id": 21821, "mutability": "mutable", "name": "endTime", "nodeType": "VariableDeclaration", "scope": 22577, "src": "1609:21:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 21820, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "1609:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "public"}, {"baseFunctions": [73996], "constant": false, "documentation": {"id": 21822, "nodeType": "StructuredDocumentation", "src": "1637:57:35", "text": "@notice Last time the contract accumulated the reward"}, "functionSelector": "4fd371e3", "id": 21825, "mutability": "mutable", "name": "lastAccumulatedTime", "nodeType": "VariableDeclaration", "overrides": {"id": 21824, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1713:8:35"}, "scope": 22577, "src": "1699:42:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 21823, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "1699:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "public"}, {"constant": false, "id": 21827, "mutability": "mutable", "name": "packedEmissionRatePerYear", "nodeType": "VariableDeclaration", "scope": 22577, "src": "1834:40:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}, "typeName": {"id": 21826, "name": "uint56", "nodeType": "ElementaryTypeName", "src": "1834:6:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "visibility": "private"}, {"baseFunctions": [73991], "constant": false, "documentation": {"id": 21828, "nodeType": "StructuredDocumentation", "src": "1881:76:35", "text": "@notice Aggregate tokens accumulated per nToken at `lastAccumulateTime` "}, "functionSelector": "9c07e54c", "id": 21831, "mutability": "mutable", "name": "accumulatedRewardPerNToken", "nodeType": "VariableDeclaration", "overrides": {"id": 21830, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2021:8:35"}, "scope": 22577, "src": "2006:50:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 21829, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "2006:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "public"}, {"constant": false, "documentation": {"id": 21832, "nodeType": "StructuredDocumentation", "src": "2063:58:35", "text": "@notice Reward debt per account stored in 18 decimals."}, "functionSelector": "7d43702f", "id": 21836, "mutability": "mutable", "name": "rewardDebtPerAccount", "nodeType": "VariableDeclaration", "scope": 22577, "src": "2126:55:35", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$", "typeString": "mapping(address => uint128)"}, "typeName": {"id": 21835, "keyType": {"id": 21833, "name": "address", "nodeType": "ElementaryTypeName", "src": "2134:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2126:27:35", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$", "typeString": "mapping(address => uint128)"}, "valueType": {"id": 21834, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "2145:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}}, "visibility": "public"}, {"body": {"id": 21849, "nodeType": "Block", "src": "2209:81:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21844, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21839, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2227:3:35", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 21840, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2227:10:35", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 21841, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21801, "src": "2241:8:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "id": 21842, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 70700, "src": "2241:14:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 21843, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2241:16:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2227:30:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79206f776e6572", "id": 21845, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2259:12:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d", "typeString": "literal_string \"Only owner\""}, "value": "Only owner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d", "typeString": "literal_string \"Only owner\""}], "id": 21838, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2219:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21846, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2219:53:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21847, "nodeType": "ExpressionStatement", "src": "2219:53:35"}, {"id": 21848, "nodeType": "PlaceholderStatement", "src": "2282:1:35"}]}, "id": 21850, "name": "onlyOwner", "nodeType": "ModifierDefinition", "parameters": {"id": 21837, "nodeType": "ParameterList", "parameters": [], "src": "2206:2:35"}, "src": "2188:102:35", "virtual": false, "visibility": "internal"}, {"body": {"id": 21864, "nodeType": "Block", "src": "2320:85:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 21859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 21853, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2338:3:35", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 21854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "2338:10:35", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"id": 21857, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21801, "src": "2360:8:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}], "id": 21856, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2352:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21855, "name": "address", "nodeType": "ElementaryTypeName", "src": "2352:7:35", "typeDescriptions": {}}}, "id": 21858, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2352:17:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2338:31:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4f6e6c79204e6f74696f6e616c", "id": 21860, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2371:15:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_42ffaab8889bb313b15d870102d74012723f22675216a01579bbc73c646fec46", "typeString": "literal_string \"Only Notional\""}, "value": "Only Notional"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_42ffaab8889bb313b15d870102d74012723f22675216a01579bbc73c646fec46", "typeString": "literal_string \"Only Notional\""}], "id": 21852, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2330:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21861, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2330:57:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21862, "nodeType": "ExpressionStatement", "src": "2330:57:35"}, {"id": 21863, "nodeType": "PlaceholderStatement", "src": "2397:1:35"}]}, "id": 21865, "name": "onlyNotional", "nodeType": "ModifierDefinition", "parameters": {"id": 21851, "nodeType": "ParameterList", "parameters": [], "src": "2317:2:35"}, "src": "2296:109:35", "virtual": false, "visibility": "internal"}, {"body": {"id": 21937, "nodeType": "Block", "src": "2614:496:35", "statements": [{"expression": {"id": 21880, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21878, "name": "NOTIONAL", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21801, "src": "2624:8:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21879, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21867, "src": "2635:8:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "src": "2624:19:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "id": 21881, "nodeType": "ExpressionStatement", "src": "2624:19:35"}, {"expression": {"id": 21884, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21882, "name": "CURRENCY_ID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21811, "src": "2653:11:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21883, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21869, "src": "2667:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "2653:24:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "id": 21885, "nodeType": "ExpressionStatement", "src": "2653:24:35"}, {"expression": {"id": 21891, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21886, "name": "NTOKEN_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21804, "src": "2687:14:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21889, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21869, "src": "2727:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 21887, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21867, "src": "2704:8:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "id": 21888, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "nTokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 73033, "src": "2704:22:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_address_$", "typeString": "function (uint16) view external returns (address)"}}, "id": 21890, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2704:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2687:51:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21892, "nodeType": "ExpressionStatement", "src": "2687:51:35"}, {"expression": {"id": 21898, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21893, "name": "REWARD_TOKEN", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21806, "src": "2748:12:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21896, "name": "incentive_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21871, "src": "2771:15:35", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}], "id": 21895, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2763:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21894, "name": "address", "nodeType": "ElementaryTypeName", "src": "2763:7:35", "typeDescriptions": {}}}, "id": 21897, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2763:24:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "2748:39:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 21899, "nodeType": "ExpressionStatement", "src": "2748:39:35"}, {"expression": {"id": 21909, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21900, "name": "REWARD_TOKEN_DECIMALS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21808, "src": "2797:21:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"arguments": [{"id": 21904, "name": "incentive_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21871, "src": "2836:15:35", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}], "id": 21903, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2828:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 21902, "name": "address", "nodeType": "ElementaryTypeName", "src": "2828:7:35", "typeDescriptions": {}}}, "id": 21905, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2828:24:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21901, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74993, "src": "2821:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$74993_$", "typeString": "type(contract IERC20)"}}, "id": 21906, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2821:32:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "id": 21907, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "decimals", "nodeType": "MemberAccess", "referencedDeclaration": 74924, "src": "2821:41:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$", "typeString": "function () view external returns (uint8)"}}, "id": 21908, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2821:43:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "2797:67:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 21910, "nodeType": "ExpressionStatement", "src": "2797:67:35"}, {"expression": {"id": 21916, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21911, "name": "packedEmissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21827, "src": "2875:25:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 21914, "name": "_emissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21873, "src": "2930:20:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 21912, "name": "FloatingPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74769, "src": "2903:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FloatingPoint_$74769_$", "typeString": "type(library FloatingPoint)"}}, "id": 21913, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "packTo56Bits", "nodeType": "MemberAccess", "referencedDeclaration": 74697, "src": "2903:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint56_$", "typeString": "function (uint256) pure returns (uint56)"}}, "id": 21915, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2903:48:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "src": "2875:76:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "id": 21917, "nodeType": "ExpressionStatement", "src": "2875:76:35"}, {"expression": {"id": 21924, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21918, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "2961:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 21921, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "2990:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 21922, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "2990:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21920, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2983:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 21919, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "2983:6:35", "typeDescriptions": {}}}, "id": 21923, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2983:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "2961:45:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "id": 21925, "nodeType": "ExpressionStatement", "src": "2961:45:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 21929, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21927, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "3024:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 21928, "name": "_endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21875, "src": "3046:8:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "3024:30:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c696420456e642054696d65", "id": 21930, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3056:18:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c2a330b79a916b85c8a8d78fbeca6367869424fd24a744a503bc06bd775d0aa3", "typeString": "literal_string \"Invalid End Time\""}, "value": "Invalid End Time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c2a330b79a916b85c8a8d78fbeca6367869424fd24a744a503bc06bd775d0aa3", "typeString": "literal_string \"Invalid End Time\""}], "id": 21926, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3016:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21931, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3016:59:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21932, "nodeType": "ExpressionStatement", "src": "3016:59:35"}, {"expression": {"id": 21935, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 21933, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "3085:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 21934, "name": "_endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21875, "src": "3095:8:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "3085:18:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "id": 21936, "nodeType": "ExpressionStatement", "src": "3085:18:35"}]}, "id": 21938, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 21876, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21867, "mutability": "mutable", "name": "notional", "nodeType": "VariableDeclaration", "scope": 21938, "src": "2432:22:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}, "typeName": {"id": 21866, "name": "NotionalProxy", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70968, "src": "2432:13:35", "typeDescriptions": {"typeIdentifier": "t_contract$_NotionalProxy_$70968", "typeString": "contract NotionalProxy"}}, "visibility": "internal"}, {"constant": false, "id": 21869, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 21938, "src": "2464:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 21868, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "2464:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 21871, "mutability": "mutable", "name": "incentive_token", "nodeType": "VariableDeclaration", "scope": 21938, "src": "2491:22:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}, "typeName": {"id": 21870, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 74993, "src": "2491:6:35", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "visibility": "internal"}, {"constant": false, "id": 21873, "mutability": "mutable", "name": "_emissionRatePerYear", "nodeType": "VariableDeclaration", "scope": 21938, "src": "2523:28:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 21872, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "2523:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 21875, "mutability": "mutable", "name": "_endTime", "nodeType": "VariableDeclaration", "scope": 21938, "src": "2592:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 21874, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "2592:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "src": "2422:191:35"}, "returnParameters": {"id": 21877, "nodeType": "ParameterList", "parameters": [], "src": "2614:0:35"}, "scope": 22577, "src": "2411:699:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [74001], "body": {"id": 21953, "nodeType": "Block", "src": "3263:88:35", "statements": [{"expression": {"arguments": [{"arguments": [{"id": 21949, "name": "packedEmissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21827, "src": "3317:25:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint56", "typeString": "uint56"}], "expression": {"id": 21947, "name": "FloatingPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74769, "src": "3288:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FloatingPoint_$74769_$", "typeString": "type(library FloatingPoint)"}}, "id": 21948, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unpackFromBits", "nodeType": "MemberAccess", "referencedDeclaration": 74768, "src": "3288:28:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 21950, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3288:55:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 21946, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3280:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint128_$", "typeString": "type(uint128)"}, "typeName": {"id": 21945, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "3280:7:35", "typeDescriptions": {}}}, "id": 21951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3280:64:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "functionReturnParameters": 21944, "id": 21952, "nodeType": "Return", "src": "3273:71:35"}]}, "documentation": {"id": 21939, "nodeType": "StructuredDocumentation", "src": "3116:73:35", "text": "@notice The emission rate of REWARD_TOKEN in INTERNAL_TOKEN_PRECISION"}, "functionSelector": "dadff3c4", "id": 21954, "implemented": true, "kind": "function", "modifiers": [], "name": "emissionRatePerYear", "nodeType": "FunctionDefinition", "overrides": {"id": 21941, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3237:8:35"}, "parameters": {"id": 21940, "nodeType": "ParameterList", "parameters": [], "src": "3222:2:35"}, "returnParameters": {"id": 21944, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21943, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 21954, "src": "3254:7:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 21942, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "3254:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}], "src": "3253:9:35"}, "scope": 22577, "src": "3194:157:35", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [73964], "body": {"id": 22021, "nodeType": "Block", "src": "3756:507:35", "statements": [{"expression": {"arguments": [{"id": 21967, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3774:9:35", "subExpression": {"id": 21966, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "3775:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4465746163686564", "id": 21968, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3785:10:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}, "value": "Detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}], "id": 21965, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3766:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21969, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3766:30:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21970, "nodeType": "ExpressionStatement", "src": "3766:30:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 21974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 21972, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "3814:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 21973, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21959, "src": "3837:9:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "3814:32:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c696420626c6f636b2074696d65", "id": 21975, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3848:20:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cfd5e2dcff96861702b5478efaae8945cac2851bfd27d6201440850d02b8fd49", "typeString": "literal_string \"Invalid block time\""}, "value": "Invalid block time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cfd5e2dcff96861702b5478efaae8945cac2851bfd27d6201440850d02b8fd49", "typeString": "literal_string \"Invalid block time\""}], "id": 21971, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3806:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 21976, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3806:63:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 21977, "nodeType": "ExpressionStatement", "src": "3806:63:35"}, {"assignments": [21979], "declarations": [{"constant": false, "id": 21979, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 22021, "src": "3880:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21978, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3880:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21985, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 21981, "name": "NTOKEN_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21804, "src": "3909:14:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21980, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74993, "src": "3902:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$74993_$", "typeString": "type(contract IERC20)"}}, "id": 21982, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3902:22:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "id": 21983, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 74919, "src": "3902:34:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 21984, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3902:36:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3880:58:35"}, {"assignments": [21987], "declarations": [{"constant": false, "id": 21987, "mutability": "mutable", "name": "nTokenBalance", "nodeType": "VariableDeclaration", "scope": 22021, "src": "3948:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3948:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 21994, "initialValue": {"arguments": [{"id": 21992, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21957, "src": "4005:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 21989, "name": "NTOKEN_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21804, "src": "3979:14:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 21988, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74993, "src": "3972:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$74993_$", "typeString": "type(contract IERC20)"}}, "id": 21990, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3972:22:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "id": 21991, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 74932, "src": "3972:32:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 21993, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3972:41:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3948:65:35"}, {"assignments": [21996], "declarations": [{"constant": false, "id": 21996, "mutability": "mutable", "name": "time", "nodeType": "VariableDeclaration", "scope": 22021, "src": "4024:11:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 21995, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "4024:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "id": 22005, "initialValue": {"arguments": [{"arguments": [{"id": 22001, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21959, "src": "4060:9:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22002, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "4071:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint32", "typeString": "uint32"}], "expression": {"id": 21999, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69187, "src": "4045:10:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_SafeInt256_$69187_$", "typeString": "type(library SafeInt256)"}}, "id": 22000, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "min", "nodeType": "MemberAccess", "referencedDeclaration": 69119, "src": "4045:14:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 22003, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4045:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 21998, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4038:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 21997, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "4038:6:35", "typeDescriptions": {}}}, "id": 22004, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4038:42:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "VariableDeclarationStatement", "src": "4024:56:35"}, {"assignments": [22007], "declarations": [{"constant": false, "id": 22007, "mutability": "mutable", "name": "rewardsPerNToken", "nodeType": "VariableDeclaration", "scope": 22021, "src": "4090:24:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 22006, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "4090:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}], "id": 22012, "initialValue": {"arguments": [{"id": 22009, "name": "time", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21996, "src": "4147:4:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22010, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21979, "src": "4153:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22008, "name": "_getAccumulatedRewardPerToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22445, "src": "4117:29:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint256_$returns$_t_uint128_$", "typeString": "function (uint32,uint256) view returns (uint128)"}}, "id": 22011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4117:48:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "VariableDeclarationStatement", "src": "4090:75:35"}, {"expression": {"id": 22019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22013, "name": "rewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21963, "src": "4175:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22015, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21957, "src": "4215:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22016, "name": "nTokenBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21987, "src": "4224:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22017, "name": "rewardsPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22007, "src": "4239:16:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 22014, "name": "_calculateRewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22526, "src": "4191:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint128_$returns$_t_uint256_$", "typeString": "function (address,uint256,uint128) view returns (uint256)"}}, "id": 22018, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4191:65:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4175:81:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22020, "nodeType": "ExpressionStatement", "src": "4175:81:35"}]}, "documentation": {"id": 21955, "nodeType": "StructuredDocumentation", "src": "3357:237:35", "text": "@notice Get amount of reward account can claim at specified block time, only called before rewarder is detached\n @param account address to get reward amount for\n @param blockTime block time at which to get reward amount"}, "functionSelector": "dacf76bd", "id": 22022, "implemented": true, "kind": "function", "modifiers": [], "name": "getAccountRewardClaim", "nodeType": "FunctionDefinition", "overrides": {"id": 21961, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3703:8:35"}, "parameters": {"id": 21960, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21957, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22022, "src": "3630:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 21956, "name": "address", "nodeType": "ElementaryTypeName", "src": "3630:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 21959, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 22022, "src": "3647:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 21958, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "3647:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "src": "3629:35:35"}, "returnParameters": {"id": 21964, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21963, "mutability": "mutable", "name": "rewardToClaim", "nodeType": "VariableDeclaration", "scope": 22022, "src": "3729:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 21962, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3729:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3728:23:35"}, "scope": 22577, "src": "3599:664:35", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [73976], "body": {"id": 22062, "nodeType": "Block", "src": "4835:336:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 22044, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22037, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "4853:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 22043, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22038, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21814, "src": "4865:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 22041, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4887:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 22040, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4879:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 22039, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4879:7:35", "typeDescriptions": {}}}, "id": 22042, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4879:10:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "4865:24:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4853:36:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f74206465746163686564", "id": 22045, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4891:14:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_16cdf9de73ad27f109c3275c6ae421f690ece4dccf7848c7e5ae0620651d8b09", "typeString": "literal_string \"Not detached\""}, "value": "Not detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_16cdf9de73ad27f109c3275c6ae421f690ece4dccf7848c7e5ae0620651d8b09", "typeString": "literal_string \"Not detached\""}], "id": 22036, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4845:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22046, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4845:61:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22047, "nodeType": "ExpressionStatement", "src": "4845:61:35"}, {"expression": {"arguments": [{"id": 22049, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22025, "src": "4929:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22050, "name": "nTokenBalanceAtDetach", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22027, "src": "4938:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22051, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22030, "src": "4961:5:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "id": 22048, "name": "_checkProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22562, "src": "4917:11:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$", "typeString": "function (address,uint256,bytes32[] calldata) view"}}, "id": 22052, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4917:50:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22053, "nodeType": "ExpressionStatement", "src": "4917:50:35"}, {"expression": {"id": 22060, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22054, "name": "rewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22034, "src": "5065:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22056, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22025, "src": "5105:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22057, "name": "nTokenBalanceAtDetach", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22027, "src": "5114:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22058, "name": "accumulatedRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21831, "src": "5137:26:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 22055, "name": "_calculateRewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22526, "src": "5081:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint128_$returns$_t_uint256_$", "typeString": "function (address,uint256,uint128) view returns (uint256)"}}, "id": 22059, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5081:83:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5065:99:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22061, "nodeType": "ExpressionStatement", "src": "5065:99:35"}]}, "documentation": {"id": 22023, "nodeType": "StructuredDocumentation", "src": "4269:365:35", "text": "@notice Get amount of reward still left for account to claim, only called after rewarder is detached\n and merkle root is set\n @param account address to get reward amount for\n @param nTokenBalanceAtDetach nToken balance of account at time of detachment\n @param proof merkle proof to prove account and nTokenBalanceAtDetach are in tree"}, "functionSelector": "a105fc96", "id": 22063, "implemented": true, "kind": "function", "modifiers": [], "name": "getAccountRewardClaim", "nodeType": "FunctionDefinition", "overrides": {"id": 22032, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4782:8:35"}, "parameters": {"id": 22031, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22025, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22063, "src": "4670:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22024, "name": "address", "nodeType": "ElementaryTypeName", "src": "4670:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22027, "mutability": "mutable", "name": "nTokenBalanceAtDetach", "nodeType": "VariableDeclaration", "scope": 22063, "src": "4687:29:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22026, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4687:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22030, "mutability": "mutable", "name": "proof", "nodeType": "VariableDeclaration", "scope": 22063, "src": "4718:24:35", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 22028, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4718:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 22029, "nodeType": "ArrayTypeName", "src": "4718:9:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "4669:74:35"}, "returnParameters": {"id": 22035, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22034, "mutability": "mutable", "name": "rewardToClaim", "nodeType": "VariableDeclaration", "scope": 22063, "src": "4808:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22033, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4808:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4807:23:35"}, "scope": 22577, "src": "4639:532:35", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 22122, "nodeType": "Block", "src": "5675:605:35", "statements": [{"expression": {"arguments": [{"id": 22075, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5693:9:35", "subExpression": {"id": 22074, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "5694:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4465746163686564", "id": 22076, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5704:10:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}, "value": "Detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}], "id": 22073, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5685:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22077, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5685:30:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22078, "nodeType": "ExpressionStatement", "src": "5685:30:35"}, {"assignments": [22080], "declarations": [{"constant": false, "id": 22080, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 22122, "src": "5725:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5725:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22086, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 22082, "name": "NTOKEN_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21804, "src": "5754:14:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 22081, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74993, "src": "5747:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$74993_$", "typeString": "type(contract IERC20)"}}, "id": 22083, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5747:22:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "id": 22084, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 74919, "src": "5747:34:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22085, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5747:36:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5725:58:35"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 22090, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5828:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22091, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5828:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22089, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5821:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22088, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "5821:6:35", "typeDescriptions": {}}}, "id": 22092, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5821:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22093, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22080, "src": "5846:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22087, "name": "_accumulateRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22485, "src": "5794:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$returns$__$", "typeString": "function (uint32,uint256)"}}, "id": 22094, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5794:64:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22095, "nodeType": "ExpressionStatement", "src": "5794:64:35"}, {"expression": {"id": 22101, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22096, "name": "packedEmissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21827, "src": "5869:25:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22099, "name": "_emissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22066, "src": "5924:20:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 22097, "name": "FloatingPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74769, "src": "5897:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FloatingPoint_$74769_$", "typeString": "type(library FloatingPoint)"}}, "id": 22098, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "packTo56Bits", "nodeType": "MemberAccess", "referencedDeclaration": 74697, "src": "5897:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint56_$", "typeString": "function (uint256) pure returns (uint56)"}}, "id": 22100, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5897:48:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "src": "5869:76:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "id": 22102, "nodeType": "ExpressionStatement", "src": "5869:76:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 22106, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22104, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "6091:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22105, "name": "_endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22068, "src": "6113:8:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "6091:30:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c696420456e642054696d65", "id": 22107, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6123:18:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c2a330b79a916b85c8a8d78fbeca6367869424fd24a744a503bc06bd775d0aa3", "typeString": "literal_string \"Invalid End Time\""}, "value": "Invalid End Time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c2a330b79a916b85c8a8d78fbeca6367869424fd24a744a503bc06bd775d0aa3", "typeString": "literal_string \"Invalid End Time\""}], "id": 22103, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6083:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6083:59:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22109, "nodeType": "ExpressionStatement", "src": "6083:59:35"}, {"expression": {"id": 22112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22110, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "6152:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 22111, "name": "_endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22068, "src": "6162:8:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "6152:18:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "id": 22113, "nodeType": "ExpressionStatement", "src": "6152:18:35"}, {"eventCall": {"arguments": [{"arguments": [{"id": 22117, "name": "packedEmissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21827, "src": "6236:25:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint56", "typeString": "uint56"}], "expression": {"id": 22115, "name": "FloatingPoint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74769, "src": "6207:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_FloatingPoint_$74769_$", "typeString": "type(library FloatingPoint)"}}, "id": 22116, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "unpackFromBits", "nodeType": "MemberAccess", "referencedDeclaration": 74768, "src": "6207:28:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 22118, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6207:55:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22119, "name": "_endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22068, "src": "6264:8:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 22114, "name": "RewardEmissionUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73927, "src": "6186:20:35", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 22120, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6186:87:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22121, "nodeType": "EmitStatement", "src": "6181:92:35"}]}, "documentation": {"id": 22064, "nodeType": "StructuredDocumentation", "src": "5177:393:35", "text": "@notice Set incentive emission rate and incentive period end time, called only in case emission\n rate or incentive period changes since it is already set at deploy time, only can be called before\n rewarder is detached\n @param _emissionRatePerYear emission rate per year in INTERNAL_TOKEN_PRECISION\n @param _endTime time in seconds when incentive period will end"}, "functionSelector": "0e1e772f", "id": 22123, "implemented": true, "kind": "function", "modifiers": [{"id": 22071, "modifierName": {"id": 22070, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21850, "src": "5665:9:35", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "5665:9:35"}], "name": "setIncentiveEmissionRate", "nodeType": "FunctionDefinition", "parameters": {"id": 22069, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22066, "mutability": "mutable", "name": "_emissionRatePerYear", "nodeType": "VariableDeclaration", "scope": 22123, "src": "5609:28:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 22065, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "5609:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}, {"constant": false, "id": 22068, "mutability": "mutable", "name": "_endTime", "nodeType": "VariableDeclaration", "scope": 22123, "src": "5639:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 22067, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "5639:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "src": "5608:47:35"}, "returnParameters": {"id": 22072, "nodeType": "ParameterList", "parameters": [], "src": "5675:0:35"}, "scope": 22577, "src": "5575:705:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 22145, "nodeType": "Block", "src": "6530:96:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 22137, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22132, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "6548:11:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 22135, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6571:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 22134, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6563:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 22133, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6563:7:35", "typeDescriptions": {}}}, "id": 22136, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6563:10:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6548:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964", "id": 22138, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6575:9:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345", "typeString": "literal_string \"Invalid\""}, "value": "Invalid"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345", "typeString": "literal_string \"Invalid\""}], "id": 22131, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6540:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22139, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6540:45:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22140, "nodeType": "ExpressionStatement", "src": "6540:45:35"}, {"expression": {"id": 22143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22141, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21814, "src": "6595:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 22142, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22126, "src": "6608:11:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "6595:24:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 22144, "nodeType": "ExpressionStatement", "src": "6595:24:35"}]}, "documentation": {"id": 22124, "nodeType": "StructuredDocumentation", "src": "6286:176:35", "text": "@notice Set merkle root, only called after rewarder is detached\n @param _merkleRoot merkle root of the tree that contains accounts and nToken balances at detach time"}, "functionSelector": "7cb64759", "id": 22146, "implemented": true, "kind": "function", "modifiers": [{"id": 22129, "modifierName": {"id": 22128, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21850, "src": "6520:9:35", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "6520:9:35"}], "name": "setMerkleRoot", "nodeType": "FunctionDefinition", "parameters": {"id": 22127, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22126, "mutability": "mutable", "name": "_merkleRoot", "nodeType": "VariableDeclaration", "scope": 22146, "src": "6490:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 22125, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6490:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "6489:21:35"}, "returnParameters": {"id": 22130, "nodeType": "ParameterList", "parameters": [], "src": "6530:0:35"}, "scope": 22577, "src": "6467:159:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 22186, "nodeType": "Block", "src": "6914:243:35", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 22159, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22156, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "6928:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "ETH_ADDRESS", "nodeType": "MemberAccess", "referencedDeclaration": 67056, "src": "6928:21:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 22158, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22149, "src": "6953:5:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "6928:30:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 22184, "nodeType": "Block", "src": "7071:80:35", "statements": [{"expression": {"arguments": [{"id": 22178, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22149, "src": "7114:5:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 22179, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7121:3:35", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22180, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "7121:10:35", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 22181, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22151, "src": "7133:6:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22175, "name": "GenericToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34082, "src": "7085:12:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_GenericToken_$34082_$", "typeString": "type(library GenericToken)"}}, "id": 22177, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransferOut", "nodeType": "MemberAccess", "referencedDeclaration": 33929, "src": "7085:28:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 22182, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7085:55:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22183, "nodeType": "ExpressionStatement", "src": "7085:55:35"}]}, "id": 22185, "nodeType": "IfStatement", "src": "6924:227:35", "trueBody": {"id": 22174, "nodeType": "Block", "src": "6960:105:35", "statements": [{"assignments": [22161, null], "declarations": [{"constant": false, "id": 22161, "mutability": "mutable", "name": "status", "nodeType": "VariableDeclaration", "scope": 22174, "src": "6975:11:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 22160, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6975:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 22169, "initialValue": {"arguments": [{"hexValue": "", "id": 22167, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7022:2:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"expression": {"id": 22162, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6991:3:35", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 22163, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "6991:10:35", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "id": 22164, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "call", "nodeType": "MemberAccess", "src": "6991:15:35", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 22166, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 22165, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22151, "src": "7014:6:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "6991:30:35", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 22168, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6991:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "6974:51:35"}, {"expression": {"arguments": [{"id": 22171, "name": "status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22161, "src": "7047:6:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 22170, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7039:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22172, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7039:15:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22173, "nodeType": "ExpressionStatement", "src": "7039:15:35"}]}}]}, "documentation": {"id": 22147, "nodeType": "StructuredDocumentation", "src": "6632:210:35", "text": "@notice Allows owner to recover any ERC20 or ETH mistakenly sent to this contract\n @param token address of the token to recover, in case of ETH pass address(0)\n @param amount amount to recover"}, "functionSelector": "5705ae43", "id": 22187, "implemented": true, "kind": "function", "modifiers": [{"id": 22154, "modifierName": {"id": 22153, "name": "onlyOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21850, "src": "6904:9:35", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "6904:9:35"}], "name": "recover", "nodeType": "FunctionDefinition", "parameters": {"id": 22152, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22149, "mutability": "mutable", "name": "token", "nodeType": "VariableDeclaration", "scope": 22187, "src": "6864:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22148, "name": "address", "nodeType": "ElementaryTypeName", "src": "6864:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22151, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 22187, "src": "6879:14:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22150, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6879:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6863:31:35"}, "returnParameters": {"id": 22155, "nodeType": "ParameterList", "parameters": [], "src": "6914:0:35"}, "scope": 22577, "src": "6847:310:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [74004], "body": {"id": 22244, "nodeType": "Block", "src": "7487:460:35", "statements": [{"expression": {"arguments": [{"id": 22196, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "7505:9:35", "subExpression": {"id": 22195, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "7506:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416c7265616479206465746163686564", "id": 22197, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7516:18:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9f3c096103c79cf8ecd5ac2dab2e766fa9df96d51454ad2c1324804bd08877f5", "typeString": "literal_string \"Already detached\""}, "value": "Already detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9f3c096103c79cf8ecd5ac2dab2e766fa9df96d51454ad2c1324804bd08877f5", "typeString": "literal_string \"Already detached\""}], "id": 22194, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7497:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22198, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7497:38:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22199, "nodeType": "ExpressionStatement", "src": "7497:38:35"}, {"assignments": [22201], "declarations": [{"constant": false, "id": 22201, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 22244, "src": "7596:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22200, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7596:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22207, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 22203, "name": "NTOKEN_ADDRESS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21804, "src": "7625:14:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 22202, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74993, "src": "7618:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$74993_$", "typeString": "type(contract IERC20)"}}, "id": 22204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7618:22:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$74993", "typeString": "contract IERC20"}}, "id": 22205, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 74919, "src": "7618:34:35", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 22206, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7618:36:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "7596:58:35"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 22211, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7698:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22212, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7698:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22210, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7691:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22209, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "7691:6:35", "typeDescriptions": {}}}, "id": 22213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7691:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22214, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22201, "src": "7716:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22208, "name": "_accumulateRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22485, "src": "7664:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$returns$__$", "typeString": "function (uint32,uint256)"}}, "id": 22215, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7664:64:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22216, "nodeType": "ExpressionStatement", "src": "7664:64:35"}, {"expression": {"id": 22219, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22217, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "7739:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 22218, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7750:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "7739:15:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22220, "nodeType": "ExpressionStatement", "src": "7739:15:35"}, {"expression": {"id": 22223, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22221, "name": "packedEmissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21827, "src": "7764:25:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 22222, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7792:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7764:29:35", "typeDescriptions": {"typeIdentifier": "t_uint56", "typeString": "uint56"}}, "id": 22224, "nodeType": "ExpressionStatement", "src": "7764:29:35"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22228, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 22225, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7808:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7808:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22227, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "7826:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "7808:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22238, "nodeType": "IfStatement", "src": "7804:89:35", "trueBody": {"id": 22237, "nodeType": "Block", "src": "7835:58:35", "statements": [{"expression": {"id": 22235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22229, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "7849:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 22232, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "7866:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "7866:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22231, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7859:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22230, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "7859:6:35", "typeDescriptions": {}}}, "id": 22234, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7859:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "7849:33:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "id": 22236, "nodeType": "ExpressionStatement", "src": "7849:33:35"}]}}, {"eventCall": {"arguments": [{"hexValue": "30", "id": 22240, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7929:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 22241, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "7932:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 22239, "name": "RewardEmissionUpdate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73927, "src": "7908:20:35", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256)"}}, "id": 22242, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7908:32:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22243, "nodeType": "EmitStatement", "src": "7903:37:35"}]}, "documentation": {"id": 22188, "nodeType": "StructuredDocumentation", "src": "7163:270:35", "text": "@dev Called from Notional system to detach rewarder when switching to a new rewarder or when incentive\n period is over, after this merkle tree of user nToken balances at detach time should be generated\n offline and merkle root uploaded to this contract"}, "functionSelector": "225435c0", "id": 22245, "implemented": true, "kind": "function", "modifiers": [{"id": 22192, "modifierName": {"id": 22191, "name": "onlyNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21865, "src": "7474:12:35", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "7474:12:35"}], "name": "detach", "nodeType": "FunctionDefinition", "overrides": {"id": 22190, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7465:8:35"}, "parameters": {"id": 22189, "nodeType": "ParameterList", "parameters": [], "src": "7453:2:35"}, "returnParameters": {"id": 22193, "nodeType": "ParameterList", "parameters": [], "src": "7487:0:35"}, "scope": 22577, "src": "7438:509:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [73986], "body": {"id": 22274, "nodeType": "Block", "src": "8392:190:35", "statements": [{"expression": {"arguments": [{"id": 22258, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "8410:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f74206465746163686564", "id": 22259, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8420:14:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_16cdf9de73ad27f109c3275c6ae421f690ece4dccf7848c7e5ae0620651d8b09", "typeString": "literal_string \"Not detached\""}, "value": "Not detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_16cdf9de73ad27f109c3275c6ae421f690ece4dccf7848c7e5ae0620651d8b09", "typeString": "literal_string \"Not detached\""}], "id": 22257, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8402:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22260, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8402:33:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22261, "nodeType": "ExpressionStatement", "src": "8402:33:35"}, {"expression": {"arguments": [{"id": 22263, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22248, "src": "8458:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22264, "name": "nTokenBalanceAtDetach", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22250, "src": "8467:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22265, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22253, "src": "8490:5:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}], "id": 22262, "name": "_checkProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22562, "src": "8446:11:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$__$", "typeString": "function (address,uint256,bytes32[] calldata) view"}}, "id": 22266, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8446:50:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22267, "nodeType": "ExpressionStatement", "src": "8446:50:35"}, {"expression": {"arguments": [{"id": 22269, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22248, "src": "8521:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22270, "name": "nTokenBalanceAtDetach", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22250, "src": "8530:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22271, "name": "nTokenBalanceAtDetach", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22250, "src": "8553:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22268, "name": "_claimRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22388, "src": "8507:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 22272, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8507:68:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22273, "nodeType": "ExpressionStatement", "src": "8507:68:35"}]}, "documentation": {"id": 22246, "nodeType": "StructuredDocumentation", "src": "7953:294:35", "text": "@notice Allows claiming rewards after rewarder has been detached\n @param account address to claim rewards for\n @param nTokenBalanceAtDetach nToken balance of account at time of detachment\n @param proof merkle proof to prove account and nTokenBalanceAtDetach are in tree"}, "functionSelector": "0537b357", "id": 22275, "implemented": true, "kind": "function", "modifiers": [], "name": "claimRewardsDirect", "nodeType": "FunctionDefinition", "overrides": {"id": 22255, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8379:8:35"}, "parameters": {"id": 22254, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22248, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22275, "src": "8280:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22247, "name": "address", "nodeType": "ElementaryTypeName", "src": "8280:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22250, "mutability": "mutable", "name": "nTokenBalanceAtDetach", "nodeType": "VariableDeclaration", "scope": 22275, "src": "8297:29:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22249, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8297:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22253, "mutability": "mutable", "name": "proof", "nodeType": "VariableDeclaration", "scope": 22275, "src": "8328:24:35", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 22251, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8328:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 22252, "nodeType": "ArrayTypeName", "src": "8328:9:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "8279:74:35"}, "returnParameters": {"id": 22256, "nodeType": "ParameterList", "parameters": [], "src": "8392:0:35"}, "scope": 22577, "src": "8252:330:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [73955], "body": {"id": 22320, "nodeType": "Block", "src": "9240:266:35", "statements": [{"expression": {"arguments": [{"id": 22294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "9258:9:35", "subExpression": {"id": 22293, "name": "detached", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21818, "src": "9259:8:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4465746163686564", "id": 22295, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9269:10:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}, "value": "Detached"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_61a0e6b95bc71e1e06fd0a98fbc8975aefe86e6166de424e3c6fa8f794d80c0a", "typeString": "literal_string \"Detached\""}], "id": 22292, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9250:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9250:30:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22297, "nodeType": "ExpressionStatement", "src": "9250:30:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "id": 22301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22299, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22280, "src": "9298:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 22300, "name": "CURRENCY_ID", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21811, "src": "9312:11:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "src": "9298:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "57726f6e672063757272656e6379206964", "id": 22302, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9325:19:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5a17f70fc636a9e01750d7b3a887d1b9be382e79ed5f929555c0498651567be2", "typeString": "literal_string \"Wrong currency id\""}, "value": "Wrong currency id"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5a17f70fc636a9e01750d7b3a887d1b9be382e79ed5f929555c0498651567be2", "typeString": "literal_string \"Wrong currency id\""}], "id": 22298, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9290:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9290:55:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22304, "nodeType": "ExpressionStatement", "src": "9290:55:35"}, {"expression": {"arguments": [{"arguments": [{"expression": {"id": 22308, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9390:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22309, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "9390:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22307, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9383:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22306, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "9383:6:35", "typeDescriptions": {}}}, "id": 22310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9383:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22311, "name": "priorNTokenSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22286, "src": "9408:17:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22305, "name": "_accumulateRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22485, "src": "9356:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$returns$__$", "typeString": "function (uint32,uint256)"}}, "id": 22312, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9356:70:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22313, "nodeType": "ExpressionStatement", "src": "9356:70:35"}, {"expression": {"arguments": [{"id": 22315, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22278, "src": "9450:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22316, "name": "nTokenBalanceBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22282, "src": "9459:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22317, "name": "nTokenBalanceAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22284, "src": "9480:18:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22314, "name": "_claimRewards", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22388, "src": "9436:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$", "typeString": "function (address,uint256,uint256)"}}, "id": 22318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9436:63:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22319, "nodeType": "ExpressionStatement", "src": "9436:63:35"}]}, "documentation": {"id": 22276, "nodeType": "StructuredDocumentation", "src": "8588:428:35", "text": "@notice Allows claiming rewards but only from Notional system, called on each nToken balance change\n @param account address to claim rewards for\n @param currencyId id number of the currency\n @param nTokenBalanceBefore account nToken balance before the change\n @param nTokenBalanceAfter account nToken balance after the change\n @param priorNTokenSupply total nToken supply before the change"}, "functionSelector": "3f3ef50d", "id": 22321, "implemented": true, "kind": "function", "modifiers": [{"id": 22290, "modifierName": {"id": 22289, "name": "onlyNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21865, "src": "9227:12:35", "typeDescriptions": {"typeIdentifier": "t_modifier$__$", "typeString": "modifier ()"}}, "nodeType": "ModifierInvocation", "src": "9227:12:35"}], "name": "claimRewards", "nodeType": "FunctionDefinition", "overrides": {"id": 22288, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9218:8:35"}, "parameters": {"id": 22287, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22278, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22321, "src": "9052:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22277, "name": "address", "nodeType": "ElementaryTypeName", "src": "9052:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22280, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 22321, "src": "9077:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 22279, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "9077:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 22282, "mutability": "mutable", "name": "nTokenBalanceBefore", "nodeType": "VariableDeclaration", "scope": 22321, "src": "9104:27:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22281, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9104:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22284, "mutability": "mutable", "name": "nTokenBalanceAfter", "nodeType": "VariableDeclaration", "scope": 22321, "src": "9141:26:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22283, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9141:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22286, "mutability": "mutable", "name": "priorNTokenSupply", "nodeType": "VariableDeclaration", "scope": 22321, "src": "9177:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22285, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9177:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9042:166:35"}, "returnParameters": {"id": 22291, "nodeType": "ParameterList", "parameters": [], "src": "9240:0:35"}, "scope": 22577, "src": "9021:485:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 22387, "nodeType": "Block", "src": "9617:964:35", "statements": [{"assignments": [22331], "declarations": [{"constant": false, "id": 22331, "mutability": "mutable", "name": "rewardToClaim", "nodeType": "VariableDeclaration", "scope": 22387, "src": "9627:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22330, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9627:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22337, "initialValue": {"arguments": [{"id": 22333, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22323, "src": "9675:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22334, "name": "nTokenBalanceBefore", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22325, "src": "9684:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 22335, "name": "accumulatedRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21831, "src": "9705:26:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 22332, "name": "_calculateRewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22526, "src": "9651:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint128_$returns$_t_uint256_$", "typeString": "function (address,uint256,uint128) view returns (uint256)"}}, "id": 22336, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9651:81:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9627:105:35"}, {"expression": {"id": 22354, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 22338, "name": "rewardDebtPerAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21836, "src": "10018:20:35", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$", "typeString": "mapping(address => uint128)"}}, "id": 22340, "indexExpression": {"id": 22339, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22323, "src": "10039:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10018:29:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"arguments": [{"expression": {"id": 22348, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "10139:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22349, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INTERNAL_TOKEN_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 67038, "src": "10139:34:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 22347, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10131:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 22346, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10131:7:35", "typeDescriptions": {}}}, "id": 22350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10131:43:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 22343, "name": "accumulatedRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21831, "src": "10086:26:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"id": 22341, "name": "nTokenBalanceAfter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22327, "src": "10050:18:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69270, "src": "10050:35:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22344, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10050:63:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22345, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69291, "src": "10050:80:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22351, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10050:125:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22352, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint128", "nodeType": "MemberAccess", "referencedDeclaration": 69681, "src": "10050:148:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint128)"}}, "id": 22353, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10050:150:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "10018:182:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 22355, "nodeType": "ExpressionStatement", "src": "10018:182:35"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22358, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "30", "id": 22356, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10215:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22357, "name": "rewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22331, "src": "10219:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10215:17:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22386, "nodeType": "IfStatement", "src": "10211:364:35", "trueBody": {"id": 22385, "nodeType": "Block", "src": "10234:341:35", "statements": [{"clauses": [{"block": {"id": 22380, "nodeType": "Block", "src": "10317:239:35", "statements": [{"assignments": [22367], "declarations": [{"constant": false, "id": 22367, "mutability": "mutable", "name": "success", "nodeType": "VariableDeclaration", "scope": 22380, "src": "10335:12:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 22366, "name": "bool", "nodeType": "ElementaryTypeName", "src": "10335:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 22370, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "id": 22368, "name": "checkReturnCode", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22576, "src": "10350:15:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$", "typeString": "function () pure returns (bool)"}}, "id": 22369, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10350:17:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "10335:32:35"}, {"condition": {"id": 22371, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22367, "src": "10389:7:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22379, "nodeType": "IfStatement", "src": "10385:111:35", "trueBody": {"id": 22378, "nodeType": "Block", "src": "10398:98:35", "statements": [{"eventCall": {"arguments": [{"id": 22373, "name": "REWARD_TOKEN", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21806, "src": "10440:12:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22374, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22323, "src": "10454:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22375, "name": "rewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22331, "src": "10463:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22372, "name": "RewardTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73921, "src": "10425:14:35", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 22376, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10425:52:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22377, "nodeType": "EmitStatement", "src": "10420:57:35"}]}}]}, "errorName": "", "id": 22381, "nodeType": "TryCatchClause", "src": "10317:239:35"}, {"block": {"id": 22382, "nodeType": "Block", "src": "10563:2:35", "statements": []}, "errorName": "", "id": 22383, "nodeType": "TryCatchClause", "src": "10557:8:35"}], "externalCall": {"arguments": [{"id": 22363, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22323, "src": "10293:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22364, "name": "rewardToClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22331, "src": "10302:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 22360, "name": "REWARD_TOKEN", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21806, "src": "10270:12:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 22359, "name": "IEIP20NonStandard", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74910, "src": "10252:17:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IEIP20NonStandard_$74910_$", "typeString": "type(contract IEIP20NonStandard)"}}, "id": 22361, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10252:31:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IEIP20NonStandard_$74910", "typeString": "contract IEIP20NonStandard"}}, "id": 22362, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 74865, "src": "10252:40:35", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256) external"}}, "id": 22365, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10252:64:35", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22384, "nodeType": "TryStatement", "src": "10248:317:35"}]}}]}, "id": 22388, "implemented": true, "kind": "function", "modifiers": [], "name": "_claimRewards", "nodeType": "FunctionDefinition", "parameters": {"id": 22328, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22323, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22388, "src": "9535:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22322, "name": "address", "nodeType": "ElementaryTypeName", "src": "9535:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22325, "mutability": "mutable", "name": "nTokenBalanceBefore", "nodeType": "VariableDeclaration", "scope": 22388, "src": "9552:27:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22324, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9552:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22327, "mutability": "mutable", "name": "nTokenBalanceAfter", "nodeType": "VariableDeclaration", "scope": 22388, "src": "9581:26:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22326, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9581:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9534:74:35"}, "returnParameters": {"id": 22329, "nodeType": "ParameterList", "parameters": [], "src": "9617:0:35"}, "scope": 22577, "src": "9512:1069:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 22444, "nodeType": "Block", "src": "10691:1073:35", "statements": [{"assignments": [22398], "declarations": [{"constant": false, "id": 22398, "mutability": "mutable", "name": "additionalIncentiveAccumulatedPerNToken", "nodeType": "VariableDeclaration", "scope": 22444, "src": "10701:47:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22397, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10701:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22399, "nodeType": "VariableDeclarationStatement", "src": "10701:47:35"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 22406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 22402, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22400, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "10762:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22401, "name": "time", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22390, "src": "10784:4:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "10762:26:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22405, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "30", "id": 22403, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10792:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22404, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22392, "src": "10796:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10792:15:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "10762:45:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 22433, "nodeType": "IfStatement", "src": "10758:890:35", "trueBody": {"id": 22432, "nodeType": "Block", "src": "10809:839:35", "statements": [{"assignments": [22408], "declarations": [{"constant": false, "id": 22408, "mutability": "mutable", "name": "timeSinceLastAccumulation", "nodeType": "VariableDeclaration", "scope": 22432, "src": "10882:33:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22407, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10882:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 22412, "initialValue": {"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 22411, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 22409, "name": "time", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22390, "src": "10918:4:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 22410, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "10925:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "10918:26:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "VariableDeclarationStatement", "src": "10882:62:35"}, {"expression": {"id": 22430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22413, "name": "additionalIncentiveAccumulatedPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22398, "src": "11390:39:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22428, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22392, "src": "11625:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"expression": {"id": 22424, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "11588:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "YEAR", "nodeType": "MemberAccess", "referencedDeclaration": 67160, "src": "11588:14:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 22420, "name": "emissionRatePerYear", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21954, "src": "11544:19:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_uint128_$", "typeString": "function () view returns (uint128)"}}, "id": 22421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11544:21:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"arguments": [{"expression": {"id": 22416, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "11479:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22417, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INCENTIVE_ACCUMULATION_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 67041, "src": "11479:42:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22414, "name": "timeSinceLastAccumulation", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22408, "src": "11432:25:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22415, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69270, "src": "11432:46:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22418, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11432:90:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22419, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69270, "src": "11432:111:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22422, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11432:134:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69291, "src": "11432:155:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22426, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11432:171:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22427, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69291, "src": "11432:192:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22429, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11432:205:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "11390:247:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22431, "nodeType": "ExpressionStatement", "src": "11390:247:35"}]}}, {"expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 22439, "name": "additionalIncentiveAccumulatedPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22398, "src": "11705:39:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 22436, "name": "accumulatedRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21831, "src": "11673:26:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "id": 22435, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11665:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 22434, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11665:7:35", "typeDescriptions": {}}}, "id": 22437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11665:35:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22438, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69216, "src": "11665:39:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22440, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11665:80:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22441, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "toUint128", "nodeType": "MemberAccess", "referencedDeclaration": 69681, "src": "11665:90:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$", "typeString": "function (uint256) pure returns (uint128)"}}, "id": 22442, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11665:92:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "functionReturnParameters": 22396, "id": 22443, "nodeType": "Return", "src": "11658:99:35"}]}, "id": 22445, "implemented": true, "kind": "function", "modifiers": [], "name": "_getAccumulatedRewardPerToken", "nodeType": "FunctionDefinition", "parameters": {"id": 22393, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22390, "mutability": "mutable", "name": "time", "nodeType": "VariableDeclaration", "scope": 22445, "src": "10626:11:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 22389, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "10626:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}, {"constant": false, "id": 22392, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 22445, "src": "10639:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22391, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10639:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "10625:34:35"}, "returnParameters": {"id": 22396, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22395, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 22445, "src": "10682:7:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 22394, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "10682:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}], "src": "10681:9:35"}, "scope": 22577, "src": "10587:1177:35", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 22484, "nodeType": "Block", "src": "11853:300:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "id": 22455, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "30", "id": 22453, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "11924:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 22454, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "11928:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "11924:11:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 22452, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "11916:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 22456, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11916:20:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22457, "nodeType": "ExpressionStatement", "src": "11916:20:35"}, {"assignments": [22459], "declarations": [{"constant": false, "id": 22459, "mutability": "mutable", "name": "time", "nodeType": "VariableDeclaration", "scope": 22484, "src": "11946:11:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 22458, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "11946:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}], "id": 22468, "initialValue": {"arguments": [{"arguments": [{"id": 22464, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22447, "src": "11982:9:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22465, "name": "endTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21821, "src": "11993:7:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint32", "typeString": "uint32"}], "expression": {"id": 22462, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 69187, "src": "11967:10:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_SafeInt256_$69187_$", "typeString": "type(library SafeInt256)"}}, "id": 22463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "min", "nodeType": "MemberAccess", "referencedDeclaration": 69119, "src": "11967:14:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 22466, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11967:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 22461, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "11960:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22460, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "11960:6:35", "typeDescriptions": {}}}, "id": 22467, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11960:42:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "VariableDeclarationStatement", "src": "11946:56:35"}, {"expression": {"id": 22474, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22469, "name": "accumulatedRewardPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21831, "src": "12013:26:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 22471, "name": "time", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22459, "src": "12072:4:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, {"id": 22472, "name": "totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22449, "src": "12078:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22470, "name": "_getAccumulatedRewardPerToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22445, "src": "12042:29:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint32_$_t_uint256_$returns$_t_uint128_$", "typeString": "function (uint32,uint256) view returns (uint128)"}}, "id": 22473, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12042:48:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "src": "12013:77:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "id": 22475, "nodeType": "ExpressionStatement", "src": "12013:77:35"}, {"expression": {"id": 22482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 22476, "name": "lastAccumulatedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21825, "src": "12101:19:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 22479, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "12130:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 22480, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "12130:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22478, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12123:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 22477, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "12123:6:35", "typeDescriptions": {}}}, "id": 22481, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12123:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "src": "12101:45:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "id": 22483, "nodeType": "ExpressionStatement", "src": "12101:45:35"}]}, "id": 22485, "implemented": true, "kind": "function", "modifiers": [], "name": "_accumulateRewardPerNToken", "nodeType": "FunctionDefinition", "parameters": {"id": 22450, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22447, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 22485, "src": "11806:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}, "typeName": {"id": 22446, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "11806:6:35", "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}, "visibility": "internal"}, {"constant": false, "id": 22449, "mutability": "mutable", "name": "totalSupply", "nodeType": "VariableDeclaration", "scope": 22485, "src": "11824:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22448, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11824:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "11805:39:35"}, "returnParameters": {"id": 22451, "nodeType": "ParameterList", "parameters": [], "src": "11853:0:35"}, "scope": 22577, "src": "11770:383:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 22525, "nodeType": "Block", "src": "12328:769:35", "statements": [{"expression": {"arguments": [{"expression": {"id": 22521, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "13047:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22522, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INCENTIVE_ACCUMULATION_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 67041, "src": "13047:42:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 22518, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 22516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13001:2:35", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"id": 22517, "name": "REWARD_TOKEN_DECIMALS", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21808, "src": "13007:21:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "13001:27:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"baseExpression": {"id": 22511, "name": "rewardDebtPerAccount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21836, "src": "12953:20:35", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint128_$", "typeString": "mapping(address => uint128)"}}, "id": 22513, "indexExpression": {"id": 22512, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22487, "src": "12974:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12953:29:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"arguments": [{"arguments": [{"expression": {"id": 22506, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 67348, "src": "12899:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$67348_$", "typeString": "type(library Constants)"}}, "id": 22507, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "INTERNAL_TOKEN_PRECISION", "nodeType": "MemberAccess", "referencedDeclaration": 67038, "src": "12899:34:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 22505, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12891:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 22504, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12891:7:35", "typeDescriptions": {}}}, "id": 22508, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12891:43:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 22501, "name": "rewardsPerNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22491, "src": "12856:16:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint128", "typeString": "uint128"}], "expression": {"arguments": [{"id": 22498, "name": "nTokenBalanceAtLastClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22489, "src": "12813:24:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 22497, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12805:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 22496, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12805:7:35", "typeDescriptions": {}}}, "id": 22499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:33:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22500, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69270, "src": "12805:50:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22502, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:68:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22503, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69291, "src": "12805:85:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:130:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 69237, "src": "12805:147:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22514, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:178:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22515, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "mul", "nodeType": "MemberAccess", "referencedDeclaration": 69270, "src": "12805:195:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22519, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:224:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "div", "nodeType": "MemberAccess", "referencedDeclaration": 69291, "src": "12805:241:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 22523, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12805:285:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 22495, "id": 22524, "nodeType": "Return", "src": "12798:292:35"}]}, "id": 22526, "implemented": true, "kind": "function", "modifiers": [], "name": "_calculateRewardToClaim", "nodeType": "FunctionDefinition", "parameters": {"id": 22492, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22487, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22526, "src": "12192:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22486, "name": "address", "nodeType": "ElementaryTypeName", "src": "12192:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22489, "mutability": "mutable", "name": "nTokenBalanceAtLastClaim", "nodeType": "VariableDeclaration", "scope": 22526, "src": "12209:32:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22488, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12209:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22491, "mutability": "mutable", "name": "rewardsPerNToken", "nodeType": "VariableDeclaration", "scope": 22526, "src": "12243:24:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}, "typeName": {"id": 22490, "name": "uint128", "nodeType": "ElementaryTypeName", "src": "12243:7:35", "typeDescriptions": {"typeIdentifier": "t_uint128", "typeString": "uint128"}}, "visibility": "internal"}], "src": "12191:77:35"}, "returnParameters": {"id": 22495, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22494, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 22526, "src": "12315:7:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22493, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12315:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "12314:9:35"}, "scope": 22577, "src": "12159:938:35", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 22561, "nodeType": "Block", "src": "13259:251:35", "statements": [{"assignments": [22538], "declarations": [{"constant": false, "id": 22538, "mutability": "mutable", "name": "leaf", "nodeType": "VariableDeclaration", "scope": 22561, "src": "13326:12:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 22537, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13326:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 22546, "initialValue": {"arguments": [{"arguments": [{"id": 22542, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22529, "src": "13368:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 22543, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22531, "src": "13377:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 22540, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "13351:3:35", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 22541, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "13351:16:35", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 22544, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13351:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 22539, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "13341:9:35", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 22545, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13341:45:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "13326:60:35"}, {"assignments": [22548], "declarations": [{"constant": false, "id": 22548, "mutability": "mutable", "name": "isValidLeaf", "nodeType": "VariableDeclaration", "scope": 22561, "src": "13396:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 22547, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13396:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 22555, "initialValue": {"arguments": [{"id": 22551, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22534, "src": "13434:5:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, {"id": 22552, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21814, "src": "13441:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 22553, "name": "leaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22538, "src": "13453:4:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 22549, "name": "MerkleProof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 74840, "src": "13415:11:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_MerkleProof_$74840_$", "typeString": "type(library MerkleProof)"}}, "id": 22550, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "verify", "nodeType": "MemberAccess", "referencedDeclaration": 74839, "src": "13415:18:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$", "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}}, "id": 22554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13415:43:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "13396:62:35"}, {"expression": {"arguments": [{"id": 22557, "name": "isValidLeaf", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 22548, "src": "13476:11:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f74496e4d65726b6c65", "id": 22558, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13489:13:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4d0df579c1a1582ffb7b375f0b2b49e21a905c4bc9f951994821c86f8671e94a", "typeString": "literal_string \"NotInMerkle\""}, "value": "NotInMerkle"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4d0df579c1a1582ffb7b375f0b2b49e21a905c4bc9f951994821c86f8671e94a", "typeString": "literal_string \"NotInMerkle\""}], "id": 22556, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "13468:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 22559, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13468:35:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 22560, "nodeType": "ExpressionStatement", "src": "13468:35:35"}]}, "documentation": {"id": 22527, "nodeType": "StructuredDocumentation", "src": "13103:57:35", "text": "@notice Verify merkle proof, or revert if not in tree"}, "id": 22562, "implemented": true, "kind": "function", "modifiers": [], "name": "_checkProof", "nodeType": "FunctionDefinition", "parameters": {"id": 22535, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22529, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 22562, "src": "13186:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 22528, "name": "address", "nodeType": "ElementaryTypeName", "src": "13186:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 22531, "mutability": "mutable", "name": "balance", "nodeType": "VariableDeclaration", "scope": 22562, "src": "13203:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 22530, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13203:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 22534, "mutability": "mutable", "name": "proof", "nodeType": "VariableDeclaration", "scope": 22562, "src": "13220:24:35", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 22532, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "13220:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 22533, "nodeType": "ArrayTypeName", "src": "13220:9:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "13185:60:35"}, "returnParameters": {"id": 22536, "nodeType": "ParameterList", "parameters": [], "src": "13259:0:35"}, "scope": 22577, "src": "13165:345:35", "stateMutability": "view", "virtual": false, "visibility": "private"}, {"body": {"id": 22575, "nodeType": "Block", "src": "13578:639:35", "statements": [{"assignments": [22572], "declarations": [{"constant": false, "id": 22572, "mutability": "mutable", "name": "result", "nodeType": "VariableDeclaration", "scope": 22575, "src": "13588:24:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$1_memory_ptr", "typeString": "uint256[1]"}, "typeName": {"baseType": {"id": 22570, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "13588:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 22571, "length": {"hexValue": "31", "id": 22569, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "13596:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "nodeType": "ArrayTypeName", "src": "13588:10:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_uint256_$1_storage_ptr", "typeString": "uint256[1]"}}, "visibility": "internal"}], "id": 22573, "nodeType": "VariableDeclarationStatement", "src": "13588:24:35"}, {"AST": {"nodeType": "YulBlock", "src": "13631:580:35", "statements": [{"cases": [{"body": {"nodeType": "YulBlock", "src": "13692:128:35", "statements": [{"nodeType": "YulAssignment", "src": "13767:12:35", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "13778:1:35", "type": "", "value": "1"}, "variableNames": [{"name": "success", "nodeType": "YulIdentifier", "src": "13767:7:35"}]}]}, "nodeType": "YulCase", "src": "13685:135:35", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "13690:1:35", "type": "", "value": "0"}}, {"body": {"nodeType": "YulBlock", "src": "13845:211:35", "statements": [{"expression": {"arguments": [{"name": "result", "nodeType": "YulIdentifier", "src": "13932:6:35"}, {"kind": "number", "nodeType": "YulLiteral", "src": "13940:1:35", "type": "", "value": "0"}, {"kind": "number", "nodeType": "YulLiteral", "src": "13943:2:35", "type": "", "value": "32"}], "functionName": {"name": "returndatacopy", "nodeType": "YulIdentifier", "src": "13917:14:35"}, "nodeType": "YulFunctionCall", "src": "13917:29:35"}, "nodeType": "YulExpressionStatement", "src": "13917:29:35"}, {"nodeType": "YulAssignment", "src": "13967:24:35", "value": {"arguments": [{"name": "result", "nodeType": "YulIdentifier", "src": "13984:6:35"}], "functionName": {"name": "mload", "nodeType": "YulIdentifier", "src": "13978:5:35"}, "nodeType": "YulFunctionCall", "src": "13978:13:35"}, "variableNames": [{"name": "success", "nodeType": "YulIdentifier", "src": "13967:7:35"}]}]}, "nodeType": "YulCase", "src": "13837:219:35", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "13842:2:35", "type": "", "value": "32"}}, {"body": {"nodeType": "YulBlock", "src": "14081:120:35", "statements": [{"nodeType": "YulAssignment", "src": "14171:12:35", "value": {"kind": "number", "nodeType": "YulLiteral", "src": "14182:1:35", "type": "", "value": "0"}, "variableNames": [{"name": "success", "nodeType": "YulIdentifier", "src": "14171:7:35"}]}]}, "nodeType": "YulCase", "src": "14073:128:35", "value": "default"}], "expression": {"arguments": [], "functionName": {"name": "returndatasize", "nodeType": "YulIdentifier", "src": "13652:14:35"}, "nodeType": "YulFunctionCall", "src": "13652:16:35"}, "nodeType": "YulSwitch", "src": "13645:556:35"}]}, "evmVersion": "istanbul", "externalReferences": [{"declaration": 22572, "isOffset": false, "isSlot": false, "src": "13932:6:35", "valueSize": 1}, {"declaration": 22572, "isOffset": false, "isSlot": false, "src": "13984:6:35", "valueSize": 1}, {"declaration": 22565, "isOffset": false, "isSlot": false, "src": "13767:7:35", "valueSize": 1}, {"declaration": 22565, "isOffset": false, "isSlot": false, "src": "13967:7:35", "valueSize": 1}, {"declaration": 22565, "isOffset": false, "isSlot": false, "src": "14171:7:35", "valueSize": 1}], "id": 22574, "nodeType": "InlineAssembly", "src": "13622:589:35"}]}, "id": 22576, "implemented": true, "kind": "function", "modifiers": [], "name": "checkReturnCode", "nodeType": "FunctionDefinition", "parameters": {"id": 22563, "nodeType": "ParameterList", "parameters": [], "src": "13540:2:35"}, "returnParameters": {"id": 22566, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 22565, "mutability": "mutable", "name": "success", "nodeType": "VariableDeclaration", "scope": 22576, "src": "13564:12:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 22564, "name": "bool", "nodeType": "ElementaryTypeName", "src": "13564:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "13563:14:35"}, "scope": 22577, "src": "13516:701:35", "stateMutability": "pure", "virtual": false, "visibility": "private"}], "scope": 22578, "src": "734:13485:35"}], "src": "41:14178:35"}, "bytecode": "6101206040523480156200001257600080fd5b5060405162001c7238038062001c72833981810160405260a08110156200003857600080fd5b5080516020808301516040808501516060808701516080978801519187901b6001600160601b03191690975260f084901b6001600160f01b0319166101005282516325d2c41560e21b815261ffff85166004820152925195969395919490926001600160a01b0388169263974b105492602480840193919291829003018186803b158015620000c657600080fd5b505afa158015620000db573d6000803e3d6000fd5b505050506040513d6020811015620000f257600080fd5b50516001600160601b0319606091821b811660a0529084901b1660c0526040805163313ce56760e01b815290516001600160a01b0385169163313ce567916004808301926020929190829003018186803b1580156200015057600080fd5b505afa15801562000165573d6000803e3d6000fd5b505050506040513d60208110156200017c57600080fd5b505160f81b7fff000000000000000000000000000000000000000000000000000000000000001660e052620001c66001600160801b03831662000291602090811b620010ad17901c565b6001805466ffffffffffffff60481b1916690100000000000000000066ffffffffffffff93909316929092029190911763ffffffff60281b1916650100000000004263ffffffff908116820292909217928390558382169204161062000266576040805162461bcd60e51b815260206004820152601060248201526f496e76616c696420456e642054696d6560801b604482015290519081900360640190fd5b6001805463ffffffff9092166101000264ffffffff0019909216919091179055506200037592505050565b60008065ffffffffffff831115620002bf57602f620002bb84620002ce60201b620010dc1760201c565b0390505b82811c60081b1790505b919050565b600081620002db57600080fd5b600160801b8210620002ef57608091821c91015b6801000000000000000082106200030857604091821c91015b64010000000082106200031d57602091821c91015b6201000082106200033057601091821c91015b61010082106200034257600891821c91015b601082106200035357600491821c91015b600482106200036457600291821c91015b60028210620002c957600101919050565b60805160601c60a05160601c60c05160601c60e05160f81c6101005160f01c61186d6200040560003980610a595280610dcf5250806104585280611535525080610d9552806112e752806113945250806105f25280610790528061086e5280610f225280610fcd5250806104df52806107bd52806109b25280610b015280610c475280610d71525061186d6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80635705ae43116100ad5780639c07e54c116100715780639c07e54c146103705780639d4be3f514610378578063a105fc9614610397578063dacf76bd1461041c578063dadff3c41461044e5761012c565b80635705ae43146102d55780637cb64759146103015780637d43702f1461031e578063858dccb31461036057806399248ea7146103685761012c565b80632eb4a7ab116100f45780632eb4a7ab146102345780633197cbb61461024e5780633f3ef50d1461026f578063432cc1b3146102b15780634fd371e3146102cd5761012c565b80630330d663146101315780630537b3571461014f5780630e1e772f146101d65780631c92197614610208578063225435c01461022c575b600080fd5b610139610456565b6040805160ff9092168252519081900360200190f35b6101d46004803603606081101561016557600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561019557600080fd5b8201836020820111156101a757600080fd5b803590602001918460208302840111640100000000831117156101c957600080fd5b50909250905061047a565b005b6101d4600480360360408110156101ec57600080fd5b5080356001600160801b0316906020013563ffffffff166104dd565b61021061078e565b604080516001600160a01b039092168252519081900360200190f35b6101d46107b2565b61023c610990565b60408051918252519081900360200190f35b610256610996565b6040805163ffffffff9092168252519081900360200190f35b6101d4600480360360a081101561028557600080fd5b506001600160a01b038135169061ffff60208201351690604081013590606081013590608001356109a7565b6102b9610ae3565b604080519115158252519081900360200190f35b610256610aec565b6101d4600480360360408110156102eb57600080fd5b506001600160a01b038135169060200135610aff565b6101d46004803603602081101561031757600080fd5b5035610c45565b6103446004803603602081101561033457600080fd5b50356001600160a01b0316610d54565b604080516001600160801b039092168252519081900360200190f35b610210610d6f565b610210610d93565b610344610db7565b610380610dcd565b6040805161ffff9092168252519081900360200190f35b61023c600480360360608110156103ad57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156103dd57600080fd5b8201836020820111156103ef57600080fd5b8035906020019184602083028401116401000000008311171561041157600080fd5b509092509050610df1565b61023c6004803603604081101561043257600080fd5b5080356001600160a01b0316906020013563ffffffff16610e7c565b610344611089565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015460ff166104c0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd0819195d1858da195960a21b604482015290519081900360640190fd5b6104cc8484848461117a565b6104d7848485611244565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d602081101561056057600080fd5b50516001600160a01b031633146105ab576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b60015460ff16156105ee576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d602081101561067357600080fd5b5051905061068142826113fa565b610693836001600160801b03166110ad565b6001805466ffffffffffffff92909216600160481b0266ffffffffffffff60481b19909216919091179081905563ffffffff808416600160281b9092041610610716576040805162461bcd60e51b815260206004820152601060248201526f496e76616c696420456e642054696d6560801b604482015290519081900360640190fd5b6001805464ffffffff00191661010063ffffffff85160217908190557f5208ab6d453e25ff339785d249c1622a65a099886cb31e91ba4bce4987d3316c9061076d90600160481b900466ffffffffffffff1661147c565b6040805191825263ffffffff851660208301528051918290030190a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081f576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48139bdd1a5bdb985b609a1b604482015290519081900360640190fd5b60015460ff161561086a576040805162461bcd60e51b815260206004820152601060248201526f105b1c9958591e4819195d1858da195960821b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c557600080fd5b505afa1580156108d9573d6000803e3d6000fd5b505050506040513d60208110156108ef57600080fd5b505190506108fd42826113fa565b6001805460ff1916811766ffffffffffffff60481b191690819055610100900463ffffffff16421015610945576001805464ffffffff0019166101004263ffffffff16021790555b600154604080516000815261010090920463ffffffff16602083015280517f5208ab6d453e25ff339785d249c1622a65a099886cb31e91ba4bce4987d3316c9281900390910190a150565b60005481565b600154610100900463ffffffff1681565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a14576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48139bdd1a5bdb985b609a1b604482015290519081900360640190fd5b60015460ff1615610a57576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff168461ffff1614610ac7576040805162461bcd60e51b815260206004820152601160248201527015dc9bdb99c818dd5c9c995b98de481a59607a1b604482015290519081900360640190fd5b610ad142826113fa565b610adc858484611244565b5050505050565b60015460ff1681565b600154600160281b900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5857600080fd5b505afa158015610b6c573d6000803e3d6000fd5b505050506040513d6020811015610b8257600080fd5b50516001600160a01b03163314610bcd576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b6001600160a01b038216610c3657604051600090339083908381818185875af1925050503d8060008114610c1d576040519150601f19603f3d011682016040523d82523d6000602084013e610c22565b606091505b5050905080610c3057600080fd5b50610c41565b610c4182338361148a565b5050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9e57600080fd5b505afa158015610cb2573d6000803e3d6000fd5b505050506040513d6020811015610cc857600080fd5b50516001600160a01b03163314610d13576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b80610d4f576040805162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b604482015290519081900360640190fd5b600055565b6002602052600090815260409020546001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600154600160801b90046001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015460009060ff168015610e07575060005415155b610e47576040805162461bcd60e51b815260206004820152600c60248201526b139bdd0819195d1858da195960a21b604482015290519081900360640190fd5b610e538585858561117a565b610e738585600160109054906101000a90046001600160801b0316611506565b95945050505050565b60015460009060ff1615610ec2576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b60015463ffffffff808416600160281b909204161115610f1e576040805162461bcd60e51b8152602060048201526012602482015271496e76616c696420626c6f636b2074696d6560701b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f7957600080fd5b505afa158015610f8d573d6000803e3d6000fd5b505050506040513d6020811015610fa357600080fd5b5051604080516370a0823160e01b81526001600160a01b03878116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916370a0823191602480820192602092909190829003018186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b50516001549091506000906110639063ffffffff80881691610100900416611592565b9050600061107182856115ac565b905061107e878483611506565b979650505050505050565b6001546000906110a890600160481b900466ffffffffffffff1661147c565b905090565b60008065ffffffffffff8311156110cd57602f6110c9846110dc565b0390505b82811c60081b1790505b919050565b6000816110e857600080fd5b600160801b82106110fb57608091821c91015b68010000000000000000821061111357604091821c91015b640100000000821061112757602091821c91015b62010000821061113957601091821c91015b610100821061114a57600891821c91015b6010821061115a57600491821c91015b6004821061116a57600291821c91015b600282106110d757600101919050565b6000848460405160200180836001600160a01b031660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006111fa84848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508691506116419050565b90508061123c576040805162461bcd60e51b815260206004820152600b60248201526a4e6f74496e4d65726b6c6560a81b604482015290519081900360640190fd5b505050505050565b60006112668484600160109054906101000a90046001600160801b0316611506565b6001549091506112a09061129b906305f5e10090611295908690600160801b90046001600160801b03166116ea565b90611711565b611730565b6001600160a01b038516600090815260026020526040902080546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905580156104d7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561135c57600080fd5b505af192505050801561136d575060015b611376576104d7565b600061138061174a565b90508015610adc57846001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fa282a314ffba449688a7c5eb4426bd8e1781944ce824ce34dfaea4691d08f146846040518082815260200191505060405180910390a35050505050565b600154610100900463ffffffff1661141157600080fd5b60015460009061142f9063ffffffff80861691610100900416611592565b905061143b81836115ac565b6001805463ffffffff4216600160281b0268ffffffff0000000000196001600160801b03948516600160801b02949092169390931716919091179055505050565b600881901c60ff9091161b90565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156114e157600080fd5b505af11580156114f5573d6000803e3d6000fd5b50505050611501611785565b505050565b6001600160a01b03831660009081526002602052604081205461158a90670de0b6b3a7640000906112959060ff7f000000000000000000000000000000000000000000000000000000000000000016600a0a90611584906001600160801b039081169061157e906305f5e1009086908c908c166116ea565b906117f2565b906116ea565b949350505050565b60008183126115a157816115a3565b825b90505b92915050565b600154600090819063ffffffff808616600160281b909204161080156115d25750826000105b156116205760015463ffffffff600160281b909104811685031661161c846112956301da9c0081611601611089565b6001600160801b031661158487670de0b6b3a76400006116ea565b9150505b60015461158a9061129b90600160801b90046001600160801b031683611807565b600081815b85518110156116df57600086828151811061165d57fe5b602002602001015190508083116116a457828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506116d6565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101611646565b509092149392505050565b6000826116f9575060006115a6565b8282028284828161170657fe5b04146115a357600080fd5b600080821161171f57600080fd5b81838161172857fe5b049392505050565b60006001600160801b0382111561174657600080fd5b5090565b6000611754611819565b3d801561176c57602081146117755760009250611780565b60019250611780565b60206000833e815192505b505090565b600061178f611819565b3d80156117a357602081146117ac57600080fd5b600192506117b7565b60206000833e815192505b5081610c41576040805162461bcd60e51b8152602060048201526005602482015264045524332360dc1b604482015290519081900360640190fd5b60008282111561180157600080fd5b50900390565b6000828201838110156115a357600080fd5b6040518060200160405280600190602082028036833750919291505056fea2646970667358221220a74639935b148d816e897ebe75f8648de6b80ed7bd5ef4f5bd1ebdddbd81bddb64736f6c63430007060033", "bytecodeSha1": "96bb0d12b9da0bf28d53cfe8298d7cb947fefed4", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "SecondaryRewarder", "coverageMap": {"branches": {"1": {"MerkleProof.verify": {"106": [749, 777, false]}}, "117": {}, "123": {}, "125": {}, "127": {}, "130": {}, "131": {}, "132": {}, "137": {}, "138": {}, "141": {}, "142": {}, "144": {}, "145": {}, "146": {}, "147": {}, "148": {}, "149": {}, "35": {"SecondaryRewarder._checkProof": {"90": [13476, 13487, true]}, "SecondaryRewarder._claimRewards": {"91": [10215, 10232, false], "92": [10389, 10396, false]}, "SecondaryRewarder._getAccumulatedRewardPerToken": {"93": [10762, 10788, false], "94": [10792, 10807, false]}, "SecondaryRewarder.claimRewards": {"80": [2338, 2369, true], "81": [9258, 9267, true], "82": [9298, 9323, true]}, "SecondaryRewarder.claimRewardsDirect": {"75": [8410, 8418, true]}, "SecondaryRewarder.detach": {"78": [7505, 7514, true], "79": [7808, 7833, false]}, "SecondaryRewarder.getAccountRewardClaim": {"86": [4853, 4861, false], "87": [4865, 4889, true], "88": [3774, 3783, true], "89": [3814, 3846, true]}, "SecondaryRewarder.recover": {"83": [6928, 6958, false], "84": [7047, 7053, true]}, "SecondaryRewarder.setIncentiveEmissionRate": {"76": [5693, 5702, true], "77": [6091, 6121, true]}, "SecondaryRewarder.setMerkleRoot": {"85": [6548, 6573, true]}}, "47": {}, "48": {}, "52": {}, "60": {"GenericToken.checkReturnCode": {"105": [3727, 3734, true]}}, "89": {"Bitmap.getMSB": {"95": [2263, 2269, true], "96": [2311, 2351, false], "97": [2424, 2448, false], "98": [2519, 2535, false], "99": [2606, 2618, false], "100": [2689, 2699, false], "101": [2768, 2777, false], "102": [2846, 2854, false], "103": [2923, 2931, false]}}, "90": {"FloatingPoint.packTo56Bits": {"104": [1165, 1189, false]}}, "91": {"SafeInt256.min": {"107": [3489, 3494, true]}}, "92": {"SafeUint256.add": {"113": [481, 487, true]}, "SafeUint256.div": {"110": [1879, 1884, true]}, "SafeUint256.mul": {"108": [1233, 1239, false], "109": [1294, 1304, true]}, "SafeUint256.sub": {"112": [869, 875, true]}, "SafeUint256.toUint128": {"111": [4825, 4847, true]}}}, "statements": {"1": {"MerkleProof.verify": {"61": [875, 945], "62": [1062, 1132], "63": [680, 683], "64": [1242, 1269]}}, "117": {}, "123": {}, "125": {}, "127": {}, "130": {}, "131": {}, "132": {}, "137": {}, "138": {}, "141": {}, "142": {}, "144": {}, "145": {}, "146": {}, "147": {}, "148": {}, "149": {}, "35": {"SecondaryRewarder._accumulateRewardPerNToken": {"51": [11916, 11936], "52": [12013, 12090], "53": [12101, 12146]}, "SecondaryRewarder._calculateRewardToClaim": {"57": [12798, 13090]}, "SecondaryRewarder._checkProof": {"48": [13468, 13503]}, "SecondaryRewarder._claimRewards": {"49": [10018, 10200], "50": [10420, 10477]}, "SecondaryRewarder._getAccumulatedRewardPerToken": {"59": [11390, 11637], "60": [11658, 11757]}, "SecondaryRewarder.claimRewards": {"15": [9250, 9280], "16": [9290, 9345], "17": [9356, 9426], "18": [9436, 9499]}, "SecondaryRewarder.claimRewardsDirect": {"0": [8402, 8435], "1": [8446, 8496], "2": [8507, 8575]}, "SecondaryRewarder.detach": {"9": [7497, 7535], "10": [7664, 7728], "11": [7739, 7754], "12": [7764, 7793], "13": [7849, 7882], "14": [7903, 7940]}, "SecondaryRewarder.emissionRatePerYear": {"29": [3273, 3344]}, "SecondaryRewarder.getAccountRewardClaim": {"23": [4845, 4906], "24": [4917, 4967], "25": [5065, 5164], "26": [3766, 3796], "27": [3806, 3869], "28": [4175, 4256]}, "SecondaryRewarder.recover": {"19": [7039, 7054], "20": [7085, 7140]}, "SecondaryRewarder.setIncentiveEmissionRate": {"3": [5685, 5715], "4": [5794, 5858], "5": [5869, 5945], "6": [6083, 6142], "7": [6152, 6170], "8": [6181, 6273]}, "SecondaryRewarder.setMerkleRoot": {"21": [6540, 6585], "22": [6595, 6619]}}, "47": {}, "48": {}, "52": {}, "60": {"GenericToken.checkReturnCode": {"71": [3719, 3744]}, "GenericToken.safeTransferOut": {"55": [1448, 1498], "56": [1508, 1525]}}, "89": {"Bitmap.getMSB": {"32": [2255, 2270], "33": [2367, 2376], "34": [2390, 2400], "35": [2464, 2472], "36": [2486, 2495], "37": [2551, 2559], "38": [2573, 2582], "39": [2634, 2642], "40": [2656, 2665], "41": [2715, 2722], "42": [2736, 2744], "43": [2793, 2800], "44": [2814, 2822], "45": [2870, 2877], "46": [2891, 2899], "47": [2933, 2941]}}, "90": {"FloatingPoint.packTo56Bits": {"30": [1191, 1229], "31": [1290, 1335]}, "FloatingPoint.unpackFromBits": {"54": [2074, 2107]}}, "91": {"SafeInt256.min": {"58": [3482, 3502]}}, "92": {"SafeUint256.add": {"74": [473, 488]}, "SafeUint256.div": {"67": [1871, 1885], "68": [1895, 1907]}, "SafeUint256.mul": {"65": [1241, 1249], "66": [1286, 1305]}, "SafeUint256.sub": {"72": [861, 876], "73": [886, 898]}, "SafeUint256.toUint128": {"69": [4817, 4848], "70": [4858, 4875]}}}}, "dependencies": ["AggregatorInterface", "AggregatorV2V3Interface", "AggregatorV3Interface", "Bitmap", "Constants", "Deployments", "FloatingPoint", "GenericToken", "IBeacon", "IEIP20NonStandard", "IERC20", "IPrimeCashHoldingsOracle", "IRewarder", "IUpgradeableBeacon", "IVaultAccountAction", "IVaultAccountHealth", "IVaultAction", "IVaultController", "IVaultLiquidationAction", "OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/MerkleProof", "NotionalCalculations", "NotionalGovernance", "NotionalProxy", "NotionalTreasury", "NotionalViews", "SafeInt256", "SafeUint256", "WETH9", "nERC1155Interface", "nTokenERC20"], "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80635705ae43116100ad5780639c07e54c116100715780639c07e54c146103705780639d4be3f514610378578063a105fc9614610397578063dacf76bd1461041c578063dadff3c41461044e5761012c565b80635705ae43146102d55780637cb64759146103015780637d43702f1461031e578063858dccb31461036057806399248ea7146103685761012c565b80632eb4a7ab116100f45780632eb4a7ab146102345780633197cbb61461024e5780633f3ef50d1461026f578063432cc1b3146102b15780634fd371e3146102cd5761012c565b80630330d663146101315780630537b3571461014f5780630e1e772f146101d65780631c92197614610208578063225435c01461022c575b600080fd5b610139610456565b6040805160ff9092168252519081900360200190f35b6101d46004803603606081101561016557600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561019557600080fd5b8201836020820111156101a757600080fd5b803590602001918460208302840111640100000000831117156101c957600080fd5b50909250905061047a565b005b6101d4600480360360408110156101ec57600080fd5b5080356001600160801b0316906020013563ffffffff166104dd565b61021061078e565b604080516001600160a01b039092168252519081900360200190f35b6101d46107b2565b61023c610990565b60408051918252519081900360200190f35b610256610996565b6040805163ffffffff9092168252519081900360200190f35b6101d4600480360360a081101561028557600080fd5b506001600160a01b038135169061ffff60208201351690604081013590606081013590608001356109a7565b6102b9610ae3565b604080519115158252519081900360200190f35b610256610aec565b6101d4600480360360408110156102eb57600080fd5b506001600160a01b038135169060200135610aff565b6101d46004803603602081101561031757600080fd5b5035610c45565b6103446004803603602081101561033457600080fd5b50356001600160a01b0316610d54565b604080516001600160801b039092168252519081900360200190f35b610210610d6f565b610210610d93565b610344610db7565b610380610dcd565b6040805161ffff9092168252519081900360200190f35b61023c600480360360608110156103ad57600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156103dd57600080fd5b8201836020820111156103ef57600080fd5b8035906020019184602083028401116401000000008311171561041157600080fd5b509092509050610df1565b61023c6004803603604081101561043257600080fd5b5080356001600160a01b0316906020013563ffffffff16610e7c565b610344611089565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015460ff166104c0576040805162461bcd60e51b815260206004820152600c60248201526b139bdd0819195d1858da195960a21b604482015290519081900360640190fd5b6104cc8484848461117a565b6104d7848485611244565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053657600080fd5b505afa15801561054a573d6000803e3d6000fd5b505050506040513d602081101561056057600080fd5b50516001600160a01b031633146105ab576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b60015460ff16156105ee576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561064957600080fd5b505afa15801561065d573d6000803e3d6000fd5b505050506040513d602081101561067357600080fd5b5051905061068142826113fa565b610693836001600160801b03166110ad565b6001805466ffffffffffffff92909216600160481b0266ffffffffffffff60481b19909216919091179081905563ffffffff808416600160281b9092041610610716576040805162461bcd60e51b815260206004820152601060248201526f496e76616c696420456e642054696d6560801b604482015290519081900360640190fd5b6001805464ffffffff00191661010063ffffffff85160217908190557f5208ab6d453e25ff339785d249c1622a65a099886cb31e91ba4bce4987d3316c9061076d90600160481b900466ffffffffffffff1661147c565b6040805191825263ffffffff851660208301528051918290030190a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461081f576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48139bdd1a5bdb985b609a1b604482015290519081900360640190fd5b60015460ff161561086a576040805162461bcd60e51b815260206004820152601060248201526f105b1c9958591e4819195d1858da195960821b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108c557600080fd5b505afa1580156108d9573d6000803e3d6000fd5b505050506040513d60208110156108ef57600080fd5b505190506108fd42826113fa565b6001805460ff1916811766ffffffffffffff60481b191690819055610100900463ffffffff16421015610945576001805464ffffffff0019166101004263ffffffff16021790555b600154604080516000815261010090920463ffffffff16602083015280517f5208ab6d453e25ff339785d249c1622a65a099886cb31e91ba4bce4987d3316c9281900390910190a150565b60005481565b600154610100900463ffffffff1681565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a14576040805162461bcd60e51b815260206004820152600d60248201526c13db9b1e48139bdd1a5bdb985b609a1b604482015290519081900360640190fd5b60015460ff1615610a57576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff168461ffff1614610ac7576040805162461bcd60e51b815260206004820152601160248201527015dc9bdb99c818dd5c9c995b98de481a59607a1b604482015290519081900360640190fd5b610ad142826113fa565b610adc858484611244565b5050505050565b60015460ff1681565b600154600160281b900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b5857600080fd5b505afa158015610b6c573d6000803e3d6000fd5b505050506040513d6020811015610b8257600080fd5b50516001600160a01b03163314610bcd576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b6001600160a01b038216610c3657604051600090339083908381818185875af1925050503d8060008114610c1d576040519150601f19603f3d011682016040523d82523d6000602084013e610c22565b606091505b5050905080610c3057600080fd5b50610c41565b610c4182338361148a565b5050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9e57600080fd5b505afa158015610cb2573d6000803e3d6000fd5b505050506040513d6020811015610cc857600080fd5b50516001600160a01b03163314610d13576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015290519081900360640190fd5b80610d4f576040805162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b604482015290519081900360640190fd5b600055565b6002602052600090815260409020546001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600154600160801b90046001600160801b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015460009060ff168015610e07575060005415155b610e47576040805162461bcd60e51b815260206004820152600c60248201526b139bdd0819195d1858da195960a21b604482015290519081900360640190fd5b610e538585858561117a565b610e738585600160109054906101000a90046001600160801b0316611506565b95945050505050565b60015460009060ff1615610ec2576040805162461bcd60e51b815260206004820152600860248201526711195d1858da195960c21b604482015290519081900360640190fd5b60015463ffffffff808416600160281b909204161115610f1e576040805162461bcd60e51b8152602060048201526012602482015271496e76616c696420626c6f636b2074696d6560701b604482015290519081900360640190fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f7957600080fd5b505afa158015610f8d573d6000803e3d6000fd5b505050506040513d6020811015610fa357600080fd5b5051604080516370a0823160e01b81526001600160a01b03878116600483015291519293506000927f0000000000000000000000000000000000000000000000000000000000000000909216916370a0823191602480820192602092909190829003018186803b15801561101657600080fd5b505afa15801561102a573d6000803e3d6000fd5b505050506040513d602081101561104057600080fd5b50516001549091506000906110639063ffffffff80881691610100900416611592565b9050600061107182856115ac565b905061107e878483611506565b979650505050505050565b6001546000906110a890600160481b900466ffffffffffffff1661147c565b905090565b60008065ffffffffffff8311156110cd57602f6110c9846110dc565b0390505b82811c60081b1790505b919050565b6000816110e857600080fd5b600160801b82106110fb57608091821c91015b68010000000000000000821061111357604091821c91015b640100000000821061112757602091821c91015b62010000821061113957601091821c91015b610100821061114a57600891821c91015b6010821061115a57600491821c91015b6004821061116a57600291821c91015b600282106110d757600101919050565b6000848460405160200180836001600160a01b031660601b81526014018281526020019250505060405160208183030381529060405280519060200120905060006111fa84848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052505492508691506116419050565b90508061123c576040805162461bcd60e51b815260206004820152600b60248201526a4e6f74496e4d65726b6c6560a81b604482015290519081900360640190fd5b505050505050565b60006112668484600160109054906101000a90046001600160801b0316611506565b6001549091506112a09061129b906305f5e10090611295908690600160801b90046001600160801b03166116ea565b90611711565b611730565b6001600160a01b038516600090815260026020526040902080546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905580156104d7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb85836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561135c57600080fd5b505af192505050801561136d575060015b611376576104d7565b600061138061174a565b90508015610adc57846001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fa282a314ffba449688a7c5eb4426bd8e1781944ce824ce34dfaea4691d08f146846040518082815260200191505060405180910390a35050505050565b600154610100900463ffffffff1661141157600080fd5b60015460009061142f9063ffffffff80861691610100900416611592565b905061143b81836115ac565b6001805463ffffffff4216600160281b0268ffffffff0000000000196001600160801b03948516600160801b02949092169390931716919091179055505050565b600881901c60ff9091161b90565b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156114e157600080fd5b505af11580156114f5573d6000803e3d6000fd5b50505050611501611785565b505050565b6001600160a01b03831660009081526002602052604081205461158a90670de0b6b3a7640000906112959060ff7f000000000000000000000000000000000000000000000000000000000000000016600a0a90611584906001600160801b039081169061157e906305f5e1009086908c908c166116ea565b906117f2565b906116ea565b949350505050565b60008183126115a157816115a3565b825b90505b92915050565b600154600090819063ffffffff808616600160281b909204161080156115d25750826000105b156116205760015463ffffffff600160281b909104811685031661161c846112956301da9c0081611601611089565b6001600160801b031661158487670de0b6b3a76400006116ea565b9150505b60015461158a9061129b90600160801b90046001600160801b031683611807565b600081815b85518110156116df57600086828151811061165d57fe5b602002602001015190508083116116a457828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506116d6565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101611646565b509092149392505050565b6000826116f9575060006115a6565b8282028284828161170657fe5b04146115a357600080fd5b600080821161171f57600080fd5b81838161172857fe5b049392505050565b60006001600160801b0382111561174657600080fd5b5090565b6000611754611819565b3d801561176c57602081146117755760009250611780565b60019250611780565b60206000833e815192505b505090565b600061178f611819565b3d80156117a357602081146117ac57600080fd5b600192506117b7565b60206000833e815192505b5081610c41576040805162461bcd60e51b8152602060048201526005602482015264045524332360dc1b604482015290519081900360640190fd5b60008282111561180157600080fd5b50900390565b6000828201838110156115a357600080fd5b6040518060200160405280600190602082028036833750919291505056fea2646970667358221220a74639935b148d816e897ebe75f8648de6b80ed7bd5ef4f5bd1ebdddbd81bddb64736f6c63430007060033", "deployedSourceMap": "734:13485:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8252:330;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8252:330:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8252:330:35;;-1:-1:-1;8252:330:35;-1:-1:-1;8252:330:35;:::i;:::-;;5575:705;;;;;;;;;;;;;;;;-1:-1:-1;5575:705:35;;-1:-1:-1;;;;;5575:705:35;;;;;;;;:::i;894:48::-;;;:::i;:::-;;;;-1:-1:-1;;;;;894:48:35;;;;;;;;;;;;;;7438:509;;;:::i;1259:25::-;;;:::i;:::-;;;;;;;;;;;;;;;;1609:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9021:485;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9021:485:35;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1441:29::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1699:42;;;:::i;6847:310::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6847:310:35;;;;;;;;:::i;6467:159::-;;;;;;;;;;;;;;;;-1:-1:-1;6467:159:35;;:::i;2126:55::-;;;;;;;;;;;;;;;;-1:-1:-1;2126:55:35;-1:-1:-1;;;;;2126:55:35;;:::i;:::-;;;;-1:-1:-1;;;;;2126:55:35;;;;;;;;;;;;;;849:39;;;:::i;948:37::-;;;:::i;2006:50::-;;;:::i;1041:44::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4639:532;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4639:532:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4639:532:35;;-1:-1:-1;4639:532:35;-1:-1:-1;4639:532:35;:::i;3599:664::-;;;;;;;;;;;;;;;;-1:-1:-1;3599:664:35;;-1:-1:-1;;;;;3599:664:35;;;;;;;;:::i;3194:157::-;;;:::i;991:44::-;;;:::o;8252:330::-;8410:8;;;;8402:33;;;;;-1:-1:-1;;;8402:33:35;;;;;;;;;;;;-1:-1:-1;;;8402:33:35;;;;;;;;;;;;;;;8446:50;8458:7;8467:21;8490:5;;8446:11;:50::i;:::-;8507:68;8521:7;8530:21;8553;8507:13;:68::i;:::-;8252:330;;;;:::o;5575:705::-;2241:8;-1:-1:-1;;;;;2241:14:35;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:16:35;-1:-1:-1;;;;;2227:30:35;:10;:30;2219:53;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;;;;5694:8:::1;::::0;::::1;;5693:9;5685:30;;;::::0;;-1:-1:-1;;;5685:30:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5685:30:35;;;;;;;;;;;;;::::1;;5725:19;5754:14;-1:-1:-1::0;;;;;5747:34:35::1;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;5747:36:35;;-1:-1:-1;5794:64:35::1;5828:15;5747:36:::0;5794:26:::1;:64::i;:::-;5897:48;5924:20;-1:-1:-1::0;;;;;5897:48:35::1;:26;:48::i;:::-;5869:25;:76:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;5869:76:35::1;-1:-1:-1::0;;;;5869:76:35;;::::1;::::0;;;::::1;::::0;;;;6091:30:::1;::::0;;::::1;-1:-1:-1::0;;;6091:19:35;;::::1;;:30;6083:59;;;::::0;;-1:-1:-1;;;6083:59:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6083:59:35;;;;;;;;;;;;;::::1;;6152:7;:18:::0;;-1:-1:-1;;6152:18:35::1;;;::::0;::::1;;;::::0;;;;6186:87:::1;::::0;6207:55:::1;::::0;-1:-1:-1;;;6236:25:35;::::1;;;6207:28;:55::i;:::-;6186:87;::::0;;;;;::::1;::::0;::::1;;::::0;::::1;::::0;;;;;;;;;::::1;2282:1;5575:705:::0;;:::o;894:48::-;;;:::o;7438:509::-;2338:10;-1:-1:-1;;;;;2360:8:35;2338:31;;2330:57;;;;;-1:-1:-1;;;2330:57:35;;;;;;;;;;;;-1:-1:-1;;;2330:57:35;;;;;;;;;;;;;;;7506:8:::1;::::0;::::1;;7505:9;7497:38;;;::::0;;-1:-1:-1;;;7497:38:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7497:38:35;;;;;;;;;;;;;::::1;;7596:19;7625:14;-1:-1:-1::0;;;;;7618:34:35::1;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;7618:36:35;;-1:-1:-1;7664:64:35::1;7698:15;7618:36:::0;7664:26:::1;:64::i;:::-;7750:4;7739:15:::0;;-1:-1:-1;;7739:15:35::1;::::0;::::1;-1:-1:-1::0;;;;7764:29:35::1;::::0;;;;7739:15:::1;7826:7:::0;::::1;;;7808:15;:25;7804:89;;;7849:7;:33:::0;;-1:-1:-1;;7849:33:35::1;;7866:15;7849:33;;;;::::0;;7804:89:::1;7932:7;::::0;7908:32:::1;::::0;;7929:1:::1;7908:32:::0;;7932:7:::1;::::0;;::::1;;;7908:32;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;::::1;2397:1;7438:509::o:0;1259:25::-;;;;:::o;1609:21::-;;;;;;;;;:::o;9021:485::-;2338:10;-1:-1:-1;;;;;2360:8:35;2338:31;;2330:57;;;;;-1:-1:-1;;;2330:57:35;;;;;;;;;;;;-1:-1:-1;;;2330:57:35;;;;;;;;;;;;;;;9259:8:::1;::::0;::::1;;9258:9;9250:30;;;::::0;;-1:-1:-1;;;9250:30:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9250:30:35;;;;;;;;;;;;;::::1;;9312:11;9298:25;;:10;:25;;;9290:55;;;::::0;;-1:-1:-1;;;9290:55:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9290:55:35;;;;;;;;;;;;;::::1;;9356:70;9390:15;9408:17;9356:26;:70::i;:::-;9436:63;9450:7;9459:19;9480:18;9436:13;:63::i;:::-;9021:485:::0;;;;;:::o;1441:29::-;;;;;;:::o;1699:42::-;;;-1:-1:-1;;;1699:42:35;;;;;:::o;6847:310::-;2241:8;-1:-1:-1;;;;;2241:14:35;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:16:35;-1:-1:-1;;;;;2227:30:35;:10;:30;2219:53;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;;;;-1:-1:-1;;;;;6928:30:35;::::1;6924:227;;6991:34;::::0;6975:11:::1;::::0;6991:10:::1;::::0;7014:6;;6975:11;6991:34;6975:11;6991:34;7014:6;6991:10;:34:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6974:51;;;7047:6;7039:15;;;::::0;::::1;;6924:227;;;;7085:55;7114:5;7121:10;7133:6;7085:28;:55::i;:::-;6847:310:::0;;:::o;6467:159::-;2241:8;-1:-1:-1;;;;;2241:14:35;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2241:16:35;-1:-1:-1;;;;;2227:30:35;:10;:30;2219:53;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;-1:-1:-1;;;2219:53:35;;;;;;;;;;;;;;;6548:25;6540:45:::1;;;::::0;;-1:-1:-1;;;6540:45:35;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6540:45:35;;;;;;;;;;;;;::::1;;6595:10;:24:::0;6467:159::o;2126:55::-;;;;;;;;;;;;-1:-1:-1;;;;;2126:55:35;;:::o;849:39::-;;;:::o;948:37::-;;;:::o;2006:50::-;;;-1:-1:-1;;;2006:50:35;;-1:-1:-1;;;;;2006:50:35;;:::o;1041:44::-;;;:::o;4639:532::-;4853:8;;4808:21;;4853:8;;:36;;;;-1:-1:-1;4887:1:35;4865:10;:24;;4853:36;4845:61;;;;;-1:-1:-1;;;4845:61:35;;;;;;;;;;;;-1:-1:-1;;;4845:61:35;;;;;;;;;;;;;;;4917:50;4929:7;4938:21;4961:5;;4917:11;:50::i;:::-;5081:83;5105:7;5114:21;5137:26;;;;;;;;;-1:-1:-1;;;;;5137:26:35;5081:23;:83::i;:::-;5065:99;4639:532;-1:-1:-1;;;;;4639:532:35:o;3599:664::-;3775:8;;3729:21;;3775:8;;3774:9;3766:30;;;;;-1:-1:-1;;;3766:30:35;;;;;;;;;;;;-1:-1:-1;;;3766:30:35;;;;;;;;;;;;;;;3814:19;;:32;;;;-1:-1:-1;;;3814:19:35;;;;:32;;3806:63;;;;;-1:-1:-1;;;3806:63:35;;;;;;;;;;;;-1:-1:-1;;;3806:63:35;;;;;;;;;;;;;;;3880:19;3909:14;-1:-1:-1;;;;;3902:34:35;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3902:36:35;3972:41;;;-1:-1:-1;;;3972:41:35;;-1:-1:-1;;;;;3972:41:35;;;;;;;;;3902:36;;-1:-1:-1;;;3979:14:35;3972:32;;;;;;:41;;;;;3902:36;;3972:41;;;;;;;;:32;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3972:41:35;4071:7;;3972:41;;-1:-1:-1;4024:11:35;;4045:34;;;;;;;4071:7;;;;4045:14;:34::i;:::-;4024:56;;4090:24;4117:48;4147:4;4153:11;4117:29;:48::i;:::-;4090:75;;4191:65;4215:7;4224:13;4239:16;4191:23;:65::i;:::-;4175:81;3599:664;-1:-1:-1;;;;;;;3599:664:35:o;3194:157::-;3317:25;;3254:7;;3288:55;;-1:-1:-1;;;3317:25:35;;;;3288:28;:55::i;:::-;3273:71;;3194:157;:::o;825:517:90:-;885:6;;1173:16;1165:24;;1161:68;;;1226:2;1203:20;1217:5;1203:13;:20::i;:::-;:25;1191:38;;1161:68;1263:17;;;1321:1;1305:17;1304:30;;-1:-1:-1;825:517:90;;;;:::o;1923:1056:89:-;1973:11;2263:6;2255:15;;;;;;-1:-1:-1;;;2311:1:89;:40;2307:104;;2373:3;2367:9;;;;2390:10;2307:104;2429:19;2424:1;:24;2420:86;;2470:2;2464:8;;;;2486:9;2420:86;2524:11;2519:1;:16;2515:78;;2557:2;2551:8;;;;2573:9;2515:78;2611:7;2606:1;:12;2602:74;;2640:2;2634:8;;;;2656:9;2602:74;2694:5;2689:1;:10;2685:70;;2721:1;2715:7;;;;2736:8;2685:70;2773:4;2768:1;:9;2764:69;;2799:1;2793:7;;;;2814:8;2764:69;2851:3;2846:1;:8;2842:68;;2876:1;2870:7;;;;2891:8;2842:68;2928:3;2923:1;:8;2919:22;;2940:1;2933:8;1923:1056;;;:::o;13165:345:35:-;13326:12;13368:7;13377;13351:34;;;;;;-1:-1:-1;;;;;13351:34:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;13341:45;;;;;;13326:60;;13396:16;13415:43;13434:5;;13415:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13441:10:35;;-1:-1:-1;13453:4:35;;-1:-1:-1;13415:18:35;;-1:-1:-1;13415:43:35:i;:::-;13396:62;;13476:11;13468:35;;;;;-1:-1:-1;;;13468:35:35;;;;;;;;;;;;-1:-1:-1;;;13468:35:35;;;;;;;;;;;;;;;13165:345;;;;;;:::o;9512:1069::-;9627:21;9651:81;9675:7;9684:19;9705:26;;;;;;;;;-1:-1:-1;;;;;9705:26:35;9651:23;:81::i;:::-;10086:26;;9627:105;;-1:-1:-1;10050:150:35;;:125;;426:3:47;;10050:63:35;;:18;;-1:-1:-1;;;10086:26:35;;-1:-1:-1;;;;;10086:26:35;10050:35;:63::i;:::-;:80;;:125::i;:::-;:148;:150::i;:::-;-1:-1:-1;;;;;10018:29:35;;;;;;:20;:29;;;;;:182;;-1:-1:-1;;10018:182:35;-1:-1:-1;;;;;10018:182:35;;;;;;;;;;10215:17;;10211:364;;10270:12;-1:-1:-1;;;;;10252:40:35;;10293:7;10302:13;10252:64;;;;;;;;;;;;;-1:-1:-1;;;;;10252:64:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10248:317;;;;;10335:12;10350:17;:15;:17::i;:::-;10335:32;;10389:7;10385:111;;;10454:7;-1:-1:-1;;;;;10425:52:35;10440:12;-1:-1:-1;;;;;10425:52:35;;10463:13;10425:52;;;;;;;;;;;;;;;;;;10317:239;9512:1069;;;;:::o;11770:383::-;11928:7;;;;;;;11916:20;;;;;;11993:7;;11946:11;;11967:34;;;;;;;11993:7;;;;11967:14;:34::i;:::-;11946:56;;12042:48;12072:4;12078:11;12042:29;:48::i;:::-;12013:26;:77;;12101:45;12130:15;12101:45;-1:-1:-1;;;12101:45:35;-1:-1:-1;;;;;;;12013:77:35;;;-1:-1:-1;;;12013:77:35;;;;;;;;;12101:45;;;;;;;-1:-1:-1;;;11770:383:35:o;1871:243:90:-;2092:1;2083:10;;;2043:21;;;;2082:24;;1871:243::o;1326:206:60:-;1466:5;-1:-1:-1;;;;;1448:33:60;;1482:7;1491:6;1448:50;;;;;;;;;;;;;-1:-1:-1;;;;;1448:50:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1508:17;:15;:17::i;:::-;1326:206;;;:::o;12159:938:35:-;-1:-1:-1;;;;;12953:29:35;;12315:7;12953:29;;;:20;:29;;;;;;12805:285;;496:4:47;;12805:224:35;;13001:27;13007:21;13001:27;:2;:27;;12805:178;;-1:-1:-1;;;;;12953:29:35;;;;12805:130;;426:3:47;;12805:224:35;;12813:24;;12805:68;;:50;:68::i;:130::-;:147;;:178::i;:::-;:195;;:224::i;:285::-;12798:292;12159:938;-1:-1:-1;;;;12159:938:35:o;3408:101:91:-;3464:6;3493:1;3489;:5;:13;;3501:1;3489:13;;;3497:1;3489:13;3482:20;;3408:101;;;;;:::o;10587:1177:35:-;10762:19;;10682:7;;;;10762:26;;;;-1:-1:-1;;;10762:19:35;;;;:26;:45;;;;;10796:11;10792:1;:15;10762:45;10758:890;;;10925:19;;;-1:-1:-1;;;10925:19:35;;;;;10918:26;;10882:62;11432:205;11625:11;11432:171;3248:11:47;11432:171:35;11544:21;:19;:21::i;:::-;-1:-1:-1;;;;;11432:134:35;:90;:25;496:4:47;11432:46:35;:90::i;:205::-;11390:247;;10758:890;;11673:26;;11665:92;;:80;;-1:-1:-1;;;11673:26:35;;-1:-1:-1;;;;;11673:26:35;11705:39;11665;:80::i;497:779:1:-;588:4;627;588;642:515;666:5;:12;662:1;:16;642:515;;;699:20;722:5;728:1;722:8;;;;;;;;;;;;;;699:31;;765:12;749;:28;745:402;;917:12;931;900:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:55;;;;;;875:70;;745:402;;;1104:12;1118;1087:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:55;;;;;;1062:70;;745:402;-1:-1:-1;680:3:1;;642:515;;;-1:-1:-1;1249:20:1;;;;497:779;-1:-1:-1;;;497:779:1:o;1152:178:92:-;1210:7;1233:6;1229:20;;-1:-1:-1;1248:1:92;1241:8;;1229:20;1271:5;;;1275:1;1271;:5;:1;1294:5;;;;;:10;1286:19;;;;;1794:120;1852:7;1883:1;1879;:5;1871:14;;;;;;1906:1;1902;:5;;;;;;;1794:120;-1:-1:-1;;;1794:120:92:o;4745:137::-;4798:7;-1:-1:-1;;;;;4825:22:92;;;4817:31;;;;;;-1:-1:-1;4873:1:92;4745:137::o;13516:701:35:-;13564:12;13588:24;;:::i;:::-;13652:16;13685:135;;;;13842:2;13837:219;;;;14182:1;14171:12;;13645:556;;13685:135;13778:1;13767:12;;13685:135;;13837:219;13943:2;13940:1;13932:6;13917:29;13984:6;13978:13;13967:24;;13645:556;;13631:580;;:::o;3005:746:60:-;3056:12;3078:24;;:::i;:::-;3142:16;3175:135;;;;3332:2;3327:219;;;;3679:1;3676;3669:12;3175:135;3268:1;3257:12;;3175:135;;3327:219;3433:2;3430:1;3422:6;3407:29;3474:6;3468:13;3457:24;;3135:564;;3727:7;3719:25;;;;;-1:-1:-1;;;3719:25:60;;;;;;;;;;;;-1:-1:-1;;;3719:25:60;;;;;;;;;;;;;;784:121:92;842:7;874:1;869;:6;;861:15;;;;;;-1:-1:-1;893:5:92;;;784:121::o;369:144::-;427:7;458:5;;;481:6;;;;473:15;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;:::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"accumulatedRewardPerNToken()": {"notice": "Aggregate tokens accumulated per nToken at `lastAccumulateTime` "}, "claimRewards(address,uint16,uint256,uint256,uint256)": {"notice": "Allows claiming rewards but only from Notional system, called on each nToken balance change", "params": {"account": "address to claim rewards for", "currencyId": "id number of the currency", "nTokenBalanceAfter": "account nToken balance after the change", "nTokenBalanceBefore": "account nToken balance before the change", "priorNTokenSupply": "total nToken supply before the change"}}, "claimRewardsDirect(address,uint256,bytes32[])": {"notice": "Allows claiming rewards after rewarder has been detached", "params": {"account": "address to claim rewards for", "nTokenBalanceAtDetach": "nToken balance of account at time of detachment", "proof": "merkle proof to prove account and nTokenBalanceAtDetach are in tree"}}, "detach()": {"details": "Called from Notional system to detach rewarder when switching to a new rewarder or when incentive period is over, after this merkle tree of user nToken balances at detach time should be generated offline and merkle root uploaded to this contract"}, "detached()": {"notice": "When true user needs to call contract directly to claim any rewards left"}, "emissionRatePerYear()": {"notice": "The emission rate of REWARD_TOKEN in INTERNAL_TOKEN_PRECISION"}, "endTime()": {"notice": "Marks the timestamp when incentives will end. Will always be less than block.timestamp if detached is true."}, "getAccountRewardClaim(address,uint256,bytes32[])": {"notice": "Get amount of reward still left for account to claim, only called after rewarder is detached and merkle root is set", "params": {"account": "address to get reward amount for", "nTokenBalanceAtDetach": "nToken balance of account at time of detachment", "proof": "merkle proof to prove account and nTokenBalanceAtDetach are in tree"}}, "getAccountRewardClaim(address,uint32)": {"notice": "Get amount of reward account can claim at specified block time, only called before rewarder is detached", "params": {"account": "address to get reward amount for", "blockTime": "block time at which to get reward amount"}}, "lastAccumulatedTime()": {"notice": "Last time the contract accumulated the reward"}, "merkleRoot()": {"notice": "When a rewarder is detached, it converts to an airdrop contract using the this merkleRoot that is set."}, "recover(address,uint256)": {"notice": "Allows owner to recover any ERC20 or ETH mistakenly sent to this contract", "params": {"amount": "amount to recover", "token": "address of the token to recover, in case of ETH pass address(0)"}}, "rewardDebtPerAccount(address)": {"notice": "Reward debt per account stored in 18 decimals."}, "setIncentiveEmissionRate(uint128,uint32)": {"notice": "Set incentive emission rate and incentive period end time, called only in case emission rate or incentive period changes since it is already set at deploy time, only can be called before rewarder is detached", "params": {"_emissionRatePerYear": "emission rate per year in INTERNAL_TOKEN_PRECISION", "_endTime": "time in seconds when incentive period will end"}}, "setMerkleRoot(bytes32)": {"notice": "Set merkle root, only called after rewarder is detached", "params": {"_merkleRoot": "merkle root of the tree that contains accounts and nToken balances at detach time"}}}, "stateVariables": {"merkleRoot": {"details": "Uses a single storage slot"}}, "version": 1}, "offset": [734, 14219], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5705AE43 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9C07E54C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9C07E54C EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x9D4BE3F5 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xA105FC96 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xDACF76BD EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xDADFF3C4 EQ PUSH2 0x44E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5705AE43 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7D43702F EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x858DCCB3 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x99248EA7 EQ PUSH2 0x368 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x2EB4A7AB GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x3F3EF50D EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x432CC1B3 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x4FD371E3 EQ PUSH2 0x2CD JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x330D663 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x537B357 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xE1E772F EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x1C921976 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x225435C0 EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x47A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x4DD JUMP JUMPDEST PUSH2 0x210 PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH2 0xFFFF PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0x2B9 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xAFF JUMP JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x210 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x344 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x380 PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x344 PUSH2 0x1089 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x4C0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD0819195D1858DA1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4CC DUP5 DUP5 DUP5 DUP5 PUSH2 0x117A JUMP JUMPDEST PUSH2 0x4D7 DUP5 DUP5 DUP6 PUSH2 0x1244 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x11195D1858DA1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x681 TIMESTAMP DUP3 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0x693 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x10AD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH7 0xFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x48 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 DUP2 SWAP1 SSTORE PUSH4 0xFFFFFFFF DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP3 DIV AND LT PUSH2 0x716 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E76616C696420456E642054696D65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH5 0xFFFFFFFF00 NOT AND PUSH2 0x100 PUSH4 0xFFFFFFFF DUP6 AND MUL OR SWAP1 DUP2 SWAP1 SSTORE PUSH32 0x5208AB6D453E25FF339785D249C1622A65A099886CB31E91BA4BCE4987D3316C SWAP1 PUSH2 0x76D SWAP1 PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x147C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x81F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48139BDD1A5BDB985B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x86A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E4819195D1858DA1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x8FD TIMESTAMP DUP3 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR PUSH7 0xFFFFFFFFFFFFFF PUSH1 0x48 SHL NOT AND SWAP1 DUP2 SWAP1 SSTORE PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x945 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH5 0xFFFFFFFF00 NOT AND PUSH2 0x100 TIMESTAMP PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH2 0x100 SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD PUSH32 0x5208AB6D453E25FF339785D249C1622A65A099886CB31E91BA4BCE4987D3316C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xA14 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x13DB9B1E48139BDD1A5BDB985B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA57 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x11195D1858DA1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND DUP5 PUSH2 0xFFFF AND EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DC9BDB99C818DD5C9C995B98DE481A59 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAD1 TIMESTAMP DUP3 PUSH2 0x13FA JUMP JUMPDEST PUSH2 0xADC DUP6 DUP5 DUP5 PUSH2 0x1244 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC36 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xC30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC41 JUMP JUMPDEST PUSH2 0xC41 DUP3 CALLER DUP4 PUSH2 0x148A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD13 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xD4F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND DUP1 ISZERO PUSH2 0xE07 JUMPI POP PUSH1 0x0 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xE47 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x139BDD0819195D1858DA1959 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xE53 DUP6 DUP6 DUP6 DUP6 PUSH2 0x117A JUMP JUMPDEST PUSH2 0xE73 DUP6 DUP6 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1506 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x11195D1858DA1959 PUSH1 0xC2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP5 AND PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420626C6F636B2074696D65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH32 0x0 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1016 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x102A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1063 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP9 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1071 DUP3 DUP6 PUSH2 0x15AC JUMP JUMPDEST SWAP1 POP PUSH2 0x107E DUP8 DUP5 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x10A8 SWAP1 PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH7 0xFFFFFFFFFFFFFF AND PUSH2 0x147C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH6 0xFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x10CD JUMPI PUSH1 0x2F PUSH2 0x10C9 DUP5 PUSH2 0x10DC JUMP JUMPDEST SUB SWAP1 POP JUMPDEST DUP3 DUP2 SHR PUSH1 0x8 SHL OR SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x10FB JUMPI PUSH1 0x80 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1113 JUMPI PUSH1 0x40 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1127 JUMPI PUSH1 0x20 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1139 JUMPI PUSH1 0x10 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x114A JUMPI PUSH1 0x8 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x115A JUMPI PUSH1 0x4 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x116A JUMPI PUSH1 0x2 SWAP2 DUP3 SHR SWAP2 ADD JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x10D7 JUMPI PUSH1 0x1 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x11FA DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SLOAD SWAP3 POP DUP7 SWAP2 POP PUSH2 0x1641 SWAP1 POP JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x123C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6F74496E4D65726B6C65 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1266 DUP5 DUP5 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1506 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH2 0x12A0 SWAP1 PUSH2 0x129B SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0x1295 SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x16EA JUMP JUMPDEST SWAP1 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x1730 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x136D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1376 JUMPI PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 PUSH2 0x174A JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xADC JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA282A314FFBA449688A7C5EB4426BD8E1781944CE824CE34DFAEA4691D08F146 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x142F SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x143B DUP2 DUP4 PUSH2 0x15AC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP AND PUSH1 0x1 PUSH1 0x28 SHL MUL PUSH9 0xFFFFFFFF0000000000 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 OR AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SHR PUSH1 0xFF SWAP1 SWAP2 AND SHL SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1501 PUSH2 0x1785 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x158A SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x1295 SWAP1 PUSH1 0xFF PUSH32 0x0 AND PUSH1 0xA EXP SWAP1 PUSH2 0x1584 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH2 0x157E SWAP1 PUSH4 0x5F5E100 SWAP1 DUP7 SWAP1 DUP13 SWAP1 DUP13 AND PUSH2 0x16EA JUMP JUMPDEST SWAP1 PUSH2 0x17F2 JUMP JUMPDEST SWAP1 PUSH2 0x16EA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SLT PUSH2 0x15A1 JUMPI DUP2 PUSH2 0x15A3 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP3 DIV AND LT DUP1 ISZERO PUSH2 0x15D2 JUMPI POP DUP3 PUSH1 0x0 LT JUMPDEST ISZERO PUSH2 0x1620 JUMPI PUSH1 0x1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x28 SHL SWAP1 SWAP2 DIV DUP2 AND DUP6 SUB AND PUSH2 0x161C DUP5 PUSH2 0x1295 PUSH4 0x1DA9C00 DUP2 PUSH2 0x1601 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1584 DUP8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x158A SWAP1 PUSH2 0x129B SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x165D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x16A4 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x16D6 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1646 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16F9 JUMPI POP PUSH1 0x0 PUSH2 0x15A6 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1706 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x171F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1728 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x1746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1754 PUSH2 0x1819 JUMP JUMPDEST RETURNDATASIZE DUP1 ISZERO PUSH2 0x176C JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x1775 JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x1780 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP4 RETURNDATACOPY DUP2 MLOAD SWAP3 POP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x178F PUSH2 0x1819 JUMP JUMPDEST RETURNDATASIZE DUP1 ISZERO PUSH2 0x17A3 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x17AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP4 RETURNDATACOPY DUP2 MLOAD SWAP3 POP JUMPDEST POP DUP2 PUSH2 0xC41 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x455243323 PUSH1 0xDC SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 CHAINID CODECOPY SWAP4 JUMPDEST EQ DUP14 DUP2 PUSH15 0x897EBE75F8648DE6B80ED7BD5EF4F5 0xBD 0x1E 0xBD 0xDD 0xBD DUP2 0xBD 0xDB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ", "sha1": "be5158f6a770a204b8fb9e6e76809ca1635fc54e", "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity =0.7.6;\n\nimport {GenericToken} from \"../../internal/balances/protocols/GenericToken.sol\";\nimport {IRewarder} from \"../../../interfaces/notional/IRewarder.sol\";\nimport {NotionalProxy} from \"../../../interfaces/notional/NotionalProxy.sol\";\nimport {IERC20} from \"../../../interfaces/IERC20.sol\";\nimport {IEIP20NonStandard} from \"../../../interfaces/IEIP20NonStandard.sol\";\nimport {Constants} from \"../../global/Constants.sol\";\nimport {SafeInt256} from \"../../math/SafeInt256.sol\";\nimport {SafeUint256} from \"../../math/SafeUint256.sol\";\nimport {FloatingPoint} from \"../../math/FloatingPoint.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/cryptography/MerkleProof.sol\";\n\ncontract SecondaryRewarder is IRewarder {\n    using SafeUint256 for uint256;\n    using SafeInt256 for int256;\n\n    NotionalProxy public immutable NOTIONAL;\n    address public immutable override NTOKEN_ADDRESS;\n    address public immutable REWARD_TOKEN;\n    uint8 public immutable REWARD_TOKEN_DECIMALS;\n    uint16 public immutable override CURRENCY_ID;\n\n    /// @notice When a rewarder is detached, it converts to an airdrop contract using the\n    /// this merkleRoot that is set.\n    /// @dev Uses a single storage slot\n    bytes32 public merkleRoot;\n\n    /* Rest of storage variables are packed into 256 bits */\n    /// @notice When true user needs to call contract directly to claim any rewards left\n    bool public override detached;\n\n    /// @notice Marks the timestamp when incentives will end. Will always be less than block.timestamp\n    /// if detached is true.\n    uint32 public endTime;\n\n    /// @notice Last time the contract accumulated the reward\n    uint32 public override lastAccumulatedTime;\n\n    // The emission rate of REWARD_TOKEN in INTERNAL_TOKEN_PRECISION packed to uint56\n    uint56 private packedEmissionRatePerYear;\n\n    /// @notice Aggregate tokens accumulated per nToken at `lastAccumulateTime` \n    //  in INCENTIVE_ACCUMULATION_PRECISION\n    uint128 public override accumulatedRewardPerNToken;\n\n    /// @notice Reward debt per account stored in 18 decimals.\n    mapping(address => uint128) public rewardDebtPerAccount;\n\n    modifier onlyOwner() {\n        require(msg.sender == NOTIONAL.owner(), \"Only owner\");\n        _;\n    }\n\n    modifier onlyNotional() {\n        require(msg.sender == address(NOTIONAL), \"Only Notional\");\n        _;\n    }\n\n    constructor(\n        NotionalProxy notional,\n        uint16 currencyId,\n        IERC20 incentive_token,\n        uint128 _emissionRatePerYear, // in INTERNAL_TOKEN_PRECISION\n        uint32 _endTime\n    ) {\n        NOTIONAL = notional;\n        CURRENCY_ID = currencyId;\n        NTOKEN_ADDRESS = notional.nTokenAddress(currencyId);\n        REWARD_TOKEN = address(incentive_token);\n        REWARD_TOKEN_DECIMALS = IERC20(address(incentive_token)).decimals();\n\n        packedEmissionRatePerYear = FloatingPoint.packTo56Bits(_emissionRatePerYear);\n        lastAccumulatedTime = uint32(block.timestamp);\n        require(lastAccumulatedTime < _endTime, \"Invalid End Time\");\n        endTime = _endTime;\n    }\n\n    /// @notice The emission rate of REWARD_TOKEN in INTERNAL_TOKEN_PRECISION\n    function emissionRatePerYear() public view override returns(uint128) {\n        return uint128(FloatingPoint.unpackFromBits(packedEmissionRatePerYear));\n    }\n\n    /// @notice Get amount of reward account can claim at specified block time, only called before rewarder is detached\n    /// @param account address to get reward amount for\n    /// @param blockTime block time at which to get reward amount\n    function getAccountRewardClaim(address account, uint32 blockTime)\n        external\n        view\n        override\n        returns (uint256 rewardToClaim)\n    {\n        require(!detached, \"Detached\");\n        require(lastAccumulatedTime <= blockTime, \"Invalid block time\");\n\n        uint256 totalSupply = IERC20(NTOKEN_ADDRESS).totalSupply();\n        uint256 nTokenBalance = IERC20(NTOKEN_ADDRESS).balanceOf(account);\n\n        uint32 time = uint32(SafeInt256.min(blockTime, endTime));\n        uint128 rewardsPerNToken = _getAccumulatedRewardPerToken(time, totalSupply);\n        rewardToClaim = _calculateRewardToClaim(account, nTokenBalance, rewardsPerNToken);\n    }\n\n    /// @notice Get amount of reward still left for account to claim, only called after rewarder is detached\n    /// and merkle root is set\n    /// @param account address to get reward amount for\n    /// @param nTokenBalanceAtDetach nToken balance of account at time of detachment\n    /// @param proof merkle proof to prove account and nTokenBalanceAtDetach are in tree\n    function getAccountRewardClaim(address account, uint256 nTokenBalanceAtDetach, bytes32[] calldata proof)\n        external\n        view\n        override\n        returns (uint256 rewardToClaim)\n    {\n        require(detached && merkleRoot != bytes32(0), \"Not detached\");\n\n        _checkProof(account, nTokenBalanceAtDetach, proof);\n        // no need to accumulate, it was already accumulated when rewarder was detached\n        rewardToClaim = _calculateRewardToClaim(account, nTokenBalanceAtDetach, accumulatedRewardPerNToken);\n    }\n\n    /// @notice Set incentive emission rate and incentive period end time, called only in case emission\n    /// rate or incentive period changes since it is already set at deploy time, only can be called before\n    /// rewarder is detached\n    /// @param _emissionRatePerYear emission rate per year in INTERNAL_TOKEN_PRECISION\n    /// @param _endTime time in seconds when incentive period will end\n    function setIncentiveEmissionRate(uint128 _emissionRatePerYear, uint32 _endTime) external onlyOwner {\n        require(!detached, \"Detached\");\n        uint256 totalSupply = IERC20(NTOKEN_ADDRESS).totalSupply();\n\n        _accumulateRewardPerNToken(uint32(block.timestamp), totalSupply);\n\n        packedEmissionRatePerYear = FloatingPoint.packTo56Bits(_emissionRatePerYear);\n        // lastAccumulatedTime is at block.timestamp here, ensure that the end time is always\n        // further in the future.\n        require(lastAccumulatedTime < _endTime, \"Invalid End Time\");\n        endTime = _endTime;\n\n        emit RewardEmissionUpdate(FloatingPoint.unpackFromBits(packedEmissionRatePerYear), _endTime);\n    }\n\n    /// @notice Set merkle root, only called after rewarder is detached\n    /// @param _merkleRoot merkle root of the tree that contains accounts and nToken balances at detach time\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        require(_merkleRoot != bytes32(0), \"Invalid\");\n        merkleRoot = _merkleRoot;\n    }\n\n    /// @notice Allows owner to recover any ERC20 or ETH mistakenly sent to this contract\n    /// @param token address of the token to recover, in case of ETH pass address(0)\n    /// @param amount amount to recover\n    function recover(address token, uint256 amount) external onlyOwner {\n        if (Constants.ETH_ADDRESS == token) {\n            (bool status,) = msg.sender.call{value: amount}(\"\");\n            require(status);\n        } else {\n            GenericToken.safeTransferOut(token, msg.sender, amount);\n        }\n    }\n\n    /// @dev Called from Notional system to detach rewarder when switching to a new rewarder or when incentive\n    /// period is over, after this merkle tree of user nToken balances at detach time should be generated\n    /// offline and merkle root uploaded to this contract\n    function detach() external override onlyNotional {\n        require(!detached, \"Already detached\");\n\n        // accumulate for the last time if needed\n        uint256 totalSupply = IERC20(NTOKEN_ADDRESS).totalSupply();\n        _accumulateRewardPerNToken(uint32(block.timestamp), totalSupply);\n\n        detached = true;\n        packedEmissionRatePerYear = 0;\n\n        if (block.timestamp < endTime) {\n            endTime = uint32(block.timestamp);\n        }\n\n        emit RewardEmissionUpdate(0, endTime);\n    }\n\n    /// @notice Allows claiming rewards after rewarder has been detached\n    /// @param account address to claim rewards for\n    /// @param nTokenBalanceAtDetach nToken balance of account at time of detachment\n    /// @param proof merkle proof to prove account and nTokenBalanceAtDetach are in tree\n    function claimRewardsDirect(address account, uint256 nTokenBalanceAtDetach, bytes32[] calldata proof)\n        external\n        override\n    {\n        require(detached, \"Not detached\");\n\n        _checkProof(account, nTokenBalanceAtDetach, proof);\n\n        _claimRewards(account, nTokenBalanceAtDetach, nTokenBalanceAtDetach);\n    }\n\n    /// @notice Allows claiming rewards but only from Notional system, called on each nToken balance change\n    /// @param account address to claim rewards for\n    /// @param currencyId id number of the currency\n    /// @param nTokenBalanceBefore account nToken balance before the change\n    /// @param nTokenBalanceAfter account nToken balance after the change\n    /// @param priorNTokenSupply total nToken supply before the change\n    function claimRewards(\n        address account,\n        uint16 currencyId,\n        uint256 nTokenBalanceBefore,\n        uint256 nTokenBalanceAfter,\n        uint256 priorNTokenSupply\n    ) external override onlyNotional {\n        require(!detached, \"Detached\");\n        require(currencyId == CURRENCY_ID, \"Wrong currency id\");\n\n        _accumulateRewardPerNToken(uint32(block.timestamp), priorNTokenSupply);\n        _claimRewards(account, nTokenBalanceBefore, nTokenBalanceAfter);\n    }\n\n    function _claimRewards(address account, uint256 nTokenBalanceBefore, uint256 nTokenBalanceAfter) private {\n        uint256 rewardToClaim = _calculateRewardToClaim(account, nTokenBalanceBefore, accumulatedRewardPerNToken);\n\n        // Precision here is:\n        //  nTokenBalanceAfter (INTERNAL_TOKEN_PRECISION)\n        //  accumulatedRewardPerNToken (INCENTIVE_ACCUMULATION_PRECISION)\n        // DIVIDE BY\n        //  INTERNAL_TOKEN_PRECISION\n        //  => INCENTIVE_ACCUMULATION_PRECISION (1e18)\n        rewardDebtPerAccount[account] = nTokenBalanceAfter\n            .mul(accumulatedRewardPerNToken)\n            .div(uint256(Constants.INTERNAL_TOKEN_PRECISION))\n            .toUint128();\n\n        if (0 < rewardToClaim) {\n            try IEIP20NonStandard(REWARD_TOKEN).transfer(account, rewardToClaim) {\n                bool success = checkReturnCode();\n                if (success) {\n                    emit RewardTransfer(REWARD_TOKEN, account, rewardToClaim);\n                }\n            // ignore failed reward transfers\n            } catch {}\n        }\n    }\n\n    function _getAccumulatedRewardPerToken(uint32 time, uint256 totalSupply) private view returns (uint128) {\n        uint256 additionalIncentiveAccumulatedPerNToken;\n        if (lastAccumulatedTime < time && 0 < totalSupply) {\n            // NOTE: no underflow, checked in if statement\n            uint256 timeSinceLastAccumulation = time - lastAccumulatedTime;\n            // Precision here is:\n            //  timeSinceLastAccumulation (SECONDS)\n            //  INCENTIVE_ACCUMULATION_PRECISION (1e18)\n            //  INTERNAL_TOKEN_PRECISION (1e8)\n            // DIVIDE BY\n            //  YEAR (SECONDS)\n            //  INTERNAL_TOKEN_PRECISION (1e8)\n            // => Precision = INCENTIVE_ACCUMULATION_PRECISION * INTERNAL_TOKEN_PRECISION / INTERNAL_TOKEN_PRECISION\n            // => 1e18\n            additionalIncentiveAccumulatedPerNToken = timeSinceLastAccumulation\n                .mul(Constants.INCENTIVE_ACCUMULATION_PRECISION)\n                .mul(emissionRatePerYear())\n                .div(Constants.YEAR)\n                .div(totalSupply);\n        }\n\n        return uint256(accumulatedRewardPerNToken).add(additionalIncentiveAccumulatedPerNToken).toUint128();\n    }\n\n    function _accumulateRewardPerNToken(uint32 blockTime, uint256 totalSupply) private {\n        // Ensure that end time is set to some value\n        require(0 < endTime);\n        uint32 time = uint32(SafeInt256.min(blockTime, endTime));\n\n        accumulatedRewardPerNToken = _getAccumulatedRewardPerToken(time, totalSupply);\n\n        lastAccumulatedTime = uint32(block.timestamp);\n    }\n\n    function _calculateRewardToClaim(address account, uint256 nTokenBalanceAtLastClaim, uint128 rewardsPerNToken)\n        private\n        view\n        returns (uint256)\n    {\n        // Precision here is:\n        //   nTokenBalanceAtLastClaim (INTERNAL_TOKEN_PRECISION)\n        //   mul rewardsPerNToken (INCENTIVE_ACCUMULATION_PRECISION)\n        //   div INTERNAL_TOKEN_PRECISION\n        // => INCENTIVE_ACCUMULATION_PRECISION\n        // SUB rewardDebtPerAccount (INCENTIVE_ACCUMULATION_PRECISION)\n        //\n        // - mul REWARD_TOKEN_DECIMALS\n        // - div INCENTIVE_ACCUMULATION_PRECISION\n        // => REWARD_TOKEN_DECIMALS\n        return uint256(nTokenBalanceAtLastClaim)\n            .mul(rewardsPerNToken)\n            .div(uint256(Constants.INTERNAL_TOKEN_PRECISION))\n            .sub(rewardDebtPerAccount[account])\n            .mul(10 ** REWARD_TOKEN_DECIMALS)\n            .div(Constants.INCENTIVE_ACCUMULATION_PRECISION);\n    }\n\n    /// @notice Verify merkle proof, or revert if not in tree\n    function _checkProof(address account, uint256 balance, bytes32[] calldata proof) private view {\n        // Verify merkle proof, or revert if not in tree\n        bytes32 leaf = keccak256(abi.encodePacked(account, balance));\n        bool isValidLeaf = MerkleProof.verify(proof, merkleRoot, leaf);\n        require(isValidLeaf, \"NotInMerkle\");\n    }\n\n    function checkReturnCode() private pure returns(bool success) {\n        uint256[1] memory result;\n        assembly {\n            switch returndatasize()\n                case 0 {\n                    // This is a non-standard ERC-20\n                    success := 1 // set success to true\n                }\n                case 32 {\n                    // This is a compliant ERC-20\n                    returndatacopy(result, 0, 32)\n                    success := mload(result) // Set `success = returndata` of external call\n                }\n                default {\n                    // This is an excessively non-compliant ERC-20.\n                    success := 0\n                }\n        }\n    }\n}", "sourceMap": "734:13485:35:-:0;;;2411:699;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2411:699:35;;;;;;;;;;;;;;;;;;;;;;2624:19;;;;-1:-1:-1;;;;;;2624:19:35;;;;2653:24;;;;-1:-1:-1;;;;;;2653:24:35;;;2704:34;;-1:-1:-1;;;2704:34:35;;2653:24;;;2704:34;;;;;;2411:699;;;;;;;;-1:-1:-1;;;;;2624:19:35;;;2704:22;;:34;;;;;2411:699;;2704:34;;;;;;2624:19;2704:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2704:34:35;-1:-1:-1;;;;;;2687:51:35;;;;;;;;2748:39;;;;;;;2821:43;;;-1:-1:-1;;;2821:43:35;;;;-1:-1:-1;;;;;2748:39:35;;;2821:41;;:43;;;;;2704:34;;2821:43;;;;;;;2748:39;2821:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2821:43:35;2797:67;;;;;;2903:48;-1:-1:-1;;;;;2903:48:35;;:26;2821:43;2903:26;;;;;:48;;:::i;:::-;2875:25;:76;;-1:-1:-1;;;;2875:76:35;;;;;;;;;;;;;;;-1:-1:-1;;;;2961:45:35;;2990:15;2961:45;;;;;;;;;;;;;;3024:30;;;:19;;;:30;3016:59;;;;;-1:-1:-1;;;3016:59:35;;;;;;;;;;;;-1:-1:-1;;;3016:59:35;;;;;;;;;;;;;;;3085:7;:18;;;;;;;;-1:-1:-1;;3085:18:35;;;;;;;;;-1:-1:-1;734:13485:35;;-1:-1:-1;;;734:13485:35;825:517:90;885:6;;1173:16;1165:24;;1161:68;;;1226:2;1203:20;1217:5;1203:13;;;;;:20;;:::i;:::-;:25;1191:38;;1161:68;1263:17;;;1321:1;1305:17;1304:30;;-1:-1:-1;825:517:90;;;;:::o;1923:1056:89:-;1973:11;2263:6;2255:15;;;;;;-1:-1:-1;;;2311:1:89;:40;2307:104;;2373:3;2367:9;;;;2390:10;2307:104;2429:19;2424:1;:24;2420:86;;2470:2;2464:8;;;;2486:9;2420:86;2524:11;2519:1;:16;2515:78;;2557:2;2551:8;;;;2573:9;2515:78;2611:7;2606:1;:12;2602:74;;2640:2;2634:8;;;;2656:9;2602:74;2694:5;2689:1;:10;2685:70;;2721:1;2715:7;;;;2736:8;2685:70;2773:4;2768:1;:9;2764:69;;2799:1;2793:7;;;;2814:8;2764:69;2851:3;2846:1;:8;2842:68;;2876:1;2870:7;;;;2891:8;2842:68;2928:3;2923:1;:8;2919:22;;2940:1;2933:8;1923:1056;;;:::o;734:13485:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/external/adapters/SecondaryRewarder.sol", "type": "contract", "deployment": {"address": "0xbf35529d9333feEe50c17Aa0A39eeABea2b3ABB2", "chainid": "1", "blockHeight": 19932683}}