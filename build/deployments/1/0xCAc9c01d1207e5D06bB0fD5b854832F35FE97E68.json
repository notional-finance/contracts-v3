{"abi": [], "allSourcePaths": {"100": "contracts/internal/nToken/nTokenSupply.sol", "101": "contracts/internal/pCash/PrimeCashExchangeRate.sol", "102": "contracts/internal/pCash/PrimeRateLib.sol", "103": "contracts/internal/pCash/PrimeSupplyCap.sol", "104": "contracts/internal/portfolio/BitmapAssetsHandler.sol", "105": "contracts/internal/portfolio/PortfolioHandler.sol", "109": "contracts/internal/valuation/AssetHandler.sol", "117": "contracts/math/ABDKMath64x64.sol", "118": "contracts/math/Bitmap.sol", "119": "contracts/math/FloatingPoint.sol", "120": "contracts/math/SafeInt256.sol", "121": "contracts/math/SafeUint256.sol", "171": "contracts/proxy/beacon/IBeacon.sol", "178": "interfaces/IEIP20NonStandard.sol", "180": "interfaces/IERC20.sol", "183": "interfaces/WETH9.sol", "187": "interfaces/aave/ILendingPool.sol", "189": "interfaces/chainlink/AggregatorInterface.sol", "190": "interfaces/chainlink/AggregatorV2V3Interface.sol", "191": "interfaces/chainlink/AggregatorV3Interface.sol", "192": "interfaces/compound/CErc20Interface.sol", "194": "interfaces/compound/CTokenInterface.sol", "199": "interfaces/notional/IPrimeCashHoldingsOracle.sol", "200": "interfaces/notional/IRewarder.sol", "35": "contracts/external/actions/TradingAction.sol", "72": "contracts/external/proxies/BaseERC4626Proxy.sol", "76": "contracts/global/Constants.sol", "77": "contracts/global/Deployments.sol", "78": "contracts/global/LibStorage.sol", "81": "contracts/global/Types.sol", "82": "contracts/internal/AccountContextHandler.sol", "83": "contracts/internal/Emitter.sol", "84": "contracts/internal/balances/BalanceHandler.sol", "85": "contracts/internal/balances/ExternalLending.sol", "86": "contracts/internal/balances/Incentives.sol", "87": "contracts/internal/balances/TokenHandler.sol", "88": "contracts/internal/balances/protocols/CompoundHandler.sol", "89": "contracts/internal/balances/protocols/GenericToken.sol", "93": "contracts/internal/markets/CashGroup.sol", "94": "contracts/internal/markets/DateTime.sol", "96": "contracts/internal/markets/InterestRateCurve.sol", "97": "contracts/internal/markets/Market.sol", "99": "contracts/internal/nToken/nTokenHandler.sol"}, "ast": {"absolutePath": "contracts/external/actions/TradingAction.sol", "exportedSymbols": {"AccountContext": [87736], "AccountContextHandler": [36943], "BalanceHandler": [40386], "BitmapAssetsHandler": [55423], "CashGroup": [46014], "CashGroupParameters": [87643], "Constants": [87456], "DateTime": [46652], "Emitter": [38972], "InterestRateCurve": [48697], "Market": [49541], "MarketParameters": [87673], "PortfolioHandler": [56793], "PortfolioState": [87595], "PrimeRate": [88079], "PrimeRateLib": [54555], "SafeInt256": [70083], "SafeUint256": [70604], "TradeActionType": [87476], "TradingAction": [13264], "nTokenHandler": [51387]}, "id": 13265, "license": "BSUL-1.1", "nodeType": "SourceUnit", "nodes": [{"id": 12304, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "37:23:35"}, {"id": 12305, "literals": ["abicoder", "v2"], "nodeType": "PragmaDirective", "src": "61:19:35"}, {"absolutePath": "contracts/global/Types.sol", "file": "../../global/Types.sol", "id": 12313, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 88111, "src": "82:178:35", "symbolAliases": [{"foreign": {"id": 12306, "name": "PrimeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "95:9:35", "typeDescriptions": {}}}, {"foreign": {"id": 12307, "name": "PortfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "110:14:35", "typeDescriptions": {}}}, {"foreign": {"id": 12308, "name": "AccountContext", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "130:14:35", "typeDescriptions": {}}}, {"foreign": {"id": 12309, "name": "MarketParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "150:16:35", "typeDescriptions": {}}}, {"foreign": {"id": 12310, "name": "CashGroupParameters", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "172:19:35", "typeDescriptions": {}}}, {"foreign": {"id": 12311, "name": "PrimeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "197:9:35", "typeDescriptions": {}}}, {"foreign": {"id": 12312, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "212:15:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/global/Constants.sol", "file": "../../global/Constants.sol", "id": 12315, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 87457, "src": "261:53:35", "symbolAliases": [{"foreign": {"id": 12314, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "269:9:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeInt256.sol", "file": "../../math/SafeInt256.sol", "id": 12317, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 70084, "src": "315:53:35", "symbolAliases": [{"foreign": {"id": 12316, "name": "SafeInt256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "323:10:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/math/SafeUint256.sol", "file": "../../math/SafeUint256.sol", "id": 12319, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 70605, "src": "369:55:35", "symbolAliases": [{"foreign": {"id": 12318, "name": "SafeUint256", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "377:11:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/Emitter.sol", "file": "../../internal/Emitter.sol", "id": 12321, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 38973, "src": "426:51:35", "symbolAliases": [{"foreign": {"id": 12320, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "434:7:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/balances/BalanceHandler.sol", "file": "../../internal/balances/BalanceHandler.sol", "id": 12323, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 40387, "src": "478:74:35", "symbolAliases": [{"foreign": {"id": 12322, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "486:14:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/InterestRateCurve.sol", "file": "../../internal/markets/InterestRateCurve.sol", "id": 12325, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 48698, "src": "553:79:35", "symbolAliases": [{"foreign": {"id": 12324, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "561:17:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/Market.sol", "file": "../../internal/markets/Market.sol", "id": 12327, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 49542, "src": "633:57:35", "symbolAliases": [{"foreign": {"id": 12326, "name": "Market", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "641:6:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/DateTime.sol", "file": "../../internal/markets/DateTime.sol", "id": 12329, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 46653, "src": "691:61:35", "symbolAliases": [{"foreign": {"id": 12328, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "699:8:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/markets/CashGroup.sol", "file": "../../internal/markets/CashGroup.sol", "id": 12331, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 46015, "src": "753:63:35", "symbolAliases": [{"foreign": {"id": 12330, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "761:9:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/pCash/PrimeRateLib.sol", "file": "../../internal/pCash/PrimeRateLib.sol", "id": 12333, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 54556, "src": "817:67:35", "symbolAliases": [{"foreign": {"id": 12332, "name": "PrimeRateLib", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "825:12:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/PortfolioHandler.sol", "file": "../../internal/portfolio/PortfolioHandler.sol", "id": 12335, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 56794, "src": "885:79:35", "symbolAliases": [{"foreign": {"id": 12334, "name": "PortfolioHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "893:16:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/portfolio/BitmapAssetsHandler.sol", "file": "../../internal/portfolio/BitmapAssetsHandler.sol", "id": 12337, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 55424, "src": "965:85:35", "symbolAliases": [{"foreign": {"id": 12336, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "973:19:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/nToken/nTokenHandler.sol", "file": "../../internal/nToken/nTokenHandler.sol", "id": 12339, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 51388, "src": "1051:70:35", "symbolAliases": [{"foreign": {"id": 12338, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1059:13:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"absolutePath": "contracts/internal/AccountContextHandler.sol", "file": "../../internal/AccountContextHandler.sol", "id": 12341, "nodeType": "ImportDirective", "scope": 13265, "sourceUnit": 36944, "src": "1122:79:35", "symbolAliases": [{"foreign": {"id": 12340, "name": "AccountContextHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "src": "1130:21:35", "typeDescriptions": {}}}], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "contractDependencies": [], "contractKind": "library", "fullyImplemented": true, "id": 13264, "linearizedBaseContracts": [13264], "name": "TradingAction", "nodeType": "ContractDefinition", "nodes": [{"id": 12344, "libraryName": {"id": 12342, "name": "PortfolioHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 56793, "src": "1237:16:35", "typeDescriptions": {"typeIdentifier": "t_contract$_PortfolioHandler_$56793", "typeString": "library PortfolioHandler"}}, "nodeType": "UsingForDirective", "src": "1231:42:35", "typeName": {"id": 12343, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87595, "src": "1258:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_storage_ptr", "typeString": "struct PortfolioState"}}}, {"id": 12347, "libraryName": {"id": 12345, "name": "AccountContextHandler", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 36943, "src": "1284:21:35", "typeDescriptions": {"typeIdentifier": "t_contract$_AccountContextHandler_$36943", "typeString": "library AccountContextHandler"}}, "nodeType": "UsingForDirective", "src": "1278:47:35", "typeName": {"id": 12346, "name": "AccountContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87736, "src": "1310:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_AccountContext_$87736_storage_ptr", "typeString": "struct AccountContext"}}}, {"id": 12350, "libraryName": {"id": 12348, "name": "Market", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 49541, "src": "1336:6:35", "typeDescriptions": {"typeIdentifier": "t_contract$_Market_$49541", "typeString": "library Market"}}, "nodeType": "UsingForDirective", "src": "1330:34:35", "typeName": {"id": 12349, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "1347:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}}, {"id": 12353, "libraryName": {"id": 12351, "name": "CashGroup", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 46014, "src": "1375:9:35", "typeDescriptions": {"typeIdentifier": "t_contract$_CashGroup_$46014", "typeString": "library CashGroup"}}, "nodeType": "UsingForDirective", "src": "1369:40:35", "typeName": {"id": 12352, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "1389:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}}, {"id": 12356, "libraryName": {"id": 12354, "name": "PrimeRateLib", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 54555, "src": "1420:12:35", "typeDescriptions": {"typeIdentifier": "t_contract$_PrimeRateLib_$54555", "typeString": "library PrimeRateLib"}}, "nodeType": "UsingForDirective", "src": "1414:33:35", "typeName": {"id": 12355, "name": "PrimeRate", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 88079, "src": "1437:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PrimeRate_$88079_storage_ptr", "typeString": "struct PrimeRate"}}}, {"id": 12359, "libraryName": {"id": 12357, "name": "SafeInt256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70083, "src": "1458:10:35", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeInt256_$70083", "typeString": "library SafeInt256"}}, "nodeType": "UsingForDirective", "src": "1452:28:35", "typeName": {"id": 12358, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1473:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}}, {"id": 12362, "libraryName": {"id": 12360, "name": "SafeUint256", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 70604, "src": "1491:11:35", "typeDescriptions": {"typeIdentifier": "t_contract$_SafeUint256_$70604", "typeString": "library SafeUint256"}}, "nodeType": "UsingForDirective", "src": "1485:30:35", "typeName": {"id": 12361, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1507:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"canonicalName": "TradingAction.TradeContext", "id": 12375, "members": [{"constant": false, "id": 12364, "mutability": "mutable", "name": "cash", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1603:11:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12363, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1603:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12366, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1624:18:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12365, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1624:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12368, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1652:10:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12367, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1652:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12370, "mutability": "mutable", "name": "netCash", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1672:14:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12369, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1672:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12372, "mutability": "mutable", "name": "totalFee", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1696:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12371, "name": "int256", "nodeType": "ElementaryTypeName", "src": "1696:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12374, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 12375, "src": "1721:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12373, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1721:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "TradeContext", "nodeType": "StructDefinition", "scope": 13264, "src": "1573:172:35", "visibility": "public"}, {"body": {"id": 12425, "nodeType": "Block", "src": "2080:430:35", "statements": [{"assignments": [12388], "declarations": [{"constant": false, "id": 12388, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 12425, "src": "2090:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12387, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "2090:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}], "id": 12393, "initialValue": {"arguments": [{"id": 12391, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12378, "src": "2162:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 12389, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46014, "src": "2129:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CashGroup_$46014_$", "typeString": "type(library CashGroup)"}}, "id": 12390, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buildCashGroupStateful", "nodeType": "MemberAccess", "referencedDeclaration": 46013, "src": "2129:32:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (uint16) returns (struct CashGroupParameters memory)"}}, "id": 12392, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2129:44:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "2090:83:35"}, {"assignments": [12395], "declarations": [{"constant": false, "id": 12395, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 12425, "src": "2183:30:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 12394, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "2183:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 12396, "nodeType": "VariableDeclarationStatement", "src": "2183:30:35"}, {"assignments": [12398], "declarations": [{"constant": false, "id": 12398, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 12425, "src": "2223:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "typeName": {"id": 12397, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87476, "src": "2223:15:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "visibility": "internal"}], "id": 12411, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"id": 12406, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12382, "src": "2288:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12405, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2281:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 12404, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "2281:6:35", "typeDescriptions": {}}}, "id": 12407, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2281:13:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 12403, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2275:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 12402, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "2275:5:35", "typeDescriptions": {}}}, "id": 12408, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2275:20:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 12401, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2267:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12400, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2267:7:35", "typeDescriptions": {}}}, "id": 12409, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2267:29:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12399, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "2251:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12410, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2251:46:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "VariableDeclarationStatement", "src": "2223:74:35"}, {"expression": {"id": 12423, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12412, "name": "netPrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12385, "src": "2396:12:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, null], "id": 12413, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "2395:21:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$__$", "typeString": "tuple(int256,)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12415, "name": "vault", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12380, "src": "2443:5:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12416, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12388, "src": "2450:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12417, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12395, "src": "2461:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 12418, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12398, "src": "2469:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, {"expression": {"id": 12419, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "2480:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 12420, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "2480:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12421, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12382, "src": "2497:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12414, "name": "_executeLendBorrowTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12898, "src": "2419:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_enum$_TradeActionType_$87476_$_t_uint256_$_t_bytes32_$returns$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,enum TradeActionType,uint256,bytes32) returns (int256,int256)"}}, "id": 12422, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2419:84:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "2395:108:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12424, "nodeType": "ExpressionStatement", "src": "2395:108:35"}]}, "documentation": {"id": 12376, "nodeType": "StructuredDocumentation", "src": "1751:193:35", "text": "@notice Executes a trade for leveraged vaults (they can only lend or borrow).\n @param currencyId the currency id to lend or borrow\n @param trade the bytes32 encoded trade data"}, "functionSelector": "715e9002", "id": 12426, "implemented": true, "kind": "function", "modifiers": [], "name": "executeVaultTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 12383, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12378, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 12426, "src": "1976:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 12377, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "1976:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 12380, "mutability": "mutable", "name": "vault", "nodeType": "VariableDeclaration", "scope": 12426, "src": "1995:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12379, "name": "address", "nodeType": "ElementaryTypeName", "src": "1995:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12382, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 12426, "src": "2010:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12381, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2010:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1975:49:35"}, "returnParameters": {"id": 12386, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12385, "mutability": "mutable", "name": "netPrimeCash", "nodeType": "VariableDeclaration", "scope": 12426, "src": "2059:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12384, "name": "int256", "nodeType": "ElementaryTypeName", "src": "2059:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "2058:21:35"}, "scope": 13264, "src": "1949:561:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 12540, "nodeType": "Block", "src": "3208:929:35", "statements": [{"assignments": [12444], "declarations": [{"constant": false, "id": 12444, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 12540, "src": "3218:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12443, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "3218:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}], "id": 12449, "initialValue": {"arguments": [{"id": 12447, "name": "bitmapCurrencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12431, "src": "3290:16:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 12445, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46014, "src": "3257:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CashGroup_$46014_$", "typeString": "type(library CashGroup)"}}, "id": 12446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buildCashGroupStateful", "nodeType": "MemberAccess", "referencedDeclaration": 46013, "src": "3257:32:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (uint16) returns (struct CashGroupParameters memory)"}}, "id": 12448, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3257:50:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3218:89:35"}, {"assignments": [12451], "declarations": [{"constant": false, "id": 12451, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 12540, "src": "3317:30:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 12450, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "3317:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 12452, "nodeType": "VariableDeclarationStatement", "src": "3317:30:35"}, {"assignments": [12454], "declarations": [{"constant": false, "id": 12454, "mutability": "mutable", "name": "didIncurDebt", "nodeType": "VariableDeclaration", "scope": 12540, "src": "3357:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12453, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3357:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 12455, "nodeType": "VariableDeclarationStatement", "src": "3357:17:35"}, {"assignments": [12457], "declarations": [{"constant": false, "id": 12457, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 12540, "src": "3384:21:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext"}, "typeName": {"id": 12456, "name": "TradeContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12375, "src": "3384:12:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_storage_ptr", "typeString": "struct TradingAction.TradeContext"}}, "visibility": "internal"}], "id": 12458, "nodeType": "VariableDeclarationStatement", "src": "3384:21:35"}, {"expression": {"id": 12464, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12459, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3415:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12461, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 12374, "src": "3415:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 12462, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3429:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 12463, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3429:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3415:29:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12465, "nodeType": "ExpressionStatement", "src": "3415:29:35"}, {"body": {"id": 12533, "nodeType": "Block", "src": "3499:589:35", "statements": [{"assignments": [12478], "declarations": [{"constant": false, "id": 12478, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 12533, "src": "3513:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12477, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3513:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12479, "nodeType": "VariableDeclarationStatement", "src": "3513:16:35"}, {"expression": {"id": 12496, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12480, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12478, "src": "3544:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 12481, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3554:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12482, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 12364, "src": "3554:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12483, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3562:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12484, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "3562:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12485, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "3543:33:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12487, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12429, "src": "3610:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12488, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12444, "src": "3635:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12489, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12451, "src": "3662:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"baseExpression": {"id": 12490, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12436, "src": "3686:6:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 12492, "indexExpression": {"id": 12491, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12467, "src": "3693:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3686:9:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 12493, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3713:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12494, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 12374, "src": "3713:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12486, "name": "_executeTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12766, "src": "3579:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,bytes32,uint256) returns (uint256,int256,int256)"}}, "id": 12495, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3579:159:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "3543:195:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12497, "nodeType": "ExpressionStatement", "src": "3543:195:35"}, {"expression": {"id": 12510, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12498, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3753:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12500, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "3753:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12503, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12429, "src": "3821:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12504, "name": "bitmapCurrencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12431, "src": "3846:16:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 12505, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12478, "src": "3880:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12506, "name": "nextSettleTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12433, "src": "3906:14:35", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, {"expression": {"id": 12507, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "3938:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12508, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "3938:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint40", "typeString": "uint40"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 12501, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55423, "src": "3769:19:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$55423_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 12502, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addifCashAsset", "nodeType": "MemberAccess", "referencedDeclaration": 55121, "src": "3769:34:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (address,uint16,uint256,uint256,int256) returns (int256)"}}, "id": 12509, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3769:196:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "3753:212:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12511, "nodeType": "ExpressionStatement", "src": "3753:212:35"}, {"expression": {"id": 12520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12512, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12454, "src": "3980:12:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12513, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12454, "src": "3995:12:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12517, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 12514, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "4012:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12515, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "4012:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 12516, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4028:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4012:17:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 12518, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4011:19:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3995:35:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "3980:50:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12521, "nodeType": "ExpressionStatement", "src": "3980:50:35"}, {"expression": {"id": 12531, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12522, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "4044:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12524, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "4044:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12528, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "4070:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12529, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 12364, "src": "4070:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 12525, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "4056:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12526, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "4056:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "4056:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 12530, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4056:21:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "4044:33:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12532, "nodeType": "ExpressionStatement", "src": "4044:33:35"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12473, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12470, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12467, "src": "3475:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 12471, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12436, "src": "3479:6:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 12472, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "3479:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3475:17:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12534, "initializationExpression": {"assignments": [12467], "declarations": [{"constant": false, "id": 12467, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 12534, "src": "3460:9:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12466, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3460:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12469, "initialValue": {"hexValue": "30", "id": 12468, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3472:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "3460:13:35"}, "loopExpression": {"expression": {"id": 12475, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "3494:3:35", "subExpression": {"id": 12474, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12467, "src": "3494:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12476, "nodeType": "ExpressionStatement", "src": "3494:3:35"}, "nodeType": "ForStatement", "src": "3455:633:35"}, {"expression": {"components": [{"expression": {"id": 12535, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12457, "src": "4106:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12536, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "4106:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12537, "name": "didIncurDebt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12454, "src": "4117:12:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 12538, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4105:25:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_bool_$", "typeString": "tuple(int256,bool)"}}, "functionReturnParameters": 12442, "id": 12539, "nodeType": "Return", "src": "4098:32:35"}]}, "documentation": {"id": 12427, "nodeType": "StructuredDocumentation", "src": "2516:491:35", "text": "@notice Executes trades for a bitmapped portfolio, cannot be called directly\n @param account account to put fCash assets in\n @param bitmapCurrencyId currency id of the bitmap\n @param nextSettleTime used to calculate the relative positions in the bitmap\n @param trades tightly packed array of trades, schema is defined in global/Types.sol\n @return netCash generated by trading\n @return didIncurDebt if the bitmap had an fCash position go negative"}, "functionSelector": "3643f39b", "id": 12541, "implemented": true, "kind": "function", "modifiers": [], "name": "executeTradesBitmapBatch", "nodeType": "FunctionDefinition", "parameters": {"id": 12437, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12429, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3055:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12428, "name": "address", "nodeType": "ElementaryTypeName", "src": "3055:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12431, "mutability": "mutable", "name": "bitmapCurrencyId", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3080:23:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 12430, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "3080:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 12433, "mutability": "mutable", "name": "nextSettleTime", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3113:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}, "typeName": {"id": 12432, "name": "uint40", "nodeType": "ElementaryTypeName", "src": "3113:6:35", "typeDescriptions": {"typeIdentifier": "t_uint40", "typeString": "uint40"}}, "visibility": "internal"}, {"constant": false, "id": 12436, "mutability": "mutable", "name": "trades", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3144:25:35", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 12434, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3144:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 12435, "nodeType": "ArrayTypeName", "src": "3144:9:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "3045:130:35"}, "returnParameters": {"id": 12442, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12439, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3194:6:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12438, "name": "int256", "nodeType": "ElementaryTypeName", "src": "3194:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12441, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12541, "src": "3202:4:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 12440, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3202:4:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3193:14:35"}, "scope": 13264, "src": "3012:1125:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 12671, "nodeType": "Block", "src": "4805:1153:35", "statements": [{"assignments": [12559], "declarations": [{"constant": false, "id": 12559, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 12671, "src": "4815:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12558, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "4815:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}], "id": 12564, "initialValue": {"arguments": [{"id": 12562, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12546, "src": "4887:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 12560, "name": "CashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46014, "src": "4854:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_CashGroup_$46014_$", "typeString": "type(library CashGroup)"}}, "id": 12561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "buildCashGroupStateful", "nodeType": "MemberAccess", "referencedDeclaration": 46013, "src": "4854:32:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$returns$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (uint16) returns (struct CashGroupParameters memory)"}}, "id": 12563, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4854:44:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4815:83:35"}, {"assignments": [12566], "declarations": [{"constant": false, "id": 12566, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 12671, "src": "4908:30:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 12565, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "4908:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}], "id": 12567, "nodeType": "VariableDeclarationStatement", "src": "4908:30:35"}, {"assignments": [12569], "declarations": [{"constant": false, "id": 12569, "mutability": "mutable", "name": "c", "nodeType": "VariableDeclaration", "scope": 12671, "src": "4948:21:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext"}, "typeName": {"id": 12568, "name": "TradeContext", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 12375, "src": "4948:12:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_storage_ptr", "typeString": "struct TradingAction.TradeContext"}}, "visibility": "internal"}], "id": 12570, "nodeType": "VariableDeclarationStatement", "src": "4948:21:35"}, {"expression": {"id": 12576, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12571, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "4979:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12573, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 12374, "src": "4979:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 12574, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "4993:5:35", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 12575, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "4993:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4979:29:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12577, "nodeType": "ExpressionStatement", "src": "4979:29:35"}, {"body": {"id": 12664, "nodeType": "Block", "src": "5063:844:35", "statements": [{"assignments": [12590], "declarations": [{"constant": false, "id": 12590, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 12664, "src": "5077:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "typeName": {"id": 12589, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87476, "src": "5077:15:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "visibility": "internal"}], "id": 12605, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"baseExpression": {"id": 12598, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12551, "src": "5142:6:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 12600, "indexExpression": {"id": 12599, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12579, "src": "5149:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5142:9:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12597, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5135:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 12596, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "5135:6:35", "typeDescriptions": {}}}, "id": 12601, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5135:17:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 12595, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5129:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 12594, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "5129:5:35", "typeDescriptions": {}}}, "id": 12602, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5129:24:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 12593, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5121:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12592, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5121:7:35", "typeDescriptions": {}}}, "id": 12603, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5121:33:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12591, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "5105:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12604, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5105:50:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "VariableDeclarationStatement", "src": "5077:78:35"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12614, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12609, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12606, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12590, "src": "5191:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12607, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "5204:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12608, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "AddLiquidity", "nodeType": "MemberAccess", "src": "5204:28:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "5191:41:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12610, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12590, "src": "5252:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12611, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "5265:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12612, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "RemoveLiquidity", "nodeType": "MemberAccess", "src": "5265:31:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "5252:44:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "5191:105:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12651, "nodeType": "Block", "src": "5358:491:35", "statements": [{"assignments": [12620], "declarations": [{"constant": false, "id": 12620, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 12651, "src": "5376:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12619, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5376:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12621, "nodeType": "VariableDeclarationStatement", "src": "5376:16:35"}, {"expression": {"id": 12638, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12622, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12620, "src": "5411:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 12623, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5421:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12624, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 12364, "src": "5421:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"expression": {"id": 12625, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5429:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12626, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "5429:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12627, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "5410:33:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12629, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12544, "src": "5481:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12630, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12559, "src": "5510:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12631, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12566, "src": "5541:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"baseExpression": {"id": 12632, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12551, "src": "5569:6:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 12634, "indexExpression": {"id": 12633, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12579, "src": "5576:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5569:9:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"expression": {"id": 12635, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5600:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12636, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "blockTime", "nodeType": "MemberAccess", "referencedDeclaration": 12374, "src": "5600:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12628, "name": "_executeTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12766, "src": "5446:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,bytes32,uint256) returns (uint256,int256,int256)"}}, "id": 12637, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5446:183:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "5410:219:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12639, "nodeType": "ExpressionStatement", "src": "5410:219:35"}, {"expression": {"arguments": [{"id": 12643, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12546, "src": "5693:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 12644, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12620, "src": "5725:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"expression": {"id": 12645, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "5755:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 12646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "FCASH_ASSET_TYPE", "nodeType": "MemberAccess", "referencedDeclaration": 87361, "src": "5755:26:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, {"expression": {"id": 12647, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5803:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12648, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "fCashAmount", "nodeType": "MemberAccess", "referencedDeclaration": 12366, "src": "5803:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint8", "typeString": "uint8"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 12640, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12548, "src": "5648:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, "id": 12642, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "addAsset", "nodeType": "MemberAccess", "referencedDeclaration": 55756, "src": "5648:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_PortfolioState_$87595_memory_ptr_$_t_uint16_$_t_uint256_$_t_uint256_$_t_int256_$returns$__$bound_to$_t_struct$_PortfolioState_$87595_memory_ptr_$", "typeString": "function (struct PortfolioState memory,uint16,uint256,uint256,int256) pure"}}, "id": 12649, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5648:186:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12650, "nodeType": "ExpressionStatement", "src": "5648:186:35"}]}, "id": 12652, "nodeType": "IfStatement", "src": "5170:679:35", "trueBody": {"id": 12618, "nodeType": "Block", "src": "5311:41:35", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12615, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "5329:6:35", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 12616, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5329:8:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12617, "nodeType": "ExpressionStatement", "src": "5329:8:35"}]}}, {"expression": {"id": 12662, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 12653, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5863:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12655, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "5863:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"expression": {"id": 12659, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5889:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12660, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "cash", "nodeType": "MemberAccess", "referencedDeclaration": 12364, "src": "5889:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 12656, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5875:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12657, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "5875:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12658, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "5875:13:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 12661, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5875:21:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "5863:33:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12663, "nodeType": "ExpressionStatement", "src": "5863:33:35"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12585, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12582, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12579, "src": "5039:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 12583, "name": "trades", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12551, "src": "5043:6:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[] calldata"}}, "id": 12584, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "length", "nodeType": "MemberAccess", "src": "5043:13:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5039:17:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12665, "initializationExpression": {"assignments": [12579], "declarations": [{"constant": false, "id": 12579, "mutability": "mutable", "name": "i", "nodeType": "VariableDeclaration", "scope": 12665, "src": "5024:9:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12578, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5024:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12581, "initialValue": {"hexValue": "30", "id": 12580, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5036:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "5024:13:35"}, "loopExpression": {"expression": {"id": 12587, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "5058:3:35", "subExpression": {"id": 12586, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12579, "src": "5058:1:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12588, "nodeType": "ExpressionStatement", "src": "5058:3:35"}, "nodeType": "ForStatement", "src": "5019:888:35"}, {"expression": {"components": [{"id": 12666, "name": "portfolioState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12548, "src": "5925:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState memory"}}, {"expression": {"id": 12667, "name": "c", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12569, "src": "5941:1:35", "typeDescriptions": {"typeIdentifier": "t_struct$_TradeContext_$12375_memory_ptr", "typeString": "struct TradingAction.TradeContext memory"}}, "id": 12668, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "netCash", "nodeType": "MemberAccess", "referencedDeclaration": 12370, "src": "5941:9:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12669, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5924:27:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_struct$_PortfolioState_$87595_memory_ptr_$_t_int256_$", "typeString": "tuple(struct PortfolioState memory,int256)"}}, "functionReturnParameters": 12557, "id": 12670, "nodeType": "Return", "src": "5917:34:35"}]}, "documentation": {"id": 12542, "nodeType": "StructuredDocumentation", "src": "4143:436:35", "text": "@notice Executes trades for a bitmapped portfolio, cannot be called directly\n @param account account to put fCash assets in\n @param currencyId currency id to trade\n @param portfolioState used to update the positions in the portfolio\n @param trades tightly packed array of trades, schema is defined in global/Types.sol\n @return resulting portfolio state\n @return netCash generated by trading"}, "functionSelector": "b58f83ed", "id": 12672, "implemented": true, "kind": "function", "modifiers": [], "name": "executeTradesArrayBatch", "nodeType": "FunctionDefinition", "parameters": {"id": 12552, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12544, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4626:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12543, "name": "address", "nodeType": "ElementaryTypeName", "src": "4626:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12546, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4651:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 12545, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "4651:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 12548, "mutability": "mutable", "name": "portfolioState", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4678:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState"}, "typeName": {"id": 12547, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87595, "src": "4678:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_storage_ptr", "typeString": "struct PortfolioState"}}, "visibility": "internal"}, {"constant": false, "id": 12551, "mutability": "mutable", "name": "trades", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4724:25:35", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr", "typeString": "bytes32[]"}, "typeName": {"baseType": {"id": 12549, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "4724:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 12550, "nodeType": "ArrayTypeName", "src": "4724:9:35", "typeDescriptions": {"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr", "typeString": "bytes32[]"}}, "visibility": "internal"}], "src": "4616:139:35"}, "returnParameters": {"id": 12557, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12554, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4774:21:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_memory_ptr", "typeString": "struct PortfolioState"}, "typeName": {"id": 12553, "name": "PortfolioState", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87595, "src": "4774:14:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PortfolioState_$87595_storage_ptr", "typeString": "struct PortfolioState"}}, "visibility": "internal"}, {"constant": false, "id": 12556, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 12672, "src": "4797:6:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12555, "name": "int256", "nodeType": "ElementaryTypeName", "src": "4797:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "4773:31:35"}, "scope": 13264, "src": "4584:1374:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 12765, "nodeType": "Block", "src": "6839:880:35", "statements": [{"assignments": [12693], "declarations": [{"constant": false, "id": 12693, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 12765, "src": "6849:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "typeName": {"id": 12692, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87476, "src": "6849:15:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "visibility": "internal"}], "id": 12706, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"arguments": [{"id": 12701, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12681, "src": "6914:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12700, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6907:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 12699, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "6907:6:35", "typeDescriptions": {}}}, "id": 12702, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6907:13:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 12698, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6901:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 12697, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "6901:5:35", "typeDescriptions": {}}}, "id": 12703, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6901:20:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 12696, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6893:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12695, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6893:7:35", "typeDescriptions": {}}}, "id": 12704, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6893:29:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12694, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "6877:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12705, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6877:46:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "VariableDeclarationStatement", "src": "6849:74:35"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12710, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12707, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12693, "src": "6937:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12708, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "6950:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12709, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "PurchaseNTokenResidual", "nodeType": "MemberAccess", "src": "6950:38:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "6937:51:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 12732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12727, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12724, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12693, "src": "7154:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12725, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "7167:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12726, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Lend", "nodeType": "MemberAccess", "src": "7167:20:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "7154:33:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12731, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12728, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12693, "src": "7191:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12729, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "7204:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12730, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "7204:22:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "7191:35:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "7154:72:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12762, "nodeType": "Block", "src": "7680:33:35", "statements": [{"expression": {"arguments": [], "expression": {"argumentTypes": [], "id": 12759, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "7694:6:35", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$__$returns$__$", "typeString": "function () pure"}}, "id": 12760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7694:8:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12761, "nodeType": "ExpressionStatement", "src": "7694:8:35"}]}, "id": 12763, "nodeType": "IfStatement", "src": "7150:563:35", "trueBody": {"id": 12758, "nodeType": "Block", "src": "7228:446:35", "statements": [{"expression": {"id": 12744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12733, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12688, "src": "7243:10:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12734, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12690, "src": "7255:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12735, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "7242:25:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12737, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12675, "src": "7311:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12738, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12677, "src": "7320:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12739, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12679, "src": "7331:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 12740, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12693, "src": "7339:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, {"id": 12741, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12683, "src": "7350:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12742, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12681, "src": "7361:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12736, "name": "_executeLendBorrowTrade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12898, "src": "7270:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_enum$_TradeActionType_$87476_$_t_uint256_$_t_bytes32_$returns$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,struct MarketParameters memory,enum TradeActionType,uint256,bytes32) returns (int256,int256)"}}, "id": 12743, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7270:110:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$", "typeString": "tuple(int256,int256)"}}, "src": "7242:138:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12745, "nodeType": "ExpressionStatement", "src": "7242:138:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 12749, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12747, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12688, "src": "7402:10:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 12748, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7416:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "7402:15:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c206c6971756964697479", "id": 12750, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7419:25:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_5c6237db371d8fd66064bbc81499f19b42663dfe04c0da45fccffe96b03144b1", "typeString": "literal_string \"Trade failed, liquidity\""}, "value": "Trade failed, liquidity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_5c6237db371d8fd66064bbc81499f19b42663dfe04c0da45fccffe96b03144b1", "typeString": "literal_string \"Trade failed, liquidity\""}], "id": 12746, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7394:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 12751, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7394:51:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12752, "nodeType": "ExpressionStatement", "src": "7394:51:35"}, {"expression": {"id": 12756, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12753, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12686, "src": "7637:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 12754, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12679, "src": "7648:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 12755, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87660, "src": "7648:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7637:26:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12757, "nodeType": "ExpressionStatement", "src": "7637:26:35"}]}}, "id": 12764, "nodeType": "IfStatement", "src": "6933:780:35", "trueBody": {"id": 12723, "nodeType": "Block", "src": "6990:154:35", "statements": [{"expression": {"id": 12721, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12711, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12686, "src": "7005:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12712, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12688, "src": "7015:10:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12713, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12690, "src": "7027:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 12714, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "7004:35:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12716, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12675, "src": "7083:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12717, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12677, "src": "7092:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12718, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12683, "src": "7103:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12719, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12681, "src": "7114:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12715, "name": "_purchaseNTokenResidual", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13101, "src": "7042:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_uint256_$_t_bytes32_$returns$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "function (address,struct CashGroupParameters memory,uint256,bytes32) returns (uint256,int256,int256)"}}, "id": 12720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7042:91:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "src": "7004:129:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12722, "nodeType": "ExpressionStatement", "src": "7004:129:35"}]}}]}, "documentation": {"id": 12673, "nodeType": "StructuredDocumentation", "src": "5964:540:35", "text": "@notice Executes a non-liquidity token trade\n @param account the initiator of the trade\n @param cashGroup parameters for the trade\n @param market market memory location to use\n @param trade bytes32 encoding of the particular trade\n @param blockTime the current block time\n @return maturity of the asset that was traded\n @return cashAmount - a positive or negative cash amount accrued to the account\n @return fCashAmount - a positive or negative fCash amount accrued to the account"}, "id": 12766, "implemented": true, "kind": "function", "modifiers": [], "name": "_executeTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 12684, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12675, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6541:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12674, "name": "address", "nodeType": "ElementaryTypeName", "src": "6541:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12677, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6566:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12676, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "6566:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 12679, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6612:30:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 12678, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "6612:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}, {"constant": false, "id": 12681, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6652:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12680, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "6652:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 12683, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6675:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12682, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6675:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6531:167:35"}, "returnParameters": {"id": 12691, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12686, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6745:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12685, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6745:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12688, "mutability": "mutable", "name": "cashAmount", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6775:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12687, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6775:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12690, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 12766, "src": "6806:18:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12689, "name": "int256", "nodeType": "ElementaryTypeName", "src": "6806:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "6731:103:35"}, "scope": 13264, "src": "6509:1210:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 12897, "nodeType": "Block", "src": "8572:1124:35", "statements": [{"assignments": [12787], "declarations": [{"constant": false, "id": 12787, "mutability": "mutable", "name": "marketIndex", "nodeType": "VariableDeclaration", "scope": 12897, "src": "8582:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12786, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8582:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12800, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 12796, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12794, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12779, "src": "8625:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "38", "id": 12795, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8634:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8"}, "value": "8"}, "src": "8625:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12793, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8618:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 12792, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "8618:6:35", "typeDescriptions": {}}}, "id": 12797, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8618:18:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 12791, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8612:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 12790, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "8612:5:35", "typeDescriptions": {}}}, "id": 12798, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8612:25:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 12789, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8604:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12788, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8604:7:35", "typeDescriptions": {}}}, "id": 12799, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8604:34:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "8582:56:35"}, {"expression": {"arguments": [{"id": 12804, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12773, "src": "8720:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, {"id": 12805, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12787, "src": "8728:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 12806, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "8741:5:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, {"id": 12807, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "8748:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12801, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12771, "src": "8699:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 12803, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "loadMarket", "nodeType": "MemberAccess", "referencedDeclaration": 45310, "src": "8699:20:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$bound_to$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,struct MarketParameters memory,uint256,bool,uint256) view"}}, "id": 12808, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8699:59:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12809, "nodeType": "ExpressionStatement", "src": "8699:59:35"}, {"expression": {"id": 12823, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12810, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12784, "src": "8769:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 12819, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12817, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12779, "src": "8805:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "3136", "id": 12818, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8814:2:35", "typeDescriptions": {"typeIdentifier": "t_rational_16_by_1", "typeString": "int_const 16"}, "value": "16"}, "src": "8805:11:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12816, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8797:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes11_$", "typeString": "type(bytes11)"}, "typeName": {"id": 12815, "name": "bytes11", "nodeType": "ElementaryTypeName", "src": "8797:7:35", "typeDescriptions": {}}}, "id": 12820, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8797:20:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes11", "typeString": "bytes11"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes11", "typeString": "bytes11"}], "id": 12814, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8790:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 12813, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "8790:6:35", "typeDescriptions": {}}}, "id": 12821, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8790:28:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint88", "typeString": "uint88"}], "id": 12812, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8783:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_int256_$", "typeString": "type(int256)"}, "typeName": {"id": 12811, "name": "int256", "nodeType": "ElementaryTypeName", "src": "8783:6:35", "typeDescriptions": {}}}, "id": 12822, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8783:36:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "8769:50:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12824, "nodeType": "ExpressionStatement", "src": "8769:50:35"}, {"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12825, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12775, "src": "8883:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12826, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "8896:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12827, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "8896:22:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "8883:35:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12835, "nodeType": "IfStatement", "src": "8879:72:35", "trueBody": {"expression": {"id": 12833, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 12829, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12784, "src": "8920:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 12830, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12784, "src": "8934:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12831, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 69742, "src": "8934:15:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 12832, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8934:17:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "8920:31:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 12834, "nodeType": "ExpressionStatement", "src": "8920:31:35"}}, {"assignments": [12837], "declarations": [{"constant": false, "id": 12837, "mutability": "mutable", "name": "postFeeInterestRate", "nodeType": "VariableDeclaration", "scope": 12897, "src": "8962:27:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12836, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8962:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12838, "nodeType": "VariableDeclarationStatement", "src": "8962:27:35"}, {"expression": {"id": 12854, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"components": [{"id": 12839, "name": "cashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12782, "src": "9000:10:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 12840, "name": "postFeeInterestRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12837, "src": "9012:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 12841, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "8999:33:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$", "typeString": "tuple(int256,uint256)"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 12844, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12769, "src": "9068:7:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 12845, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12771, "src": "9089:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 12846, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12784, "src": "9112:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"arguments": [{"id": 12850, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12777, "src": "9157:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"expression": {"id": 12847, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12773, "src": "9137:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 12848, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maturity", "nodeType": "MemberAccess", "referencedDeclaration": 87660, "src": "9137:15:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12849, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 70133, "src": "9137:19:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12851, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9137:30:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12852, "name": "marketIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12787, "src": "9181:11:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12842, "name": "market", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12773, "src": "9035:6:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters memory"}}, "id": 12843, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "executeTrade", "nodeType": "MemberAccess", "referencedDeclaration": 48993, "src": "9035:19:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_MarketParameters_$87673_memory_ptr_$_t_address_$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_int256_$_t_uint256_$_t_uint256_$returns$_t_int256_$_t_uint256_$bound_to$_t_struct$_MarketParameters_$87673_memory_ptr_$", "typeString": "function (struct MarketParameters memory,address,struct CashGroupParameters memory,int256,uint256,uint256) returns (int256,uint256)"}}, "id": 12853, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9035:167:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$", "typeString": "tuple(int256,uint256)"}}, "src": "8999:203:35", "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12855, "nodeType": "ExpressionStatement", "src": "8999:203:35"}, {"assignments": [12857], "declarations": [{"constant": false, "id": 12857, "mutability": "mutable", "name": "rateLimit", "nodeType": "VariableDeclaration", "scope": 12897, "src": "9213:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12856, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9213:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12870, "initialValue": {"arguments": [{"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 12866, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12864, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12779, "src": "9255:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "<<", "rightExpression": {"hexValue": "313034", "id": 12865, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9264:3:35", "typeDescriptions": {"typeIdentifier": "t_rational_104_by_1", "typeString": "int_const 104"}, "value": "104"}, "src": "9255:12:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12863, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9248:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes4_$", "typeString": "type(bytes4)"}, "typeName": {"id": 12862, "name": "bytes4", "nodeType": "ElementaryTypeName", "src": "9248:6:35", "typeDescriptions": {}}}, "id": 12867, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9248:20:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes4", "typeString": "bytes4"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes4", "typeString": "bytes4"}], "id": 12861, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9241:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 12860, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "9241:6:35", "typeDescriptions": {}}}, "id": 12868, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9241:28:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 12859, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9233:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12858, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9233:7:35", "typeDescriptions": {}}}, "id": 12869, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9233:37:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "9213:57:35"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12873, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12871, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12857, "src": "9284:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 12872, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9297:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "9284:14:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 12896, "nodeType": "IfStatement", "src": "9280:410:35", "trueBody": {"id": 12895, "nodeType": "Block", "src": "9300:390:35", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "id": 12877, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12874, "name": "tradeType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12775, "src": "9318:9:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"expression": {"id": 12875, "name": "TradeActionType", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87476, "src": "9331:15:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_enum$_TradeActionType_$87476_$", "typeString": "type(enum TradeActionType)"}}, "id": 12876, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "Borrow", "nodeType": "MemberAccess", "src": "9331:22:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "src": "9318:35:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 12893, "nodeType": "Block", "src": "9521:159:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12889, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12887, "name": "postFeeInterestRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12837, "src": "9606:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 12888, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12857, "src": "9629:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9606:32:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 12890, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9640:24:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 12886, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9598:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 12891, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9598:67:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12892, "nodeType": "ExpressionStatement", "src": "9598:67:35"}]}, "id": 12894, "nodeType": "IfStatement", "src": "9314:366:35", "trueBody": {"id": 12885, "nodeType": "Block", "src": "9355:160:35", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12881, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12879, "name": "postFeeInterestRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12837, "src": "9441:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 12880, "name": "rateLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12857, "src": "9464:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9441:32:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "5472616465206661696c65642c20736c697070616765", "id": 12882, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9475:24:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}, "value": "Trade failed, slippage"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b8d42142a5fbfddebf103d35e1b686fecd1a04e50c32e313f89927eb4ec7698f", "typeString": "literal_string \"Trade failed, slippage\""}], "id": 12878, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "9433:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 12883, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9433:67:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12884, "nodeType": "ExpressionStatement", "src": "9433:67:35"}]}}]}}]}, "documentation": {"id": 12767, "nodeType": "StructuredDocumentation", "src": "7725:497:35", "text": "@notice Executes a lend or borrow trade\n @param cashGroup parameters for the trade\n @param market market memory location to use\n @param tradeType whether this is add or remove liquidity\n @param blockTime the current block time\n @param trade bytes32 encoding of the particular trade\n @return cashAmount - a positive or negative cash amount accrued to the account\n @return fCashAmount -  a positive or negative fCash amount accrued to the account"}, "id": 12898, "implemented": true, "kind": "function", "modifiers": [], "name": "_executeLendBorrowTrade", "nodeType": "FunctionDefinition", "parameters": {"id": 12780, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12769, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8269:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12768, "name": "address", "nodeType": "ElementaryTypeName", "src": "8269:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12771, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8294:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12770, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "8294:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 12773, "mutability": "mutable", "name": "market", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8340:30:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_memory_ptr", "typeString": "struct MarketParameters"}, "typeName": {"id": 12772, "name": "MarketParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87673, "src": "8340:16:35", "typeDescriptions": {"typeIdentifier": "t_struct$_MarketParameters_$87673_storage_ptr", "typeString": "struct MarketParameters"}}, "visibility": "internal"}, {"constant": false, "id": 12775, "mutability": "mutable", "name": "tradeType", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8380:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}, "typeName": {"id": 12774, "name": "TradeActionType", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87476, "src": "8380:15:35", "typeDescriptions": {"typeIdentifier": "t_enum$_TradeActionType_$87476", "typeString": "enum TradeActionType"}}, "visibility": "internal"}, {"constant": false, "id": 12777, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8415:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12776, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8415:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12779, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8442:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12778, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "8442:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "8259:202:35"}, "returnParameters": {"id": 12785, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12782, "mutability": "mutable", "name": "cashAmount", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8508:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12781, "name": "int256", "nodeType": "ElementaryTypeName", "src": "8508:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12784, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 12898, "src": "8539:18:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12783, "name": "int256", "nodeType": "ElementaryTypeName", "src": "8539:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "8494:73:35"}, "scope": 13264, "src": "8227:1469:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 13100, "nodeType": "Block", "src": "10552:3936:35", "statements": [{"assignments": [12917], "declarations": [{"constant": false, "id": 12917, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 13100, "src": "10562:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12916, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10562:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 12930, "initialValue": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12927, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 12924, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12907, "src": "10604:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12923, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10596:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12922, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10596:7:35", "typeDescriptions": {}}}, "id": 12925, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10596:14:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "323136", "id": 12926, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10614:3:35", "typeDescriptions": {"typeIdentifier": "t_rational_216_by_1", "typeString": "int_const 216"}, "value": "216"}, "src": "10596:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12921, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10589:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint32_$", "typeString": "type(uint32)"}, "typeName": {"id": 12920, "name": "uint32", "nodeType": "ElementaryTypeName", "src": "10589:6:35", "typeDescriptions": {}}}, "id": 12928, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10589:29:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint32", "typeString": "uint32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint32", "typeString": "uint32"}], "id": 12919, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10581:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12918, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10581:7:35", "typeDescriptions": {}}}, "id": 12929, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10581:38:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "10562:57:35"}, {"assignments": [12932], "declarations": [{"constant": false, "id": 12932, "mutability": "mutable", "name": "fCashAmountToPurchase", "nodeType": "VariableDeclaration", "scope": 13100, "src": "10629:28:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12931, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10629:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 12945, "initialValue": {"arguments": [{"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12942, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 12939, "name": "trade", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12907, "src": "10681:5:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 12938, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10673:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12937, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10673:7:35", "typeDescriptions": {}}}, "id": 12940, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10673:14:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">>", "rightExpression": {"hexValue": "313238", "id": 12941, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10691:3:35", "typeDescriptions": {"typeIdentifier": "t_rational_128_by_1", "typeString": "int_const 128"}, "value": "128"}, "src": "10673:21:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 12936, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10666:6:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint88_$", "typeString": "type(uint88)"}, "typeName": {"id": 12935, "name": "uint88", "nodeType": "ElementaryTypeName", "src": "10666:6:35", "typeDescriptions": {}}}, "id": 12943, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10666:29:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint88", "typeString": "uint88"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint88", "typeString": "uint88"}], "id": 12934, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "10660:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_int88_$", "typeString": "type(int88)"}, "typeName": {"id": 12933, "name": "int88", "nodeType": "ElementaryTypeName", "src": "10660:5:35", "typeDescriptions": {}}}, "id": 12944, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10660:36:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int88", "typeString": "int88"}}, "nodeType": "VariableDeclarationStatement", "src": "10629:67:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12949, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12947, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "10714:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 12948, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12905, "src": "10725:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "10714:20:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c6964206d61747572697479", "id": 12950, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "10736:18:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6ac8fa1ec1f45f2a4a2017eedf59db09ad3fe10b2748a8ca73a4b71f86bef54e", "typeString": "literal_string \"Invalid maturity\""}, "value": "Invalid maturity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6ac8fa1ec1f45f2a4a2017eedf59db09ad3fe10b2748a8ca73a4b71f86bef54e", "typeString": "literal_string \"Invalid maturity\""}], "id": 12946, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10706:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 12951, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10706:49:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12952, "nodeType": "ExpressionStatement", "src": "10706:49:35"}, {"expression": {"arguments": [{"id": 12961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "10923:78:35", "subExpression": {"arguments": [{"expression": {"id": 12956, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "10955:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 12957, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "maxMarketIndex", "nodeType": "MemberAccess", "referencedDeclaration": 87638, "src": "10955:24:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12958, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "10981:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 12959, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12905, "src": "10991:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12954, "name": "DateTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 46652, "src": "10924:8:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_DateTime_$46652_$", "typeString": "type(library DateTime)"}}, "id": 12955, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isValidMarketMaturity", "nodeType": "MemberAccess", "referencedDeclaration": 46214, "src": "10924:30:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$", "typeString": "function (uint256,uint256,uint256) pure returns (bool)"}}, "id": 12960, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10924:77:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4e6f6e206964696f73796e637261746963206d61747572697479", "id": 12962, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "11015:28:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_170cbb6ae2d81aeec65922f85f1fdb93aed169edb18ab7dfe13333b8f0ea8715", "typeString": "literal_string \"Non idiosyncratic maturity\""}, "value": "Non idiosyncratic maturity"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_170cbb6ae2d81aeec65922f85f1fdb93aed169edb18ab7dfe13333b8f0ea8715", "typeString": "literal_string \"Non idiosyncratic maturity\""}], "id": 12953, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "10902:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 12963, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "10902:151:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 12964, "nodeType": "ExpressionStatement", "src": "10902:151:35"}, {"assignments": [12966], "declarations": [{"constant": false, "id": 12966, "mutability": "mutable", "name": "nTokenAddress", "nodeType": "VariableDeclaration", "scope": 13100, "src": "11064:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12965, "name": "address", "nodeType": "ElementaryTypeName", "src": "11064:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 12972, "initialValue": {"arguments": [{"expression": {"id": 12969, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "11116:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 12970, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "11116:20:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 12967, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51387, "src": "11088:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenHandler_$51387_$", "typeString": "type(library nTokenHandler)"}}, "id": 12968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "nTokenAddress", "nodeType": "MemberAccess", "referencedDeclaration": 50446, "src": "11088:27:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$", "typeString": "function (uint256) view returns (address)"}}, "id": 12971, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11088:49:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "11064:73:35"}, {"assignments": [null, null, 12974, null, 12976], "declarations": [null, null, {"constant": false, "id": 12974, "mutability": "mutable", "name": "lastInitializedTime", "nodeType": "VariableDeclaration", "scope": 13100, "src": "11251:27:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12973, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "11251:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null, {"constant": false, "id": 12976, "mutability": "mutable", "name": "parameters", "nodeType": "VariableDeclaration", "scope": 13100, "src": "11328:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}, "typeName": {"id": 12975, "name": "bytes6", "nodeType": "ElementaryTypeName", "src": "11328:6:35", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "visibility": "internal"}], "id": 12981, "initialValue": {"arguments": [{"id": 12979, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12966, "src": "11389:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 12977, "name": "nTokenHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 51387, "src": "11358:13:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_nTokenHandler_$51387_$", "typeString": "type(library nTokenHandler)"}}, "id": 12978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getNTokenContext", "nodeType": "MemberAccess", "referencedDeclaration": 50425, "src": "11358:30:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes6_$", "typeString": "function (address) view returns (uint16,uint256,uint256,uint8,bytes6)"}}, "id": 12980, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "11358:45:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint16_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes6_$", "typeString": "tuple(uint16,uint256,uint256,uint8,bytes6)"}}, "nodeType": "VariableDeclarationStatement", "src": "11174:229:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12999, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 12983, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12905, "src": "12073:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 12997, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"baseExpression": {"id": 12990, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12976, "src": "12160:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "id": 12993, "indexExpression": {"expression": {"id": 12991, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "12171:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 12992, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RESIDUAL_PURCHASE_TIME_BUFFER", "nodeType": "MemberAccess", "referencedDeclaration": 87412, "src": "12171:39:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "12160:51:35", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 12989, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12154:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 12988, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "12154:5:35", "typeDescriptions": {}}}, "id": 12994, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12154:58:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 12987, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "12146:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 12986, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "12146:7:35", "typeDescriptions": {}}}, "id": 12995, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12146:67:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31", "id": 12996, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12216:7:35", "subdenomination": "hours", "typeDescriptions": {"typeIdentifier": "t_rational_3600_by_1", "typeString": "int_const 3600"}, "value": "1"}, "src": "12146:77:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 12984, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12974, "src": "12101:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 12985, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 70112, "src": "12101:23:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 12998, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12101:140:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "12073:168:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e73756666696369656e7420626c6f636b2074696d65", "id": 13000, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "12255:25:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a342b12b1f68df3836aadf9b184eda8e1c38b67afe19dc75e8fec530927211c1", "typeString": "literal_string \"Insufficient block time\""}, "value": "Insufficient block time"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a342b12b1f68df3836aadf9b184eda8e1c38b67afe19dc75e8fec530927211c1", "typeString": "literal_string \"Insufficient block time\""}], "id": 12982, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "12052:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 13001, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12052:238:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13002, "nodeType": "ExpressionStatement", "src": "12052:238:35"}, {"assignments": [13004], "declarations": [{"constant": false, "id": 13004, "mutability": "mutable", "name": "notional", "nodeType": "VariableDeclaration", "scope": 13100, "src": "12301:15:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13003, "name": "int256", "nodeType": "ElementaryTypeName", "src": "12301:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13012, "initialValue": {"arguments": [{"id": 13007, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12966, "src": "12369:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 13008, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "12384:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13009, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "12384:20:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13010, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "12406:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13005, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55423, "src": "12331:19:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$55423_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 13006, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getifCashNotional", "nodeType": "MemberAccess", "referencedDeclaration": 54873, "src": "12331:37:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (address,uint256,uint256) view returns (int256)"}}, "id": 13011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "12331:84:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "12301:114:35"}, {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13015, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13013, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12514:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 13014, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12525:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12514:12:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13018, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13016, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12530:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 13017, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12554:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12530:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12514:41:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13035, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13031, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13029, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12741:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13030, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12752:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12741:12:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13034, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13032, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12757:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13033, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "12781:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "12757:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "12741:41:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13049, "nodeType": "Block", "src": "12964:121:35", "statements": [{"expression": {"arguments": [{"hexValue": "496e76616c696420616d6f756e74", "id": 13046, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "13057:16:35", "typeDescriptions": {"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1", "typeString": "literal_string \"Invalid amount\""}, "value": "Invalid amount"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1", "typeString": "literal_string \"Invalid amount\""}], "id": 13045, "name": "revert", "nodeType": "Identifier", "overloadedDeclarations": [-19, -19], "referencedDeclaration": -19, "src": "13050:6:35", "typeDescriptions": {"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory) pure"}}, "id": 13047, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13050:24:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13048, "nodeType": "ExpressionStatement", "src": "13050:24:35"}]}, "id": 13050, "nodeType": "IfStatement", "src": "12737:348:35", "trueBody": {"id": 13044, "nodeType": "Block", "src": "12784:174:35", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13038, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13036, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12881:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 13037, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12905:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12881:32:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13043, "nodeType": "IfStatement", "src": "12877:70:35", "trueBody": {"expression": {"id": 13041, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13039, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12915:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13040, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12939:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12915:32:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13042, "nodeType": "ExpressionStatement", "src": "12915:32:35"}}]}}, "id": 13051, "nodeType": "IfStatement", "src": "12510:575:35", "trueBody": {"id": 13028, "nodeType": "Block", "src": "12557:174:35", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13022, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13020, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12654:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 13021, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12678:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12654:32:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 13027, "nodeType": "IfStatement", "src": "12650:70:35", "trueBody": {"expression": {"id": 13025, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13023, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "12688:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 13024, "name": "notional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13004, "src": "12712:8:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "12688:32:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13026, "nodeType": "ExpressionStatement", "src": "12688:32:35"}}]}}, {"assignments": [13053], "declarations": [{"constant": false, "id": 13053, "mutability": "mutable", "name": "netPrimeCashNToken", "nodeType": "VariableDeclaration", "scope": 13100, "src": "13307:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13052, "name": "int256", "nodeType": "ElementaryTypeName", "src": "13307:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13061, "initialValue": {"arguments": [{"id": 13055, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "13391:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, {"id": 13056, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "13418:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13057, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12905, "src": "13444:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13058, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "13471:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 13059, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12976, "src": "13510:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}], "id": 13054, "name": "_getResidualPricePrimeCash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13191, "src": "13347:26:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_uint256_$_t_uint256_$_t_int256_$_t_bytes6_$returns$_t_int256_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256,int256,bytes6) view returns (int256)"}}, "id": 13060, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13347:187:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "13307:227:35"}, {"expression": {"arguments": [{"id": 13065, "name": "purchaser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12901, "src": "13687:9:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13066, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12966, "src": "13698:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 13067, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "13713:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13068, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "13713:20:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13069, "name": "netPrimeCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13053, "src": "13735:18:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13062, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38972, "src": "13644:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Emitter_$38972_$", "typeString": "type(library Emitter)"}}, "id": 13064, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "emitTransferPrimeCash", "nodeType": "MemberAccess", "referencedDeclaration": 37968, "src": "13644:29:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_int256_$returns$__$", "typeString": "function (address,address,uint16,int256)"}}, "id": 13070, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "13644:119:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13071, "nodeType": "ExpressionStatement", "src": "13644:119:35"}, {"expression": {"arguments": [{"id": 13075, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12966, "src": "14089:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13076, "name": "purchaser", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12901, "src": "14104:9:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 13077, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "14115:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13078, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "14115:20:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13079, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "14137:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13080, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "14147:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13072, "name": "Emitter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 38972, "src": "14050:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Emitter_$38972_$", "typeString": "type(library Emitter)"}}, "id": 13074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "emitTransferfCash", "nodeType": "MemberAccess", "referencedDeclaration": 37653, "src": "14050:25:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_uint256_$_t_int256_$returns$__$", "typeString": "function (address,address,uint16,uint256,int256)"}}, "id": 13081, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14050:128:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13082, "nodeType": "ExpressionStatement", "src": "14050:128:35"}, {"expression": {"arguments": [{"id": 13084, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12966, "src": "14225:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 13085, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12903, "src": "14252:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13086, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "currencyId", "nodeType": "MemberAccess", "referencedDeclaration": 87636, "src": "14252:20:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13087, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "14286:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13088, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12974, "src": "14308:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13089, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "14341:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 13090, "name": "netPrimeCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13053, "src": "14376:18:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "id": 13083, "name": "_updateNTokenPortfolio", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13263, "src": "14189:22:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_int256_$_t_int256_$returns$__$", "typeString": "function (address,uint16,uint256,uint256,int256,int256)"}}, "id": 13091, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14189:215:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13092, "nodeType": "ExpressionStatement", "src": "14189:215:35"}, {"expression": {"components": [{"id": 13093, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12917, "src": "14423:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13094, "name": "netPrimeCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13053, "src": "14433:18:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13095, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 69742, "src": "14433:22:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 13096, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14433:24:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, {"id": 13097, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12932, "src": "14459:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "id": 13098, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "14422:59:35", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_int256_$", "typeString": "tuple(uint256,int256,int256)"}}, "functionReturnParameters": 12915, "id": 13099, "nodeType": "Return", "src": "14415:66:35"}]}, "documentation": {"id": 12899, "nodeType": "StructuredDocumentation", "src": "9702:574:35", "text": "@notice Allows an account to purchase ntoken residuals\n @param purchaser account that is purchasing the residuals\n @param cashGroup parameters for the trade\n @param blockTime the current block time\n @param trade bytes32 encoding of the particular trade\n @return maturity: the date of the idiosyncratic maturity where fCash will be exchanged\n @return cashAmount: a positive or negative cash amount that the account will receive or pay\n @return fCashAmount: a positive or negative fCash amount that the account will receive"}, "id": 13101, "implemented": true, "kind": "function", "modifiers": [], "name": "_purchaseNTokenResidual", "nodeType": "FunctionDefinition", "parameters": {"id": 12908, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12901, "mutability": "mutable", "name": "purchaser", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10323:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 12900, "name": "address", "nodeType": "ElementaryTypeName", "src": "10323:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 12903, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10350:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 12902, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "10350:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 12905, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10396:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12904, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10396:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12907, "mutability": "mutable", "name": "trade", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10423:13:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 12906, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "10423:7:35", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "10313:129:35"}, "returnParameters": {"id": 12915, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 12910, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10490:7:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 12909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "10490:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 12912, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10511:6:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12911, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10511:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 12914, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13101, "src": "10531:6:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 12913, "name": "int256", "nodeType": "ElementaryTypeName", "src": "10531:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "10476:71:35"}, "scope": 13264, "src": "10281:4207:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 13190, "nodeType": "Block", "src": "14811:1385:35", "statements": [{"assignments": [13118], "declarations": [{"constant": false, "id": 13118, "mutability": "mutable", "name": "oracleRate", "nodeType": "VariableDeclaration", "scope": 13190, "src": "14821:18:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13117, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14821:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13124, "initialValue": {"arguments": [{"id": 13121, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13106, "src": "14872:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13122, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13108, "src": "14882:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13119, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13104, "src": "14842:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13120, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "calculateOracleRate", "nodeType": "MemberAccess", "referencedDeclaration": 45605, "src": "14842:29:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_struct$_CashGroupParameters_$87643_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_CashGroupParameters_$87643_memory_ptr_$", "typeString": "function (struct CashGroupParameters memory,uint256,uint256) view returns (uint256)"}}, "id": 13123, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "14842:50:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14821:71:35"}, {"assignments": [13126], "declarations": [{"constant": false, "id": 13126, "mutability": "mutable", "name": "purchaseIncentive", "nodeType": "VariableDeclaration", "scope": 13190, "src": "14984:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13125, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14984:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 13140, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13139, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"baseExpression": {"id": 13131, "name": "parameters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13112, "src": "15038:10:35", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "id": 13134, "indexExpression": {"expression": {"id": 13132, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "15049:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 13133, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "RESIDUAL_PURCHASE_INCENTIVE", "nodeType": "MemberAccess", "referencedDeclaration": 87418, "src": "15049:37:35", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "15038:49:35", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 13130, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15032:5:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 13129, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "15032:5:35", "typeDescriptions": {}}}, "id": 13135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15032:56:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 13128, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "15024:7:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 13127, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "15024:7:35", "typeDescriptions": {}}}, "id": 13136, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15024:65:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"expression": {"id": 13137, "name": "Constants", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 87456, "src": "15108:9:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_Constants_$87456_$", "typeString": "type(library Constants)"}}, "id": 13138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "TEN_BASIS_POINTS", "nodeType": "MemberAccess", "referencedDeclaration": 87330, "src": "15108:26:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15024:110:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "14984:150:35"}, {"condition": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13141, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "15149:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13142, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15163:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15149:15:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 13154, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13152, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15410:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 13153, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13126, "src": "15423:17:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15410:30:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 13167, "nodeType": "Block", "src": "15702:141:35", "statements": [{"expression": {"id": 13165, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13163, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15818:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "30", "id": 13164, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "15831:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "15818:14:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13166, "nodeType": "ExpressionStatement", "src": "15818:14:35"}]}, "id": 13168, "nodeType": "IfStatement", "src": "15406:437:35", "trueBody": {"id": 13162, "nodeType": "Block", "src": "15442:254:35", "statements": [{"expression": {"id": 13160, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13155, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15639:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13158, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13126, "src": "15667:17:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13156, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15652:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 70133, "src": "15652:14:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13159, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15652:33:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15639:46:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13161, "nodeType": "ExpressionStatement", "src": "15639:46:35"}]}}, "id": 13169, "nodeType": "IfStatement", "src": "15145:698:35", "trueBody": {"id": 13151, "nodeType": "Block", "src": "15166:234:35", "statements": [{"expression": {"id": 13149, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13144, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15343:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13147, "name": "purchaseIncentive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13126, "src": "15371:17:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13145, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15356:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13146, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 70112, "src": "15356:14:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13148, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15356:33:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "15343:46:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13150, "nodeType": "ExpressionStatement", "src": "15343:46:35"}]}}, {"assignments": [13171], "declarations": [{"constant": false, "id": 13171, "mutability": "mutable", "name": "exchangeRate", "nodeType": "VariableDeclaration", "scope": 13190, "src": "15853:19:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13170, "name": "int256", "nodeType": "ElementaryTypeName", "src": "15853:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13180, "initialValue": {"arguments": [{"id": 13174, "name": "oracleRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13118, "src": "15926:10:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [{"id": 13177, "name": "blockTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13108, "src": "15951:9:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13175, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13106, "src": "15938:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 13176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sub", "nodeType": "MemberAccess", "referencedDeclaration": 70133, "src": "15938:12:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 13178, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15938:23:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 13172, "name": "InterestRateCurve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 48697, "src": "15887:17:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_InterestRateCurve_$48697_$", "typeString": "type(library InterestRateCurve)"}}, "id": 13173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getfCashExchangeRate", "nodeType": "MemberAccess", "referencedDeclaration": 48437, "src": "15887:38:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_int256_$", "typeString": "function (uint256,uint256) pure returns (int256)"}}, "id": 13179, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "15887:75:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "15853:109:35"}, {"expression": {"arguments": [{"arguments": [{"id": 13186, "name": "exchangeRate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13171, "src": "16175:12:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13184, "name": "fCashAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13110, "src": "16144:11:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "divInRatePrecision", "nodeType": "MemberAccess", "referencedDeclaration": 69805, "src": "16144:30:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 13187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16144:44:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"expression": {"id": 13181, "name": "cashGroup", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13104, "src": "16102:9:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters memory"}}, "id": 13182, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "primeRate", "nodeType": "MemberAccess", "referencedDeclaration": 87640, "src": "16102:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_PrimeRate_$88079_memory_ptr", "typeString": "struct PrimeRate memory"}}, "id": 13183, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberName": "convertFromUnderlying", "nodeType": "MemberAccess", "referencedDeclaration": 54027, "src": "16102:41:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_PrimeRate_$88079_memory_ptr_$_t_int256_$returns$_t_int256_$bound_to$_t_struct$_PrimeRate_$88079_memory_ptr_$", "typeString": "function (struct PrimeRate memory,int256) pure returns (int256)"}}, "id": 13188, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16102:87:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "functionReturnParameters": 13116, "id": 13189, "nodeType": "Return", "src": "16083:106:35"}]}, "documentation": {"id": 13102, "nodeType": "StructuredDocumentation", "src": "14494:85:35", "text": "@notice Returns the amount of asset cash required to purchase the nToken residual"}, "id": 13191, "implemented": true, "kind": "function", "modifiers": [], "name": "_getResidualPricePrimeCash", "nodeType": "FunctionDefinition", "parameters": {"id": 13113, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13104, "mutability": "mutable", "name": "cashGroup", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14629:36:35", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_memory_ptr", "typeString": "struct CashGroupParameters"}, "typeName": {"id": 13103, "name": "CashGroupParameters", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 87643, "src": "14629:19:35", "typeDescriptions": {"typeIdentifier": "t_struct$_CashGroupParameters_$87643_storage_ptr", "typeString": "struct CashGroupParameters"}}, "visibility": "internal"}, {"constant": false, "id": 13106, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14675:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13105, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14675:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13108, "mutability": "mutable", "name": "blockTime", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14701:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13107, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "14701:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13110, "mutability": "mutable", "name": "fCashAmount", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14728:18:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13109, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14728:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 13112, "mutability": "mutable", "name": "parameters", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14756:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}, "typeName": {"id": 13111, "name": "bytes6", "nodeType": "ElementaryTypeName", "src": "14756:6:35", "typeDescriptions": {"typeIdentifier": "t_bytes6", "typeString": "bytes6"}}, "visibility": "internal"}], "src": "14619:160:35"}, "returnParameters": {"id": 13116, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13115, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 13191, "src": "14803:6:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13114, "name": "int256", "nodeType": "ElementaryTypeName", "src": "14803:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "14802:8:35"}, "scope": 13264, "src": "14584:1612:35", "stateMutability": "view", "virtual": false, "visibility": "internal"}, {"body": {"id": 13262, "nodeType": "Block", "src": "16442:843:35", "statements": [{"assignments": [13207], "declarations": [{"constant": false, "id": 13207, "mutability": "mutable", "name": "finalNotional", "nodeType": "VariableDeclaration", "scope": 13262, "src": "16452:20:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13206, "name": "int256", "nodeType": "ElementaryTypeName", "src": "16452:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13218, "initialValue": {"arguments": [{"id": 13210, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13193, "src": "16523:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13211, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13195, "src": "16550:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13212, "name": "maturity", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13197, "src": "16574:8:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 13213, "name": "lastInitializedTime", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13199, "src": "16596:19:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 13214, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13201, "src": "16629:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13215, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "neg", "nodeType": "MemberAccess", "referencedDeclaration": 69742, "src": "16629:25:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256) pure returns (int256)"}}, "id": 13216, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16629:27:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13208, "name": "BitmapAssetsHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 55423, "src": "16475:19:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BitmapAssetsHandler_$55423_$", "typeString": "type(library BitmapAssetsHandler)"}}, "id": 13209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "addifCashAsset", "nodeType": "MemberAccess", "referencedDeclaration": 55121, "src": "16475:34:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_int256_$", "typeString": "function (address,uint16,uint256,uint256,int256) returns (int256)"}}, "id": 13217, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16475:236:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "16452:259:35"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13236, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13226, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13222, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13220, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13201, "src": "16818:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 13221, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16842:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16818:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13223, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13207, "src": "16847:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 13224, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16864:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16847:18:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "16818:47:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 13227, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16817:49:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 13234, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13228, "name": "fCashAmountToPurchase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13201, "src": "16883:21:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "30", "id": 13229, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16907:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16883:25:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_int256", "typeString": "int256"}, "id": 13233, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 13231, "name": "finalNotional", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13207, "src": "16912:13:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "30", "id": 13232, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "16929:1:35", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "16912:18:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "16883:47:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "id": 13235, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "16882:49:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "16817:114:35", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 13219, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "16796:7:35", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 13237, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16796:145:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13238, "nodeType": "ExpressionStatement", "src": "16796:145:35"}, {"assignments": [13240], "declarations": [{"constant": false, "id": 13240, "mutability": "mutable", "name": "nTokenCashBalance", "nodeType": "VariableDeclaration", "scope": 13262, "src": "16952:24:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13239, "name": "int256", "nodeType": "ElementaryTypeName", "src": "16952:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "id": 13246, "initialValue": {"arguments": [{"id": 13243, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13193, "src": "17017:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13244, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13195, "src": "17032:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}], "expression": {"id": 13241, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40386, "src": "16979:14:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$40386_$", "typeString": "type(library BalanceHandler)"}}, "id": 13242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "getPositiveCashBalance", "nodeType": "MemberAccess", "referencedDeclaration": 39933, "src": "16979:37:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint16_$returns$_t_int256_$", "typeString": "function (address,uint16) view returns (int256)"}}, "id": 13245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "16979:64:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "VariableDeclarationStatement", "src": "16952:91:35"}, {"expression": {"id": 13252, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 13247, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13240, "src": "17053:17:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 13250, "name": "netPrimeCashNToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13203, "src": "17095:18:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13248, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13240, "src": "17073:17:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13249, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "add", "nodeType": "MemberAccess", "referencedDeclaration": 69728, "src": "17073:21:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$", "typeString": "function (int256,int256) pure returns (int256)"}}, "id": 13251, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17073:41:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "src": "17053:61:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "id": 13253, "nodeType": "ExpressionStatement", "src": "17053:61:35"}, {"expression": {"arguments": [{"id": 13257, "name": "nTokenAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13193, "src": "17233:13:35", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 13258, "name": "currencyId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13195, "src": "17248:10:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, {"id": 13259, "name": "nTokenCashBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13240, "src": "17260:17:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint16", "typeString": "uint16"}, {"typeIdentifier": "t_int256", "typeString": "int256"}], "expression": {"id": 13254, "name": "BalanceHandler", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40386, "src": "17191:14:35", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_BalanceHandler_$40386_$", "typeString": "type(library BalanceHandler)"}}, "id": 13256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "setBalanceStorageForNToken", "nodeType": "MemberAccess", "referencedDeclaration": 39743, "src": "17191:41:35", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint16_$_t_int256_$returns$__$", "typeString": "function (address,uint16,int256)"}}, "id": 13260, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "17191:87:35", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 13261, "nodeType": "ExpressionStatement", "src": "17191:87:35"}]}, "id": 13263, "implemented": true, "kind": "function", "modifiers": [], "name": "_updateNTokenPortfolio", "nodeType": "FunctionDefinition", "parameters": {"id": 13204, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 13193, "mutability": "mutable", "name": "nTokenAddress", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16243:21:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 13192, "name": "address", "nodeType": "ElementaryTypeName", "src": "16243:7:35", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 13195, "mutability": "mutable", "name": "currencyId", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16274:17:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}, "typeName": {"id": 13194, "name": "uint16", "nodeType": "ElementaryTypeName", "src": "16274:6:35", "typeDescriptions": {"typeIdentifier": "t_uint16", "typeString": "uint16"}}, "visibility": "internal"}, {"constant": false, "id": 13197, "mutability": "mutable", "name": "maturity", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16301:16:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13196, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16301:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13199, "mutability": "mutable", "name": "lastInitializedTime", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16327:27:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 13198, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "16327:7:35", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 13201, "mutability": "mutable", "name": "fCashAmountToPurchase", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16364:28:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13200, "name": "int256", "nodeType": "ElementaryTypeName", "src": "16364:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}, {"constant": false, "id": 13203, "mutability": "mutable", "name": "netPrimeCashNToken", "nodeType": "VariableDeclaration", "scope": 13263, "src": "16402:25:35", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}, "typeName": {"id": 13202, "name": "int256", "nodeType": "ElementaryTypeName", "src": "16402:6:35", "typeDescriptions": {"typeIdentifier": "t_int256", "typeString": "int256"}}, "visibility": "internal"}], "src": "16233:200:35"}, "returnParameters": {"id": 13205, "nodeType": "ParameterList", "parameters": [], "src": "16442:0:35"}, "scope": 13264, "src": "16202:1083:35", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}], "scope": 13265, "src": "1203:16084:35"}], "src": "37:17251:35"}, "bytecode": "614482610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80633643f39b14610050578063715e900214610087578063b58f83ed146100b4575b600080fd5b81801561005c57600080fd5b5061007061006b366004613f63565b6100e2565b60405161007e92919061416e565b60405180910390f35b81801561009357600080fd5b506100a76100a2366004613fd1565b6101b3565b60405161007e9190614165565b8180156100c057600080fd5b506100d46100cf366004613e69565b6101f7565b60405161007e9291906143ac565b60008060006100f0876102fd565b90506100fa613b3e565b6000610104613b86565b4260a082015260005b8781101561019f57600061013a8d87878d8d8781811061012957fe5b905060200201358760a00151610325565b856000018660200182815250828152508293505050506101688d8d838e64ffffffffff1687602001516103df565b6020840152838061017d575060008360200151125b83516060850151919550610191919061053e565b60608401525060010161010d565b50606001519a909950975050505050505050565b6000806101bf856102fd565b90506101c9613b3e565b600060f885901c60058111156101db57fe5b90506101eb86848484428a61055a565b50979650505050505050565b6101ff613bbc565b60008061020b876102fd565b9050610215613b3e565b61021d613b86565b4260a082015260005b868110156102e857600088888381811061023c57fe5b9050602002013560f81c60ff16600581111561025457fe5b9050600281600581111561026457fe5b148061027b5750600381600581111561027957fe5b145b1561028557600080fd5b60006102aa8d87878d8d8881811061029957fe5b905060200201358860a00151610325565b602087018190529086529091506102c9908c908e908490600190610649565b50825160608401516102da9161053e565b606084015250600101610226565b50606001519699969850959650505050505050565b610305613be4565b60006103108361075a565b905061031c838261076c565b9150505b919050565b600080808060f886901c600581111561033a57fe5b9050600481600581111561034a57fe5b14156103685761035c898987896107af565b919550935091506103d3565b600081600581111561037657fe5b148061038d5750600181600581111561038b57fe5b145b1561004b576103a089898984898b61055a565b9093509150826103cb5760405162461bcd60e51b81526004016103c290614263565b60405180910390fd5b866020015193505b50955095509592505050565b6000806103f0878761ffff16610956565b905060006103fc61098b565b6001600160a01b03891660009081526020828152604080832061ffff8c16845282528083208a8452909152812091925080610437888a610998565b915091508061044557600080fd5b61044f8583610aa3565b156104d2578254600f90810b900b6000610469898361053e565b905061047481610ad3565b8554600f9190910b6001600160801b03166001600160801b03199091161785556104a18d8d8d8585610b01565b806104b5576104b287856000610bd9565b96505b6104c48d8d61ffff1689610c27565b965061053595505050505050565b861561052c576104e187610ad3565b8354600f9190910b6001600160801b03166001600160801b031990911617835561050f8b8b8b60008b610b01565b61051b85836001610bd9565b945061052c8b8b61ffff1687610c27565b86955050505050505b95945050505050565b8181018281121560008312151461055457600080fd5b92915050565b60008060ff60f084901c166105728888838589610c81565b6001600160581b03609885901c169150600186600581111561059057fe5b14156105a25761059f82610cfc565b91505b60006105cc8a8a856105c18a8d60200151610d0a90919063ffffffff16565b8c9392919087610d1f565b909450905063ffffffff607886901c16801561063b5760018860058111156105f057fe5b141561061b57808211156106165760405162461bcd60e51b81526004016103c29061437c565b61063b565b8082101561063b5760405162461bcd60e51b81526004016103c29061437c565b505050965096945050505050565b84516106589085858585610d9e565b1561066257610753565b60408501511561068f57600061067f866020015186868686610d9e565b9050801561068d5750610753565b505b61069882610ec2565b156106ab5760008112156106ab57600080fd5b6a7fffffffffffffffffffff1981128015906106d257506a7fffffffffffffffffffff8113155b6106db57600080fd5b846020015151856040015114156106ff576106f98560200151610ed8565b60208601525b6000856020015186604001518151811061071557fe5b60209081029190910181015161ffff87168152908101859052604080820185905260608201849052600060a090920191909152860180516001019052505b5050505050565b610762613c10565b6105548242610f91565b610774613be4565b60006107838461ffff16611057565b6040805160808101825261ffff96909616865260ff821660208701528501939093525050606082015290565b6000808063ffffffff60d885901c16608085901c600a0b8682116107e55760405162461bcd60e51b81526004016103c2906142c3565b6107f488602001518389611074565b156108115760405162461bcd60e51b81526004016103c2906141ae565b6000610824896000015161ffff16611119565b90506000806108328361113f565b9450509350505061085981600260ff166006811061084c57fe5b8491610e10911a026111ab565b8a116108775760405162461bcd60e51b81526004016103c290614345565b600061088c848d6000015161ffff16886111bd565b905060008112801561089e5750600085125b156108b457808512156108af578094505b6108f1565b6000811380156108c45750600085135b156108d957808513156108af578094506108f1565b60405162461bcd60e51b81526004016103c2906141e5565b60006109008d888e8987611202565b90506109128e868f6000015184611289565b610923858f8f600001518a8a611324565b610935858e6000015189878a866113a1565b8661093f82610cfc565b909f909e50959c50949a5050505050505050505050565b60008061096161141a565b6001600160a01b038516600090815260209182526040808220868352909252205491505092915050565b600080610554600c611423565b60008060006109a68561143c565b9050620151808406156109c0576000809250925050610a9c565b8381106109d4576000809250925050610a9c565b6201518081850304605a81116109f157925060019150610a9c9050565b6101688111610a30576000620151806207e900840604820160591901905060068104605a0160068281610a2057fe5b0660001494509450505050610a9c565b6108708111610a605760006201518062278d00840604820161016719019050601e8104608701601e8281610a2057fe5b611de28111610a90576000620151806276a700840604820161086f19019050605a810460c301605a8281610a2057fe5b61010060009350935050505b9250929050565b600060018210158015610ab857506101008211155b610ac157600080fd5b50600019011b600160ff1b9081161490565b600060016001607f1b03198212801590610af4575060016001607f1b038213155b610afd57600080fd5b5090565b6000610b0d838361145d565b905080610b1a5750610753565b6000610b246114eb565b61ffff87166000908152602082815260408083208984529091528120549192506001600160501b03909116810390610b5c82856114f8565b90506000811315610b6c57600080fd5b610b85610b80610b7b83610cfc565b61150e565b61151d565b61ffff89166000908152602085815260408083208b84529091529020805469ffffffffffffffffffff19166001600160501b0392909216919091179055610bce89898987611533565b505050505050505050565b600060018310158015610bee57506101008311155b610bf757600080fd5b8115610c105750600160ff1b60001983011c8317610c20565b50600160ff1b60001983011c1983165b9392505050565b6014610c32826115bd565b1115610c505760405162461bcd60e51b81526004016103c29061429a565b6000610c5a61141a565b6001600160a01b039094166000908152602094855260408082209482529390945250912055565b82600111158015610c96575084602001518311155b610cb25760405162461bcd60e51b81526004016103c29061431d565b6000610ccf610cc08561168d565b610cc984611731565b906111ab565b9050610cf4866000015161ffff16828486610ce98b61174d565b8a9493929190611761565b505050505050565b60006105546000198361178b565b600082821115610d1957600080fd5b50900390565b6000806000610d3189888888886117d9565b91945090925090508215610d92576000610d4a8a611919565b9050610d6e818b604001518c606001518d60a001518e60c001518f60e0015161191d565b8751610d7a9083611a31565b610d908989600001518c602001518a8887611a6d565b505b50965096945050505050565b6000805b8651811015610eb5576000878281518110610db957fe5b60200260200101519050848160400151141580610de257508661ffff16816000015161ffff1614155b80610df1575085816020015114155b15610dfc5750610ead565b60028160a001516003811115610e0e57fe5b14158015610e2c575060038160a001516003811115610e2957fe5b14155b610e3557600080fd5b6060810151600090610e47908661053e565b9050610e5286610ec2565b15610e65576000811215610e6557600080fd5b6a7fffffffffffffffffffff198112801590610e8c57506a7fffffffffffffffffffff8113155b610e9557600080fd5b6060820152600160a090910181905291506105359050565b600101610da2565b5060009695505050505050565b6000600282108015906105545750506008101590565b606060008251600014610eef578251600202610ef2565b60015b905060008167ffffffffffffffff81118015610f0d57600080fd5b50604051908082528060200260200182016040528015610f4757816020015b610f34613c31565b815260200190600190039081610f2c5790505b50905060005b8451811015610f8957848181518110610f6257fe5b6020026020010151828281518110610f7657fe5b6020908102919091010152600101610f4d565b509392505050565b610f99613c10565b6000610fa484611b44565b90508281600001511015610fe357600080610fbe86611c0e565b9050610fcc86848388611c93565b9093509150610fdc868385611d37565b5050610ff0565b80518314610ff057600080fd5b604051806060016040528061101e6110198460a001518560c00151611f6d90919063ffffffff16565b611f94565b81526020016110416110198460a001518560e00151611f6d90919063ffffffff16565b8152602001826060015181525091505092915050565b600080611062611faa565b60009384526020525050604090205490565b60008084116110955760405162461bcd60e51b81526004016103c29061420d565b60078411156110b65760405162461bcd60e51b81526004016103c2906142ed565b6276a7008306156110c957506000610c20565b60006110d483611731565b905060015b85811161110d576110f36110ec8261168d565b83906111ab565b85141561110557600192505050610c20565b6001016110d9565b50600095945050505050565b600080611124611fb7565b6000938452602052505060409020546001600160a01b031690565b600080600080600080611150611fc4565b6001600160a01b039097166000908152602097909752505060409094205461ffff81169563ffffffff620100008304811696506601000000000000830416945060ff600160501b8304169350600160581b90910460d01b9150565b600082820183811015610c2057600080fd5b6000806111c861098b565b6001600160a01b03861660009081526020918252604080822087835283528082208683529092522054600f90810b900b9150509392505050565b600080611210878787611fd1565b9050600483901a620f42400260008513156112365761122f82826111ab565b915061124d565b808211156112485761122f8282610d0a565b600091505b60006112628361125d8a8a610d0a565b6120b3565b905061127c6112718783612124565b60408b01519061213d565b9998505050505050505050565b6000611293612183565b61ffff8416600090815260209190915260408120546001600160a01b031691508212156112be579293925b806001600160a01b03166323de665186866112d886612190565b6040518463ffffffff1660e01b81526004016112f693929190614103565b600060405180830381600087803b15801561131057600080fd5b505af1158015610bce573d6000803e3d6000fd5b8061132e57610753565b600061133a84846121b1565b90506000821215611349579394935b6001600160a01b03808616908716337fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628461138387612190565b604051611391929190614404565b60405180910390a4505050505050565b60006113b8878787876113b388610cfc565b6103df565b90506000831380156113cb575060008112155b806113e257506000831280156113e2575060008113155b6113eb57600080fd5b60006113f788886121cf565b9050611403818461053e565b9050611410888883612228565b5050505050505050565b600080610554600b5b6000620f424082602681111561143557fe5b0192915050565b60006201518082101561144e57600080fd5b62015180825b06909103919050565b60008183148061147a57506000831215801561147a575060008212155b1561148757506000610554565b600083131580156114985750816000125b156114a4575081610554565b600082131580156114b55750826000125b156114ca576114c382610cfc565b9050610554565b600083131580156114dc575060008213155b1561004b576114c383836114f8565b6000806105546020611423565b8082038281131560008312151461055457600080fd5b600080821215610afd57600080fd5b60006001600160501b03821115610afd57600080fd5b600080611541858585612233565b9150915060008060008512156115595787915061155c565b50865b806001600160a01b0316826001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516115ab929190614140565b60405180910390a45050505050505050565b600181901c7f5555555555555555555555555555555555555555555555555555555555555555908116911601600281901c7f3333333333333333333333333333333333333333333333333333333333333333908116911601600481901c7f07070707070707070707070707070707070707070707070707070707070707079190911601600881901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f908116911601601081901c01602081901c01604081901c01608081901c60ff90811691160190565b600081600114156116a257506276a700610320565b81600214156116b5575062ed4e00610320565b81600314156116c957506301da9c00610320565b81600414156116dd57506303b53800610320565b81600514156116f157506309450c00610320565b8160061415611705575063128a1800610320565b816007141561171957506325143000610320565b60405162461bcd60e51b81526004016103c29061423c565b60006276a70082101561174357600080fd5b6276a70082611454565b6060015161012c60089190911c60ff160290565b60006276a70061177085611731565b0190506117828787878787878761231f565b50505050505050565b8181026000198314156117bb578115806117ad5750828282816117aa57fe5b05145b6117b657600080fd5b610554565b8215806117d05750818382816117cd57fe5b05145b61055457600080fd5b60008060008084116117ea57600080fd5b858860400151136118035750600091508190508061190e565b6000611813886000015186612356565b905060006118328a606001518a6040015161237090919063ffffffff16565b90506000806000611847858e8e878f8f61239d565b9850919450925090508261186a576000806000975097509750505050505061190e565b60408d0151611879908c61247c565b60408e0152611888848361053e565b9350600061189c60008f6040015187612498565b9050633b9aca008111156118c057600080600098509850985050505050505061190e565b60006118cc87836124d5565b9050806118ea5760008060009950995099505050505050505061190e565b60a08f01525060408c0151611903908e90858585612588565b909850965050505050505b955095509592505050565b5190565b6000851215801561193557506001600160501b038513155b61193e57600080fd5b6000841215801561195657506001600160501b038413155b61195f57600080fd5b826000108015611973575063ffffffff8311155b61197c57600080fd5b816000108015611990575063ffffffff8211155b61199957600080fd5b63ffffffff8111156119aa57600080fd5b855469ffffffffffffffffffff19166001600160501b039586161769ffffffffffffffffffff60501b1916600160501b94909516939093029390931763ffffffff60a01b1916600160a01b63ffffffff928316021763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b9190921602179055565b6000811215611a3f57600080fd5b6000611a4d610fee846121cf565b9050611a59818361053e565b9050611a68610fee84836125dd565b505050565b6000611a77612183565b61ffff8716600090815260209190915260408120546001600160a01b03169150611a9f611fb7565b61ffff8816600090815260209190915260408120546001600160a01b03169150611ac9858561053e565b9050826001600160a01b031663ccb2d5ed8a8484611ae68961150e565b6040518563ffffffff1660e01b8152600401611b0594939291906140da565b600060405180830381600087803b158015611b1f57600080fd5b505af1158015611b33573d6000803e3d6000fd5b50505050610bce828a8a8a8a611324565b611b4c613c75565b6000611b56612651565b61ffff93841660009081526020918252604090819020805464ffffffffff811686526501000000000081046001600160581b03908116948701949094526001820154841692860192909252600160d81b820463ffffffff166060860152600160801b9091049091166080840152600201546001600160501b0380821660a0850152600160501b8204811660c0850152600160a01b82041660e0840152600160f01b900460ff1661012c02909216610100820152919050565b600080611c1a8361265e565b6001600160a01b031663ef81f2166040518163ffffffff1660e01b81526004016040805180830381600087803b158015611c5357600080fd5b505af1158015611c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8b919061400c565b949350505050565b611c9b613c75565b6000806000611cab88868961268e565b60c08b019290925260e08a019290925260208901519193509150611ccf90836111ab565b6020880152608087015160009015611cfd576080880151611cfa90611cf48982610d0a565b90612799565b90505b611d1d611d12670de0b6b3a7640000836111ab565b60a08a0151906127b6565b60a089015250506080860194909452505082529092909150565b6000611d41612651565b60008561ffff1681526020019081526020016000209050611d6582600001516127d3565b815464ffffffffff191664ffffffffff9190911617815560a0820151611d8a9061151d565b60028201805469ffffffffffffffffffff19166001600160501b039290921691909117905560c0820151611dbd9061151d565b81600201600a6101000a8154816001600160501b0302191690836001600160501b03160217905550611df28260e0015161151d565b8160020160146101000a8154816001600160501b0302191690836001600160501b03160217905550611e2782602001516127e7565b81546001600160581b039190911665010000000000026fffffffffffffffffffffff0000000000199091161781556040820151611e63906127e7565b6001820180546affffffffffffffffffffff19166001600160581b03929092169190911790556080820151611e97906127e7565b81546001600160581b0391909116600160801b026affffffffffffffffffffff60801b199091161781556060820151611ecf906127fd565b815463ffffffff91909116600160d81b0263ffffffff60d81b199091161781558215611f1b576000611f0084611f94565b9050611f0c8582611a31565b611f19610fee8683612810565b505b8361ffff167fef25641e225e493886510ca1ad6584fa7b442b9fea820a29d1de3ce27d270fd28360a001518460c001518560e00151604051611f5f93929190614412565b60405180910390a250505050565b600082611f7c57506000610554565b82820282848281611f8957fe5b0414610c2057600080fd5b60006001600160ff1b03821115610afd57600080fd5b6000806105546009611423565b6000806105546003611423565b6000806105546002611423565b6000806000611fe586602001518686612890565b915091506000611ff48761174d565b90508161201457865161200d9061ffff16878388612917565b93506120a9565b600061201f86611731565b9050600061202f6110ec8661168d565b905060006120478a6000015161ffff1683868b612917565b905060008087600114156120655750506040808b0151015188612094565b61207b61207460018a0361168d565b86906111ab565b90506120918c6000015161ffff1682888d612917565b91505b6120a1818584868f6129b6565b985050505050505b5050509392505050565b6000806120d66120d16301da9c006120cb8787611f6d565b90612a14565b612a33565b905060006120ea82621dcd6560491b612a51565b905060006120f782612aa4565b9050600061210b82621dcd6560491b612af9565b905061211681612b2f565b60070b979650505050505050565b6000610c2061213784633b9aca0061178b565b83612b38565b8151600090819061216790612161856ec097ce7bc90715b34b9f100000000061178b565b90612b38565b9050600083126121775780611c8b565b611c8b81600019612b69565b6000806105546021611423565b6000808212156121aa576121a382610cfc565b9050610320565b5080610320565b67ffff000000000000603083901b16600882901b1760011792915050565b6000806121da612b7f565b6001600160a01b03851660009081526020828152604080832061ffff8816845290915281208054600160a81b9004600a90810b900b945091925083121561222057600080fd5b505092915050565b611a688383836125dd565b60408051600280825260608281019093528291600091816020016020820280368337019050509050600061226787876121b1565b9050808260008151811061227757fe5b6020026020010181815250506801000000000000000081178260018151811061229c57fe5b6020908102919091010152604080516002808252606082019092526000918160200160208202803683370190505090506122d586612190565b816000815181106122e257fe5b6020026020010181815250506122f786612190565b8160018151811061230457fe5b6020908102919091010152919350909150505b935093915050565b61232c8787878685612b8c565b6123458760e001518860a001518960c001518588612c46565b60c090970196909652505050505050565b61235e613cc1565b610c20838361236b612cc1565b612cce565b6000806121676ec097ce7bc90715b34b9f100000000061216186600001518661178b90919063ffffffff16565b60008060008060006123b4878b604001518a612498565b9050633b9aca008111156123d65760008060008094509450945094505061246f565b60006123e28c836124d5565b905060006124026123fd6123f6848b6120b3565b8b90612124565b610cfc565b90506124128d8360008c12612d2f565b93506124246123fd6123f6868b6120b3565b96508087131561243357600080fd5b600061243f82896114f8565b905061245960646121616124528f612da7565b849061178b565b95506124686123fd898861053e565b9650505050505b9650965096509692505050565b600061248883836114f8565b9050600081121561055457600080fd5b6000808312156124a757600080fd5b60008212156124b557600080fd5b611c8b610b7b6124c5848661053e565b6124cf868861247c565b90612124565b6000808360800151116124e757600080fd5b633b9aca008211156124f857600080fd5b8251821161251757825160408401516114c391906120cb908590611f6d565b8260200151821161254f5760408301518351602085015160608601516114c39392610cc992819003916120cb91880390859003611f6d565b610c208360600151610cc98560200151633b9aca00036120cb876060015188608001510388602001518803611f6d90919063ffffffff16565b60008080612596878661213d565b60608901519091506125a8908261053e565b60608901524260e089015260006125bf888661213d565b905060006125cd898961213d565b9a91995090975050505050505050565b60008112156125eb57600080fd5b60006125f5612b7f565b6001600160a01b03851660009081526020828152604080832061ffff88168452909152902090915061262683612db4565b8154600a9190910b6001600160581b0316600160a81b026001600160a81b0390911617905550505050565b600080610554601d611423565b600080612669612de5565b61ffff939093166000908152602093909352505060409020546001600160a01b031690565b6000806000806000806126a18988612df2565b895190955091935091506000906126c8906126bd908b90610d0a565b633b9aca0090611f6d565b90506127026126f76301da9c006126df8585611f6d565b816126e657fe5b670de0b6b3a76400009190046111ab565b60e08a0151906127b6565b96506127246127196301da9c006126df8785611f6d565b60c08a0151906127b6565b95508183141561273b575060009350612790915050565b600061275d6127526301da9c006126df8786611f6d565b60e08b0151906127b6565b9050600061276b8983610d0a565b9050612788886120cb838d60400151611f6d90919063ffffffff16565b965050505050505b93509350935093565b6000610c206127b084670de0b6b3a7640000611f6d565b83612a14565b6000610c206127c58484611f6d565b670de0b6b3a7640000612a14565b600064ffffffffff821115610afd57600080fd5b60006001600160581b03821115610afd57600080fd5b600063ffffffff821115610afd57600080fd5b600061281a612183565b61ffff8416600090815260209190915260409081902054905163ad1c095d60e01b81526001600160a01b039091169150819063ad1c095d906128629087908690600401614127565b600060405180830381600087803b15801561287c57600080fd5b505af1158015611410573d6000803e3d6000fd5b600080600085116128a057600080fd5b60078511156128ae57600080fd5b60006128b984611731565b905060015b8681116129115760006128da6128d38361168d565b84906111ab565b9050868114156128f257509250600091506123179050565b8681111561290857509250600191506123179050565b506001016128be565b50600080fd5b600080612922612e8d565b905060006276a70061293385611731565b6000898152602085815260408083208b84528252808320949093018083529390522080549192509063ffffffff600160a01b8204811691600160c01b8104821691600160e01b909104168161299a5760405162461bcd60e51b81526004016103c29061417e565b6129a78184848c8c612c46565b9b9a5050505050505050505050565b60008186106129c457600080fd5b8482106129d057600080fd5b8383106129f6576129ef84610cc98888036120cb8388038b8803611f6d565b9050610535565b6129ef612a0d8787036120cb8688038a8703611f6d565b8590610d0a565b6000808211612a2257600080fd5b818381612a2b57fe5b049392505050565b6000677fffffffffffffff821115612a4a57600080fd5b5060401b90565b600081600f0b60001415612a6457600080fd5b600082600f0b604085600f0b901b81612a7957fe5b05905060016001607f1b03198112801590612a9b575060016001607f1b038113155b610c2057600080fd5b6000600160461b82600f0b12612ab957600080fd5b683fffffffffffffffff1982600f0b1215612ad657506000610320565b610554608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d612e9a565b6000600f83810b9083900b0260401d60016001607f1b03198112801590612a9b575060016001607f1b03811315610c2057600080fd5b600f0b60401d90565b600081600019148015612b4e5750600160ff1b83145b15612b5857600080fd5b818381612b6157fe5b059392505050565b6000818312612b785781610c20565b5090919050565b6000806105546006611423565b6000612b96612e8d565b6000868152602082815260408083208884528252808320868452825291829020808a5290890187905280546001600160501b03808216938b0193909352600160501b810490921660608a015263ffffffff600160a01b8304811660a08b0152600160c01b8304811660c08b0152600160e01b90920490911660e0890152909150808415612c355760018201546001600160501b03166080890152611410565b600060808901525050505050505050565b6000808311612c5457600080fd5b81861115612c63575083610535565b6000612c6f8388610d0a565b905083811115612c825785915050610535565b6000612c8e8286613953565b90506000612ca0633b9aca0083610d0a565b905061127c633b9aca006120cb612cb78a85611f6d565b610cc98c87611f6d565b600080610554601b611423565b612cd6613cc1565b6000612ce184613966565b61ffff861660009081526020859052604081209192509060048610612d07576001612d0a565b60005b60ff1660028110612d1757fe5b01549050612d25828261399f565b9695505050505050565b600080612d4e60646120cb8760e0015187611f6d90919063ffffffff16565b90508460a00151811015612d63575060a08401515b8460c00151811115612d76575060c08401515b8215612d8d57612d8684826111ab565b9150610f89565b838111612d9c57808403610535565b600095945050505050565b6060015160181c60ff1690565b60006a7fffffffffffffffffffff198212801590610af457506a7fffffffffffffffffffff821315610afd57600080fd5b600080610554601f611423565b600080600080600085602001511115612e3f57612e3c612e238660c001518760200151611f6d90919063ffffffff16565b60e08701516040880151612e3691611f6d565b90613953565b90505b6000612e4a87613abe565b9050612e5681836124d5565b94508115612e6d57612e6a81866001612d2f565b93505b602086015115612e8457612e818583613af1565b92505b50509250925092565b600080610554600a611423565b6000600160461b82600f0b12612eaf57600080fd5b683fffffffffffffffff1982600f0b1215612ecc57506000610320565b6001607f1b60006780000000000000008416600f0b1315612efe5770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315612f2b577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315612f58577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315612f855770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315612fb2577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315612fdf57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b131561300c5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b131561303957700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b13156130655770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315613091577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b13156130bd57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b13156130e9577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b131561311557700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b13156131415770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b131561316d577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b13156131995770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b13156131c4577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b13156131ef57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b131561321a5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b131561324557700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b13156132705770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b131561329b577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b13156132c657700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b13156132f1577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b131561331b57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b13156133455770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b131561336f577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b13156133995770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b13156133c3577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b13156133ed57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b13156134175770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b131561344157700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b131561346a5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315613493577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b13156134bc57700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b13156134e5577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561350e57700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156135375770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b1315613560577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156135895770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156135b1577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b13156135d957700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156136015770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561362957700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156136515770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b1315613679577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b13156136a157700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b13156136c9577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b13156136f057700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156137175770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b131561373e577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156137655770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b131561378c577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156137b357700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b13156137da5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561380157700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156138275770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b131561384d577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b131561387357700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b1315613899577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b13156138bf57700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156138e55770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b131561390b577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b13156139315770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b0381111561055457600080fd5b6000610c206127b084633b9aca00611f6d565b60008160001061397557600080fd5b600782111561398357600080fd5b600482106139945760048203613996565b815b60080292915050565b6139a7613cc1565b6064633b9aca008360ff8616602081106139bd57fe5b1a02816139c657fe5b0481526064633b9aca008360ff8616600101602081106139e257fe5b1a02816139eb57fe5b04816020018181525050613a108260028560ff160160208110613a0a57fe5b1a613b0a565b60808201819052610100908360ff861660030160208110613a2d57fe5b1a0281613a3657fe5b0460408201526080810151610100908360ff861660040160208110613a5757fe5b1a0281613a6057fe5b0460608201526207a1208260ff851660050160208110613a7c57fe5b1a0260a0820152622625a08260ff851660060160208110613a9957fe5b1a0260c08201528160ff841660070160208110613ab257fe5b1a60e082015292915050565b613ac6613cc1565b6000613ad0612cc1565b61ffff841660009081526020919091526040812054915061031c908261399f565b6000610c20613b008484611f6d565b633b9aca00612a14565b60008160ff16609610613b255760ff8216622625a002610554565b5060951960ff919091160162e4e1c00263165a0bc00190565b60405180610100016040528060008019168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b6040805160808101825260008082526020820152908101613c03613c10565b8152600060209091015290565b60405180606001604052806000815260200160008152602001600081525090565b6040518060c00160405280600061ffff1681526020016000815260200160008152602001600081526020016000815260200160006003811115613c7057fe5b905290565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461032057600080fd5b60008083601f840112613d2e578081fd5b50813567ffffffffffffffff811115613d45578182fd5b6020830191508360208083028501011115610a9c57600080fd5b600082601f830112613d6f578081fd5b8135602067ffffffffffffffff80831115613d8657fe5b613d938283850201614428565b8381528281019086840160c0808702890186018a1015613db1578788fd5b875b87811015613e395781838c031215613dc9578889fd5b604080518381018181108982111715613dde57fe5b8252613de985613e57565b815284890135898201528185013591810191909152606080850135908201526080808501359082015260a090613e20828601613e48565b9181019190915285529386019391810191600101613db3565b50919998505050505050505050565b80356004811061032057600080fd5b803561ffff8116811461032057600080fd5b600080600080600060808688031215613e80578081fd5b613e8986613d06565b9450613e9760208701613e57565b9350604086013567ffffffffffffffff80821115613eb3578283fd5b908701906080828a031215613ec6578283fd5b604051608081018181108382111715613edb57fe5b604052823582811115613eec578485fd5b613ef88b828601613d5f565b825250602083013582811115613f0c578485fd5b613f188b828601613d5f565b60208301525060408381013590820152606092830135838201529450908701359080821115613f45578283fd5b50613f5288828901613d1d565b969995985093965092949392505050565b600080600080600060808688031215613f7a578081fd5b613f8386613d06565b9450613f9160208701613e57565b9350604086013564ffffffffff81168114613faa578182fd5b9250606086013567ffffffffffffffff811115613fc5578182fd5b613f5288828901613d1d565b600080600060608486031215613fe5578283fd5b613fee84613e57565b9250613ffc60208501613d06565b9150604084013590509250925092565b6000806040838503121561401e578182fd5b505080516020909101519092909150565b6000815180845260208085019450808401835b838110156140a0578151805161ffff168852838101518489015260408082015190890152606080820151908901526080808201519089015260a090810151906004821061408b57fe5b88015260c09096019590820190600101614042565b509495945050505050565b6000815180845260208085019450808401835b838110156140a0578151875295820195908201906001016140be565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60006040825261415360408301856140ab565b828103602084015261053581856140ab565b90815260200190565b9182521515602082015260400190565b60208082526016908201527513585c9ad95d081b9bdd081a5b9a5d1a585b1a5e995960521b604082015260600190565b6020808252601a908201527f4e6f6e206964696f73796e637261746963206d61747572697479000000000000604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b60208082526015908201527410d1ce881b9bc81b585c9ad95d1cc81b1a5cdd1959605a1b604082015260600190565b6020808252600d908201526c092dcecc2d8d2c840d2dcc8caf609b1b604082015260600190565b60208082526017908201527f5472616465206661696c65642c206c6971756964697479000000000000000000604082015260600190565b6020808252600f908201526e4f766572206d61782061737365747360881b604082015260600190565b60208082526010908201526f496e76616c6964206d6174757269747960801b604082015260600190565b60208082526016908201527510d1ce881b585c9ad95d081a5b99195e08189bdd5b9960521b604082015260600190565b6020808252600e908201526d125b9d985b1a59081b585c9ad95d60921b604082015260600190565b60208082526017908201527f496e73756666696369656e7420626c6f636b2074696d65000000000000000000604082015260600190565b6020808252601690820152755472616465206661696c65642c20736c69707061676560501b604082015260600190565b6000604082528351608060408401526143c860c084018261402f565b90506020850151603f198483030160608501526143e5828261402f565b6040870151608086015260609096015160a08501525050506020015290565b918252602082015260400190565b9283526020830191909152604082015260600190565b60405181810167ffffffffffffffff8111828210171561444457fe5b60405291905056fea264697066735822122061e7442356fab11db5878cade4c56224d69250bb92cb2879d01d6b0e3de964b864736f6c63430007060033", "bytecodeSha1": "889a099ddb98a0b27b279bc29312e245debac3ac", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "TradingAction", "coverageMap": {"branches": {"100": {}, "101": {"PrimeCashExchangeRate._getScalarIncrease": {"623": [23214, 23259, false]}, "PrimeCashExchangeRate._setPrimeCashFactorsOnAccrue": {"622": [11018, 11042, false]}, "PrimeCashExchangeRate._updatePrimeCashScalars": {"621": [25867, 25901, false]}, "PrimeCashExchangeRate.getPrimeCashRateStateful": {"619": [28130, 28164, false], "620": [28574, 28609, true]}, "PrimeCashExchangeRate.getPrimeInterestRates": {"624": [20035, 20063, false], "625": [20785, 20800, false], "626": [21238, 21266, false]}, "PrimeCashExchangeRate.updateTotalfCashDebtOutstanding": {"617": [17910, 17928, false], "618": [18420, 18437, true]}}, "102": {"PrimeRateLib.convertFromUnderlying": {"627": [15231, 15252, true]}}, "103": {}, "104": {"BitmapAssetsHandler.addifCashAsset": {"524": [3987, 3994, true], "525": [4055, 4084, false], "526": [4581, 4599, false], "527": [4806, 4819, false]}, "BitmapAssetsHandler.setAssetsBitmap": {"528": [1437, 1495, true]}}, "105": {"PortfolioHandler._extendNewAssetArray": {"616": [5808, 5829, true]}, "PortfolioHandler._mergeAssetIntoArray": {"607": [1787, 1815, true], "608": [1835, 1865, true], "609": [1885, 1911, false], "610": [2110, 2156, false], "611": [2176, 2230, true], "612": [2430, 2470, false], "613": [2498, 2514, true], "614": [2611, 2641, false], "615": [2645, 2675, true]}, "PortfolioHandler.addAsset": {"599": [3486, 3672, false], "600": [3704, 3740, false], "601": [3971, 3977, false], "602": [4160, 4200, false], "603": [4224, 4237, true], "604": [4325, 4352, false], "605": [4356, 4383, true], "606": [4498, 4565, false]}}, "109": {}, "117": {"ABDKMath64x64.div": {"442": [6730, 6736, true], "443": [6796, 6815, false], "444": [6819, 6838, true]}, "ABDKMath64x64.exp": {"445": [21388, 21412, true], "446": [21436, 21461, false]}, "ABDKMath64x64.exp_2": {"449": [14687, 14711, true], "450": [14735, 14760, false], "451": [14852, 14878, false], "452": [14956, 14982, false], "453": [15060, 15086, false], "454": [15164, 15190, false], "455": [15268, 15293, false], "456": [15371, 15396, false], "457": [15474, 15499, false], "458": [15577, 15602, false], "459": [15680, 15704, false], "460": [15782, 15806, false], "461": [15884, 15908, false], "462": [15986, 16010, false], "463": [16088, 16111, false], "464": [16189, 16212, false], "465": [16290, 16313, false], "466": [16391, 16414, false], "467": [16492, 16514, false], "468": [16592, 16614, false], "469": [16692, 16714, false], "470": [16792, 16814, false], "471": [16892, 16913, false], "472": [16991, 17012, false], "473": [17090, 17111, false], "474": [17189, 17210, false], "475": [17288, 17308, false], "476": [17386, 17406, false], "477": [17484, 17504, false], "478": [17582, 17602, false], "479": [17680, 17699, false], "480": [17777, 17796, false], "481": [17874, 17893, false], "482": [17971, 17990, false], "483": [18068, 18086, false], "484": [18164, 18182, false], "485": [18260, 18278, false], "486": [18356, 18374, false], "487": [18452, 18469, false], "488": [18547, 18564, false], "489": [18642, 18659, false], "490": [18737, 18754, false], "491": [18832, 18848, false], "492": [18926, 18942, false], "493": [19020, 19036, false], "494": [19114, 19130, false], "495": [19208, 19223, false], "496": [19301, 19316, false], "497": [19394, 19409, false], "498": [19487, 19502, false], "499": [19580, 19594, false], "500": [19672, 19686, false], "501": [19764, 19778, false], "502": [19856, 19870, false], "503": [19948, 19961, false], "504": [20039, 20052, false], "505": [20130, 20143, false], "506": [20221, 20234, false], "507": [20312, 20324, false], "508": [20402, 20414, false], "509": [20492, 20504, false], "510": [20582, 20594, false], "511": [20672, 20683, false], "512": [20761, 20772, false], "513": [20850, 20861, false], "514": [20939, 20950, false], "515": [21075, 21104, true]}, "ABDKMath64x64.fromUInt": {"441": [1983, 2006, true]}, "ABDKMath64x64.mul": {"447": [4286, 4305, false], "448": [4309, 4328, true]}}, "118": {"Bitmap.isBitSet": {"519": [811, 821, false], "520": [825, 837, true]}, "Bitmap.setBit": {"521": [438, 448, false], "522": [452, 464, true], "523": [509, 514, false]}}, "119": {}, "120": {"SafeInt256.abs": {"647": [1730, 1735, false]}, "SafeInt256.add": {"628": [1524, 1552, true]}, "SafeInt256.div": {"649": [1121, 1128, false], "650": [1132, 1148, true]}, "SafeInt256.min": {"651": [3489, 3494, true]}, "SafeInt256.mul": {"642": [510, 517, false], "643": [528, 534, true], "644": [538, 548, true], "645": [573, 579, true], "646": [583, 593, true]}, "SafeInt256.negChange": {"631": [3781, 3793, true], "632": [3798, 3808, false], "633": [3812, 3820, false], "634": [3845, 3855, false], "635": [3859, 3866, false], "636": [4073, 4081, false], "637": [4085, 4094, false], "638": [4307, 4317, false], "639": [4321, 4329, false]}, "SafeInt256.sub": {"640": [1398, 1426, true]}, "SafeInt256.subNoNeg": {"648": [1898, 1904, true]}, "SafeInt256.toInt128": {"629": [3176, 3205, false], "630": [3209, 3238, true]}, "SafeInt256.toInt88": {"652": [2976, 3004, false], "653": [3008, 3036, true]}, "SafeInt256.toUint": {"641": [2486, 2492, true]}}, "121": {"SafeUint256.add": {"655": [481, 487, true]}, "SafeUint256.div": {"663": [1879, 1884, true]}, "SafeUint256.mul": {"657": [1233, 1239, false], "658": [1294, 1304, true]}, "SafeUint256.sub": {"654": [869, 875, true]}, "SafeUint256.toInt": {"659": [4964, 4994, true]}, "SafeUint256.toUint32": {"662": [3560, 3581, true]}, "SafeUint256.toUint40": {"660": [3699, 3720, true]}, "SafeUint256.toUint80": {"656": [4259, 4280, true]}, "SafeUint256.toUint88": {"661": [4398, 4419, true]}}, "171": {}, "178": {}, "180": {}, "183": {}, "187": {}, "189": {}, "190": {}, "191": {}, "192": {}, "194": {}, "199": {}, "200": {}, "35": {"TradingAction._executeLendBorrowTrade": {"421": [8883, 8918, false], "422": [9284, 9298, false], "423": [9318, 9353, false], "424": [9441, 9473, true], "425": [9606, 9638, true]}, "TradingAction._executeTrade": {"417": [6937, 6988, false], "418": [7154, 7187, true], "419": [7191, 7226, false], "420": [7402, 7417, true]}, "TradingAction._getResidualPricePrimeCash": {"435": [15149, 15164, false], "436": [15410, 15440, false]}, "TradingAction._purchaseNTokenResidual": {"426": [10714, 10734, true], "427": [10923, 11001, true], "428": [12073, 12241, true], "429": [12514, 12526, false], "430": [12530, 12555, false], "431": [12654, 12686, false], "432": [12741, 12753, false], "433": [12757, 12782, false], "434": [12881, 12913, false]}, "TradingAction._updateNTokenPortfolio": {"437": [16818, 16843, false], "438": [16847, 16865, true], "439": [16883, 16908, false], "440": [16912, 16930, true]}, "TradingAction.executeTradesArrayBatch": {"415": [5191, 5232, true], "416": [5252, 5296, false]}}, "72": {}, "76": {}, "77": {}, "78": {}, "81": {}, "82": {}, "83": {"Emitter.emitChangefCashLiquidity": {"562": [7781, 7798, false]}, "Emitter.emitTransferPrimeCash": {"559": [13545, 13566, false]}, "Emitter.emitTransferfCash": {"560": [8139, 8150, false], "561": [8427, 8437, false]}}, "84": {"BalanceHandler._setPositiveCashBalance": {"518": [17529, 17548, true]}, "BalanceHandler.getPositiveCashBalance": {"517": [17125, 17141, true]}, "BalanceHandler.incrementFeeToReserve": {"516": [15362, 15370, true]}}, "85": {}, "86": {}, "87": {}, "88": {}, "89": {}, "93": {"CashGroup.calculateOracleRate": {"531": [9202, 9215, false], "532": [9817, 9833, false]}, "CashGroup.interpolateOracleRate": {"533": [6242, 6271, true], "534": [6345, 6373, true], "535": [6609, 6630, false]}, "CashGroup.loadMarket": {"529": [5305, 5321, false], "530": [5325, 5364, true]}}, "94": {"DateTime.getBitNumFromMaturity": {"536": [4231, 4260, false], "537": [4335, 4360, false], "538": [4628, 4666, false], "539": [4728, 4767, false], "540": [5610, 5650, false], "541": [6060, 6102, false]}, "DateTime.getMarketIndex": {"555": [3175, 3193, true], "556": [3212, 3263, true], "557": [3535, 3561, false], "558": [3678, 3703, false]}, "DateTime.getReferenceTime": {"554": [445, 475, true]}, "DateTime.getTimeUTC0": {"546": [688, 709, true]}, "DateTime.getTradedMarket": {"547": [1034, 1044, false], "548": [1084, 1094, false], "549": [1138, 1148, false], "550": [1185, 1195, false], "551": [1236, 1246, false], "552": [1287, 1297, false], "553": [1339, 1349, false]}, "DateTime.isValidMarketMaturity": {"542": [1685, 1703, true], "543": [1747, 1798, true], "544": [1840, 1873, false], "545": [2023, 2072, false]}}, "96": {"InterestRateCurve._getMarketIndexOffset": {"584": [2338, 2353, true], "585": [2372, 2420, true], "586": [2446, 2461, true]}, "InterestRateCurve._getNetCashAmountsUnderlying": {"568": [23070, 23117, false], "569": [23651, 23694, true]}, "InterestRateCurve._getfCashInterestRateParams": {"579": [2821, 2836, true]}, "InterestRateCurve.calculateMaxRate": {"587": [3274, 3317, true]}, "InterestRateCurve.calculatefCashTrade": {"563": [19486, 19501, true], "564": [19769, 19804, false], "565": [20675, 20702, false], "566": [21242, 21289, false], "567": [21614, 21639, false]}, "InterestRateCurve.getInterestRate": {"572": [12812, 12832, true], "573": [13163, 13211, true], "574": [13227, 13267, false], "575": [13483, 13523, false]}, "InterestRateCurve.getPostFeeInterestRate": {"580": [17668, 17697, false], "581": [17742, 17771, false], "582": [17817, 17825, false], "583": [18153, 18181, true]}, "InterestRateCurve.getfCashUtilization": {"570": [12202, 12217, true], "571": [12236, 12260, true]}, "InterestRateCurve.updateRateOracle": {"576": [10916, 10940, true], "577": [11088, 11114, false], "578": [11280, 11311, false]}}, "97": {"Market._setMarketStorage": {"589": [9074, 9089, false], "590": [9093, 9123, true], "591": [9178, 9197, false], "592": [9201, 9235, true], "593": [9294, 9313, false], "594": [9317, 9352, true], "595": [9412, 9426, false], "596": [9430, 9460, true], "597": [9541, 9578, true]}, "Market.executeTrade": {"588": [3446, 3463, false]}, "Market.getOracleRate": {"598": [5212, 5226, true]}}, "99": {}}, "statements": {"100": {}, "101": {"PrimeCashExchangeRate._getScalarIncrease": {"271": [22109, 22215], "272": [22577, 22830], "273": [22841, 23089], "274": [23275, 23339], "275": [24262, 24350]}, "PrimeCashExchangeRate._setPrimeCashFactorsOnAccrue": {"212": [10428, 10474], "213": [10484, 10534], "214": [10544, 10586], "215": [10596, 10634], "216": [10714, 10764], "217": [10774, 10820], "218": [10830, 10896], "219": [10906, 10956], "220": [11121, 11182], "221": [11196, 11275], "222": [11296, 11409]}, "PrimeCashExchangeRate._updatePrimeCashScalars": {"205": [24923, 25110], "206": [25255, 25328], "207": [26113, 26270], "208": [26299, 26440], "209": [26454, 26509], "210": [26569, 26601], "211": [26612, 26648]}, "PrimeCashExchangeRate.getPrimeCashFactors": {"196": [1875, 1910], "197": [1920, 1959], "198": [1969, 2004], "199": [2014, 2053], "200": [2063, 2118], "201": [2128, 2167], "202": [2177, 2208], "203": [2218, 2245], "204": [2255, 2318]}, "PrimeCashExchangeRate.getPrimeCashHoldingsOracle": {"270": [3767, 3782]}, "PrimeCashExchangeRate.getPrimeCashRateStateful": {"104": [28307, 28450], "105": [28464, 28535], "106": [28566, 28610], "107": [28664, 28916]}, "PrimeCashExchangeRate.getPrimeInterestRates": {"328": [20169, 20317], "329": [20454, 20507], "330": [20903, 20979], "331": [21282, 21353]}, "PrimeCashExchangeRate.updateTotalfCashDebtOutstanding": {"73": [17930, 17937], "74": [18412, 18438], "75": [18448, 18531], "76": [19310, 19388]}}, "102": {"PrimeRateLib.buildPrimeRateStateful": {"49": [16456, 16538]}, "PrimeRateLib.convertFromUnderlying": {"234": [15224, 15290]}}, "103": {}, "104": {"BitmapAssetsHandler.addifCashAsset": {"20": [3979, 3995], "21": [4291, 4336], "22": [4351, 4497], "23": [4619, 4668], "24": [4697, 4747], "25": [4761, 4781], "26": [4933, 4973], "27": [4988, 5233], "28": [5248, 5296], "29": [5310, 5360], "30": [5381, 5396]}, "BitmapAssetsHandler.getAssetsBitmap": {"61": [1250, 1283]}, "BitmapAssetsHandler.getifCashNotional": {"122": [1997, 2049]}, "BitmapAssetsHandler.setAssetsBitmap": {"80": [1429, 1515], "81": [1634, 1675]}}, "105": {"PortfolioHandler._extendNewAssetArray": {"101": [6008, 6039], "102": [5989, 5992], "103": [6060, 6080]}, "PortfolioHandler._mergeAssetIntoArray": {"91": [1926, 1934], "92": [2085, 2244], "93": [2490, 2515], "94": [2603, 2676], "95": [2735, 2763], "96": [2777, 2822], "97": [2837, 2848], "98": [1690, 1693], "99": [2869, 2881]}, "PortfolioHandler.addAsset": {"38": [3683, 3690], "39": [3979, 3986], "40": [4216, 4238], "41": [4317, 4384], "42": [4581, 4654], "43": [5036, 5068], "44": [5078, 5106], "45": [5116, 5146], "46": [5156, 5184], "47": [5194, 5244], "48": [5254, 5291]}}, "109": {"AssetHandler.isLiquidityToken": {"100": [920, 1051]}}, "117": {"ABDKMath64x64.div": {"298": [6721, 6737], "299": [6787, 6839]}, "ABDKMath64x64.exp": {"300": [21379, 21413], "301": [21463, 21471], "302": [21491, 21579]}, "ABDKMath64x64.exp_2": {"332": [14678, 14712], "333": [14762, 14770], "334": [14886, 14946], "335": [14990, 15050], "336": [15094, 15154], "337": [15198, 15258], "338": [15301, 15361], "339": [15404, 15464], "340": [15507, 15567], "341": [15610, 15670], "342": [15712, 15772], "343": [15814, 15874], "344": [15916, 15976], "345": [16018, 16078], "346": [16119, 16179], "347": [16220, 16280], "348": [16321, 16381], "349": [16422, 16482], "350": [16522, 16582], "351": [16622, 16682], "352": [16722, 16782], "353": [16822, 16882], "354": [16921, 16981], "355": [17020, 17080], "356": [17119, 17179], "357": [17218, 17278], "358": [17316, 17376], "359": [17414, 17474], "360": [17512, 17572], "361": [17610, 17670], "362": [17707, 17767], "363": [17804, 17864], "364": [17901, 17961], "365": [17998, 18058], "366": [18094, 18154], "367": [18190, 18250], "368": [18286, 18346], "369": [18382, 18442], "370": [18477, 18537], "371": [18572, 18632], "372": [18667, 18727], "373": [18762, 18822], "374": [18856, 18916], "375": [18950, 19010], "376": [19044, 19104], "377": [19138, 19198], "378": [19231, 19291], "379": [19324, 19384], "380": [19417, 19477], "381": [19510, 19570], "382": [19602, 19662], "383": [19694, 19754], "384": [19786, 19846], "385": [19878, 19938], "386": [19969, 20029], "387": [20060, 20120], "388": [20151, 20211], "389": [20242, 20302], "390": [20332, 20392], "391": [20422, 20482], "392": [20512, 20572], "393": [20602, 20662], "394": [20691, 20751], "395": [20780, 20840], "396": [20869, 20929], "397": [20958, 21018], "398": [21025, 21060], "399": [21066, 21105]}, "ABDKMath64x64.fromUInt": {"296": [1974, 2007], "297": [2013, 2036]}, "ABDKMath64x64.mul": {"303": [4277, 4329]}, "ABDKMath64x64.toInt": {"304": [1651, 1673]}}, "118": {"Bitmap.isBitSet": {"69": [803, 838], "70": [877, 942]}, "Bitmap.setBit": {"77": [430, 465], "78": [530, 576], "79": [607, 654]}, "Bitmap.totalBitsSet": {"148": [1113, 1269], "149": [1279, 1435], "150": [1445, 1532], "151": [1542, 1698], "152": [1708, 1725], "153": [1735, 1752], "154": [1762, 1780], "155": [1790, 1827]}}, "119": {}, "120": {"SafeInt256.abs": {"235": [1737, 1750], "236": [1765, 1773]}, "SafeInt256.add": {"31": [1516, 1553]}, "SafeInt256.div": {"305": [1111, 1150], "306": [1258, 1267]}, "SafeInt256.divInRatePrecision": {"233": [2129, 2176]}, "SafeInt256.min": {"307": [3482, 3502]}, "SafeInt256.mul": {"168": [487, 496], "169": [519, 549], "170": [564, 594]}, "SafeInt256.neg": {"84": [1632, 1649]}, "SafeInt256.negChange": {"138": [3823, 3831], "139": [4040, 4052], "140": [4271, 4286], "141": [4562, 4584]}, "SafeInt256.sub": {"142": [1390, 1427]}, "SafeInt256.subNoNeg": {"255": [1867, 1880], "256": [1890, 1905]}, "SafeInt256.toInt128": {"71": [3167, 3239], "72": [3272, 3288]}, "SafeInt256.toInt88": {"327": [2967, 3037]}, "SafeInt256.toUint": {"143": [2478, 2493]}}, "121": {"SafeUint256.add": {"121": [473, 488]}, "SafeUint256.div": {"294": [1871, 1885], "295": [1895, 1907]}, "SafeUint256.divInRatePrecision": {"400": [2805, 2861]}, "SafeUint256.divInScalarPrecision": {"276": [3129, 3178]}, "SafeUint256.mul": {"223": [1241, 1249], "224": [1286, 1305]}, "SafeUint256.mulInRatePrecision": {"413": [2966, 3022]}, "SafeUint256.mulInScalarPrecision": {"277": [3285, 3334]}, "SafeUint256.sub": {"85": [861, 876], "86": [886, 898]}, "SafeUint256.toInt": {"225": [4955, 4995]}, "SafeUint256.toUint32": {"280": [3552, 3582]}, "SafeUint256.toUint40": {"278": [3691, 3721]}, "SafeUint256.toUint80": {"144": [4251, 4281]}, "SafeUint256.toUint88": {"279": [4390, 4420]}}, "171": {}, "178": {}, "180": {}, "183": {}, "187": {}, "189": {}, "190": {}, "191": {}, "192": {}, "194": {}, "199": {}, "200": {}, "35": {"TradingAction._executeLendBorrowTrade": {"32": [8699, 8758], "33": [8769, 8819], "34": [8920, 8951], "35": [8999, 9202], "36": [9433, 9500], "37": [9598, 9665]}, "TradingAction._executeTrade": {"16": [7004, 7133], "17": [7242, 7380], "18": [7394, 7445], "19": [7637, 7663]}, "TradingAction._getResidualPricePrimeCash": {"123": [15343, 15389], "124": [15639, 15685], "125": [15818, 15832], "126": [16083, 16189]}, "TradingAction._purchaseNTokenResidual": {"51": [10706, 10755], "52": [10902, 11053], "53": [12052, 12290], "54": [12688, 12720], "55": [12915, 12947], "56": [13050, 13074], "57": [13644, 13763], "58": [14050, 14178], "59": [14189, 14404], "60": [14415, 14481]}, "TradingAction._updateNTokenPortfolio": {"132": [16796, 16941], "133": [17053, 17114], "134": [17191, 17278]}, "TradingAction.executeTradesArrayBatch": {"8": [4979, 5008], "9": [5329, 5337], "10": [5410, 5629], "11": [5648, 5834], "12": [5863, 5896], "13": [5058, 5061], "14": [5917, 5951]}, "TradingAction.executeTradesBitmapBatch": {"0": [3415, 3444], "1": [3543, 3738], "2": [3753, 3965], "3": [3980, 4030], "4": [4044, 4077], "5": [3494, 3497], "6": [4098, 4130]}, "TradingAction.executeVaultTrade": {"7": [2395, 2503]}}, "72": {}, "76": {}, "77": {}, "78": {"LibStorage._getStorageSlot": {"135": [16015, 16060]}}, "81": {}, "82": {}, "83": {"Emitter._fCashPair": {"241": [7101, 7112], "242": [7122, 7155], "243": [7218, 7251], "244": [7261, 7294], "245": [7305, 7325]}, "Emitter._posfCashId": {"237": [6324, 6536]}, "Emitter.emitChangefCashLiquidity": {"145": [7800, 7814], "146": [7840, 7852], "147": [7873, 7926]}, "Emitter.emitMintOrBurnPrimeCash": {"281": [13136, 13183]}, "Emitter.emitTransferPrimeCash": {"127": [13568, 13591], "128": [13601, 13667]}, "Emitter.emitTransferfCash": {"129": [8152, 8159], "130": [8439, 8462], "131": [8473, 8541]}, "Emitter.emitfCashMarketTrade": {"194": [12308, 12399], "195": [12680, 12752]}}, "84": {"BalanceHandler._setPositiveCashBalance": {"268": [17521, 17549], "269": [17770, 17823]}, "BalanceHandler.getPositiveCashBalance": {"238": [16996, 17036], "239": [17117, 17142]}, "BalanceHandler.incrementFeeToReserve": {"191": [15354, 15371], "192": [15517, 15553], "193": [15563, 15635]}, "BalanceHandler.setBalanceStorageForNToken": {"240": [14670, 14733]}}, "85": {}, "86": {}, "87": {}, "88": {}, "89": {}, "93": {"CashGroup._getCashGroupStorageBytes": {"108": [10745, 10769]}, "CashGroup.buildCashGroup": {"50": [15047, 15255]}, "CashGroup.buildCashGroupStateful": {"15": [15947, 15991]}, "CashGroup.calculateOracleRate": {"226": [9231, 9319], "227": [9981, 10029], "228": [9938, 9963], "229": [10127, 10203], "230": [10222, 10412], "231": [10441, 10535]}, "CashGroup.getRateOracleTimeWindow": {"166": [4965, 5063]}, "CashGroup.getReserveFeeShare": {"326": [4581, 4639]}, "CashGroup.interpolateOracleRate": {"290": [6234, 6272], "291": [6337, 6374], "292": [6646, 6890], "293": [7233, 7569]}, "CashGroup.loadMarket": {"82": [5297, 5383], "83": [5514, 5696]}}, "94": {"DateTime.getBitNumFromMaturity": {"62": [4262, 4279], "63": [4362, 4379], "64": [4682, 4707], "65": [5254, 5589], "66": [5870, 6039], "67": [6325, 6500], "68": [6646, 6665]}, "DateTime.getMarketIndex": {"282": [3167, 3194], "283": [3204, 3264], "284": [3563, 3580], "285": [3705, 3721], "286": [3377, 3380], "287": [3742, 3750]}, "DateTime.getReferenceTime": {"164": [437, 476], "165": [486, 536]}, "DateTime.getTimeUTC0": {"136": [680, 710], "137": [720, 756]}, "DateTime.getTradedMarket": {"156": [1046, 1070], "157": [1096, 1124], "158": [1150, 1171], "159": [1197, 1222], "160": [1248, 1273], "161": [1299, 1325], "162": [1351, 1377], "163": [1388, 1411]}, "DateTime.isValidMarketMaturity": {"109": [1677, 1729], "110": [1739, 1825], "111": [1875, 1887], "112": [2074, 2085], "113": [2000, 2003], "114": [2106, 2118]}}, "96": {"InterestRateCurve._getMarketIndexOffset": {"401": [2330, 2354], "402": [2364, 2421], "403": [2431, 2498]}, "InterestRateCurve._getNetCashAmountsUnderlying": {"249": [23119, 23138], "250": [23385, 23479], "251": [23489, 23632], "252": [23643, 23695], "253": [23951, 24041], "254": [24757, 24828]}, "InterestRateCurve._getfCashInterestRateParams": {"321": [2855, 2900]}, "InterestRateCurve._setNewMarketState": {"265": [25509, 25580], "266": [25649, 25691], "267": [25890, 25940]}, "InterestRateCurve.calculateMaxRate": {"414": [3267, 3539]}, "InterestRateCurve.calculatefCashTrade": {"171": [19478, 19502], "172": [19806, 19822], "173": [20257, 20602], "174": [20704, 20720], "175": [20981, 21043], "176": [21057, 21125], "177": [21291, 21307], "178": [21641, 21657], "179": [21726, 21771], "180": [21792, 22026]}, "InterestRateCurve.getActiveInterestRateParameters": {"248": [7526, 7677]}, "InterestRateCurve.getInterestRate": {"260": [12804, 12833], "261": [13155, 13212], "262": [13341, 13462], "263": [13764, 14096], "264": [14341, 14679]}, "InterestRateCurve.getPostFeeInterestRate": {"322": [17699, 17728], "323": [17773, 17802], "324": [17945, 17998], "325": [18131, 18218]}, "InterestRateCurve.getPrimeCashInterestRateParameters": {"412": [8246, 8302]}, "InterestRateCurve.getfCashExchangeRate": {"232": [26592, 26643]}, "InterestRateCurve.getfCashUtilization": {"257": [12194, 12218], "258": [12228, 12261], "259": [12271, 12411]}, "InterestRateCurve.unpackInterestRateParams": {"404": [3844, 4008], "405": [4018, 4182], "406": [4192, 4257], "407": [4439, 4518], "408": [4528, 4607], "409": [4666, 4768], "410": [4778, 4887], "411": [4897, 4968]}, "InterestRateCurve.updateRateOracle": {"317": [10908, 10941], "318": [11116, 11139], "319": [11313, 11336], "320": [11713, 11870]}}, "97": {"Market._loadMarketStorage": {"308": [6307, 6332], "309": [6342, 6368], "310": [6378, 6422], "311": [6432, 6484], "312": [6494, 6548], "313": [6558, 6602], "314": [6612, 6670], "315": [6715, 6767], "316": [6798, 6823]}, "Market._setMarketStorage": {"181": [9066, 9124], "182": [9170, 9236], "183": [9286, 9353], "184": [9404, 9461], "185": [9507, 9579], "186": [9635, 9680], "187": [9690, 9743], "188": [9753, 9808], "189": [9818, 9863], "190": [9873, 9932]}, "Market.executeTrade": {"87": [3086, 3318], "88": [3563, 3816], "89": [3830, 3911], "90": [3926, 4085]}, "Market.getOracleRate": {"288": [5204, 5253], "289": [5264, 5492]}, "Market.loadMarket": {"167": [10441, 10658]}, "Market.loadMarketWithSettlementDate": {"246": [11138, 11218], "247": [11229, 11455]}}, "99": {"nTokenHandler.getNTokenContext": {"116": [1552, 1583], "117": [1593, 1658], "118": [1668, 1717], "119": [1727, 1770], "120": [1780, 1817]}, "nTokenHandler.nTokenAddress": {"115": [2088, 2112]}}}}, "dependencies": ["ABDKMath64x64", "AccountContextHandler", "AggregatorInterface", "AggregatorV2V3Interface", "AggregatorV3Interface", "AssetHandler", "BalanceHandler", "Bitmap", "BitmapAssetsHandler", "CErc20Interface", "CTokenInterface", "CashGroup", "CompoundHandler", "Constants", "DateTime", "Deployments", "Emitter", "ExternalLending", "FloatingPoint", "GenericToken", "IBeacon", "IEIP20NonStandard", "IERC20", "IPrimeCashHoldingsOracle", "IRewarder", "ITransferEmitter", "IUpgradeableBeacon", "Incentives", "InterestRateCurve", "LibStorage", "Market", "PortfolioHandler", "PrimeCashExchangeRate", "PrimeRateLib", "PrimeSupplyCap", "SafeInt256", "SafeUint256", "TokenHandler", "WETH9", "nTokenHandler", "nTokenSupply"], "deployedBytecode": "", "deployedSourceMap": "1203:16084:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3012:1125;;;;;;;;;;-1:-1:-1;3012:1125:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1949:561;;;;;;;;;;-1:-1:-1;1949:561:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4584:1374::-;;;;;;;;;;-1:-1:-1;4584:1374:35;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3012:1125::-;3194:6;3202:4;3218:36;3257:50;3290:16;3257:32;:50::i;:::-;3218:89;;3317:30;;:::i;:::-;3357:17;3384:21;;:::i;:::-;3429:15;3415:11;;;:29;3460:9;3455:633;3475:17;;;3455:633;;;3513:16;3579:159;3610:7;3635:9;3662:6;3686;;3693:1;3686:9;;;;;;;;;;;;;3713:1;:11;;;3579:13;:159::i;:::-;3554:1;:6;;3562:1;:13;;3543:195;;;;;;;;;;;;;;3769:196;3821:7;3846:16;3880:8;3906:14;3769:196;;3938:1;:13;;;3769:34;:196::i;:::-;3753:13;;;:212;3995:12;;:35;;;4028:1;4012;:13;;;:17;3995:35;4070:6;;4056:9;;;;3980:50;;-1:-1:-1;4056:21:35;;:9;:13;:21::i;:::-;4044:9;;;:33;-1:-1:-1;3494:3:35;;3455:633;;;-1:-1:-1;4106:9:35;;;;4117:12;;-1:-1:-1;3012:1125:35;-1:-1:-1;;;;;;;;3012:1125:35:o;1949:561::-;2059:19;2090:36;2129:44;2162:10;2129:32;:44::i;:::-;2090:83;;2183:30;;:::i;:::-;2223:25;2275:20;;;;2251:46;;;;;;;;2223:74;;2419:84;2443:5;2450:9;2461:6;2469:9;2480:15;2497:5;2419:23;:84::i;:::-;-1:-1:-1;2395:108:35;1949:561;-1:-1:-1;;;;;;;1949:561:35:o;4584:1374::-;4774:21;;:::i;:::-;4797:6;4815:36;4854:44;4887:10;4854:32;:44::i;:::-;4815:83;;4908:30;;:::i;:::-;4948:21;;:::i;:::-;4993:15;4979:11;;;:29;5024:9;5019:888;5039:17;;;5019:888;;;5077:25;5142:6;;5149:1;5142:9;;;;;;;;;;;;;5129:24;;5121:33;;5105:50;;;;;;;;5077:78;-1:-1:-1;5204:28:35;5191:9;:41;;;;;;;;;:105;;;-1:-1:-1;5265:31:35;5252:9;:44;;;;;;;;;5191:105;5170:679;;;5329:8;;;5170:679;5376:16;5446:183;5481:7;5510:9;5541:6;5569;;5576:1;5569:9;;;;;;;;;;;;;5600:1;:11;;;5446:13;:183::i;:::-;5429:13;;;5410:219;;;;;;;;-1:-1:-1;5648:186:35;;:14;;5693:10;;5410:219;;5494:1:76;;5648:23:35;:186::i;:::-;5170:679;5889:6;;5875:9;;;;:21;;:13;:21::i;:::-;5863:9;;;:33;-1:-1:-1;5058:3:35;;5019:888;;;-1:-1:-1;5941:9:35;;;5925:14;;5941:9;;-1:-1:-1;4584:1374:35;;-1:-1:-1;;;;;;;4584:1374:35:o;15734:264:93:-;15819:26;;:::i;:::-;15861;15890:47;15926:10;15890:35;:47::i;:::-;15861:76;;15954:37;15969:10;15981:9;15954:14;:37::i;:::-;15947:44;;;15734:264;;;;:::o;6509:1210:35:-;6745:16;;;;6901:20;;;;6877:46;;;;;;;;6849:74;-1:-1:-1;6950:38:35;6937:9;:51;;;;;;;;;6933:780;;;7042:91;7083:7;7092:9;7103;7114:5;7042:23;:91::i;:::-;7004:129;;-1:-1:-1;7004:129:35;-1:-1:-1;7004:129:35;-1:-1:-1;6933:780:35;;;7167:20;7154:9;:33;;;;;;;;;:72;;;-1:-1:-1;7204:22:35;7191:9;:35;;;;;;;;;7154:72;7150:563;;;7270:110;7311:7;7320:9;7331:6;7339:9;7350;7361:5;7270:23;:110::i;:::-;7242:138;;-1:-1:-1;7242:138:35;-1:-1:-1;7402:15:35;7394:51;;;;-1:-1:-1;;;7394:51:35;;;;;;;:::i;:::-;;;;;;;;;7648:6;:15;;;7637:26;;7150:563;6509:1210;;;;;;;;;;:::o;3383:2020:104:-;3566:6;3584:20;3607:36;3623:7;3632:10;3607:36;;:15;:36::i;:::-;3584:59;;3653:99;3755:35;:33;:35::i;:::-;-1:-1:-1;;;;;3834:14:104;;3800:31;3834:14;;;;;;;;;;;:26;;;;;;;;;;:36;;;;;;;;3653:137;;-1:-1:-1;3800:31:104;3913:56;3944:14;3861:8;3913:30;:56::i;:::-;3880:89;;;;3987:7;3979:16;;;;;;4055:29;:12;4077:6;4055:21;:29::i;:::-;4051:741;;;4193:18;;;;;;4168:43;;:22;4248:29;:8;4168:43;4248:12;:29::i;:::-;4225:52;;4312:24;:13;:22;:24::i;:::-;4291:45;;;;;;;-1:-1:-1;;;;;4291:45:104;-1:-1:-1;;;;;;4291:45:104;;;;;;4351:146;4422:7;4431:10;4443:8;4453:15;4470:13;4351:53;:146::i;:::-;4581:18;4577:106;;4634:34;:12;4654:6;4662:5;4634:19;:34::i;:::-;4619:49;;4577:106;4697:50;4713:7;4722:10;4697:50;;4734:12;4697:15;:50::i;:::-;4768:13;-1:-1:-1;4761:20:104;;-1:-1:-1;;;;;;4761:20:104;4051:741;4806:13;;4802:569;;4954:19;:8;:17;:19::i;:::-;4933:40;;;;;;;-1:-1:-1;;;;;4933:40:104;-1:-1:-1;;;;;;4933:40:104;;;;;;4988:245;5059:7;5084:10;5112:8;4933:18;5211:8;4988:53;:245::i;:::-;5263:33;:12;5283:6;5291:4;5263:19;:33::i;:::-;5248:48;;5310:50;5326:7;5335:10;5310:50;;5347:12;5310:15;:50::i;:::-;5388:8;5381:15;;;;;;;3383:2020;;;;;;;;:::o;1440:120:120:-;1529:5;;;1524:16;;;;1496:8;1545:6;;;1524:28;1516:37;;;;;;1440:120;;;;:::o;8227:1469:35:-;8508:17;;8612:25;;;;;;8699:59;:9;8720:6;8612:25;8508:17;8748:9;8699:20;:59::i;:::-;-1:-1:-1;;;;;8790:28:35;;;;;;-1:-1:-1;8896:22:35;8883:9;:35;;;;;;;;;8879:72;;;8934:17;:11;:15;:17::i;:::-;8920:31;;8879:72;8962:27;9035:167;9068:7;9089:9;9112:11;9137:30;9157:9;9137:6;:15;;;:19;;:30;;;;:::i;:::-;9035:6;;:167;;;9181:11;9035:19;:167::i;:::-;8999:203;;-1:-1:-1;8999:203:35;-1:-1:-1;9241:28:35;;;;;;9284:14;;9280:410;;9331:22;9318:9;:35;;;;;;;;;9314:366;;;9464:9;9441:19;:32;;9433:67;;;;-1:-1:-1;;;9433:67:35;;;;;;;:::i;:::-;9314:366;;;9629:9;9606:19;:32;;9598:67;;;;-1:-1:-1;;;9598:67:35;;;;;;;:::i;:::-;8227:1469;;;;;;;;;;;;:::o;3228:2070:105:-;3524:27;;3486:186;;3569:10;3597:8;3623:9;3650:8;3486:20;:186::i;:::-;3427:263;;;3683:7;;3427:263;3704:32;;;;:36;3700:296;;3756:11;3770:183;3808:14;:24;;;3850:10;3878:8;3904:9;3931:8;3770:20;:183::i;:::-;3756:197;;3971:6;3967:19;;;3979:7;;;3967:19;3700:296;;4160:40;4190:9;4160:29;:40::i;:::-;4156:152;;;4236:1;4224:8;:13;;4216:22;;;;;;-1:-1:-1;;4325:27:105;;;;;:58;;-1:-1:-1;4368:15:105;4356:27;;;4325:58;4317:67;;;;;;4534:14;:24;;;:31;4498:14;:32;;;:67;4494:171;;;4608:46;4629:14;:24;;;4608:20;:46::i;:::-;4581:24;;;:73;4494:171;4935:30;4968:14;:24;;;4993:14;:32;;;4968:58;;;;;;;;;;;;;;;;;;;5036:32;;;;;5078:17;;;:28;;;5116:18;;;;:30;;;5156:17;;;:28;;;-1:-1:-1;5194:21:105;;;;:50;;;;5254:32;;:37;;5290:1;5254:37;;;-1:-1:-1;3228:2070:105;;;;;;:::o;16345:200:102:-;16428:16;;:::i;:::-;16463:75;16510:10;16522:15;16463:46;:75::i;14775:487:93:-;14877:26;;:::i;:::-;14920:12;14935:37;14961:10;14935:37;;:25;:37::i;:::-;15066:189;;;;;;;;;;;;;;;15013:22;;;15066:189;;;;;;;;;;-1:-1:-1;;15066:189:93;;;;;14775:487::o;10281:4207:35:-;10490:7;;;10581:38;10614:3;10596:21;;;10581:38;10691:3;10673:21;;;10629:67;;10714:20;;;10706:49;;;;-1:-1:-1;;;10706:49:35;;;;;;;:::i;:::-;10924:77;10955:9;:24;;;10981:8;10991:9;10924:30;:77::i;:::-;10923:78;10902:151;;;;-1:-1:-1;;;10902:151:35;;;;;;;:::i;:::-;11064:21;11088:49;11116:9;:20;;;11088:49;;:27;:49::i;:::-;11064:73;;11251:27;11328:17;11358:45;11389:13;11358:30;:45::i;:::-;11174:229;;;;;;;12101:140;12160:10;6916:1:76;12160:51:35;;;;;;;;;12101:19;;12216:7;12160:51;;12146:77;12101:23;:140::i;:::-;12073:9;:168;12052:238;;;;-1:-1:-1;;;12052:238:35;;;;;;;:::i;:::-;12301:15;12331:84;12369:13;12384:9;:20;;;12331:84;;12406:8;12331:37;:84::i;:::-;12301:114;;12525:1;12514:8;:12;:41;;;;;12554:1;12530:21;:25;12514:41;12510:575;;;12678:8;12654:21;:32;12650:70;;;12712:8;12688:32;;12650:70;12510:575;;;12752:1;12741:8;:12;:41;;;;;12781:1;12757:21;:25;12741:41;12737:348;;;12905:8;12881:21;:32;12877:70;;;12939:8;12915:32;;12737:348;;;13050:24;;-1:-1:-1;;;13050:24:35;;;;;;;:::i;12737:348::-;13307:25;13347:187;13391:9;13418:8;13444:9;13471:21;13510:10;13347:26;:187::i;:::-;13307:227;;13644:119;13687:9;13698:13;13713:9;:20;;;13735:18;13644:29;:119::i;:::-;14050:128;14089:13;14104:9;14115;:20;;;14137:8;14147:21;14050:25;:128::i;:::-;14189:215;14225:13;14252:9;:20;;;14286:8;14308:19;14341:21;14376:18;14189:22;:215::i;:::-;14423:8;14433:24;:18;:22;:24::i;:::-;14415:66;;;;-1:-1:-1;14459:21:35;;-1:-1:-1;10281:4207:35;;-1:-1:-1;;;;;;;;;;;10281:4207:35:o;1024:266:104:-;1109:20;1141:61;1205:35;:33;:35::i;:::-;-1:-1:-1;;;;;1257:14:104;;;;;;;;;;;;;;:26;;;;;;;;;-1:-1:-1;;1024:266:104;;;;:::o;6520:269:78:-;6585:87;6688:12;6703:39;6719:22;6703:15;:39::i;3973:2699:94:-;4088:7;4097:4;4117:21;4141:22;4153:9;4141:11;:22::i;:::-;4117:46;-1:-1:-1;2982:5:76;4231:8:94;:24;:29;4227:52;;4270:1;4273:5;4262:17;;;;;;;4227:52;4352:8;4335:13;:25;4331:48;;4370:1;4373:5;4362:17;;;;;;;4331:48;2982:5:76;4504:24:94;;;4503:42;3567:2:76;4628:38:94;;4624:1887;;4690:10;-1:-1:-1;4702:4:94;;-1:-1:-1;4682:25:94;;-1:-1:-1;4682:25:94;4624:1887;3619:3:76;4728:10:94;:39;4724:1787;;5040:20;2982:5:76;3103:7;5160:30:94;;5159:68;5079:148;;-1:-1:-1;;5079:148:94;;-1:-1:-1;3359:1:76;5079:148:94;5476:37;3840:2:76;5448:65:94;3359:1:76;5532:12:94;:37;;;;;;5574:1;5531:44;5254:335;;;;;;;;;4724:1787;3673:4:76;5610:10:94;:40;5606:905;;5666:20;2982:5:76;3150:8;5787:31:94;;5786:69;5705:150;;-1:-1:-1;;5705:150:94;;-1:-1:-1;3408:2:76;5705:150:94;5924:38;3893:3:76;5895:67:94;3408:2:76;5981:12:94;:38;;;;5606:905;3730:4:76;6060:10:94;:42;6056:455;;6118:20;2982:5:76;3200:9;6240:33:94;;6239:71;6157:153;;-1:-1:-1;;6157:153:94;;-1:-1:-1;3460:2:76;6157:153:94;6381:40;3949:3:76;6350:71:94;3460:2:76;6440:12:94;:40;;;;6056:455;6654:3;6659:5;6646:19;;;;;;3973:2699;;;;;;:::o;715:234:118:-;787:4;820:1;811:5;:10;;:26;;;;;834:3;825:5;:12;;811:26;803:35;;;;;;-1:-1:-1;;;897:9:118;886:21;-1:-1:-1;;;885:39:118;;;884:58;;715:234::o;3098:197:120:-;3149:6;-1:-1:-1;;;;;;3176:29:120;-1:-1:-1;3176:29:120;;;:62;;-1:-1:-1;;;;;;3209:29:120;;;3176:62;3167:72;;;;;;-1:-1:-1;3286:1:120;3098:197::o;17615:1780:101:-;17827:20;17850:46;:18;17879:16;17850:28;:46::i;:::-;17827:69;-1:-1:-1;17910:18:101;17906:31;;17930:7;;;17906:31;17947:75;18025:41;:39;:41::i;:::-;18146:17;;;18119:16;18146:17;;;;;;;;;;;:27;;;;;;;;:42;17947:119;;-1:-1:-1;;;;;;18146:42:101;;;18138:51;;;18374:28;18138:51;18388:13;18374;:28::i;:::-;18352:50;;18436:1;18420:12;:17;;18412:26;;;;;;18493:38;:27;:18;:12;:16;:18::i;:::-;:25;:27::i;:::-;:36;:38::i;:::-;18448:17;;;;;;;;;;;;;;;:27;;;;;;;;:83;;-1:-1:-1;;18448:83:101;-1:-1:-1;;;;;18448:83:101;;;;;;;;;;19310:78;19343:7;18448:17;:27;19374:13;19310:32;:78::i;:::-;17615:1780;;;;;;;;;:::o;299:372:118:-;411:7;447:1;438:5;:10;;:26;;;;;461:3;452:5;:12;;438:26;430:35;;;;;;509:5;505:160;;;-1:-1:-1;;;;;;565:9:118;;547:28;537:39;;530:46;;505:160;-1:-1:-1;;;;;;643:9:118;;625:28;623:31;614:40;;505:160;299:372;;;;;:::o;1296:386:104:-;2798:2:76;1437:27:104;:12;:25;:27::i;:::-;:58;;1429:86;;;;-1:-1:-1;;;1429:86:104;;;;;;;:::i;:::-;1525:61;1589:35;:33;:35::i;:::-;-1:-1:-1;;;;;1634:14:104;;;;;;;;;;;;;;;:26;;;;;;;-1:-1:-1;1634:26:104;;:41;1296:386::o;5076:627:93:-;5310:11;5305:1;:16;;:59;;;;;5340:9;:24;;;5325:11;:39;;5305:59;5297:86;;;;-1:-1:-1;;;5297:86:93;;;;;;;:::i;:::-;5393:16;5424:79;5465:37;5490:11;5465:24;:37::i;:::-;5424:36;5450:9;5424:25;:36::i;:::-;:40;;:79::i;:::-;5393:110;;5514:182;5545:9;:20;;;5514:182;;5579:8;5601:9;5624:14;5652:34;5676:9;5652:23;:34::i;:::-;5514:6;;:182;;;;:17;:182::i;:::-;5076:627;;;;;;:::o;1566:90:120:-;1612:8;1639:10;-1:-1:-1;;1647:1:120;1639:3;:10::i;784:121:121:-;842:7;874:1;869;:6;;861:15;;;;;;-1:-1:-1;893:5:121;;;784:121::o;2739:1363:97:-;2988:19;3009:27;3048:28;3147:171;3198:6;3218:9;3241:14;3269;3297:11;3147:37;:171::i;:::-;3086:232;;-1:-1:-1;3086:232:97;;-1:-1:-1;3086:232:97;-1:-1:-1;3446:17:97;;3442:654;;3479:35;3517:32;3542:6;3517:24;:32::i;:::-;3479:70;;3563:253;3598:13;3629:6;:17;;;3664:6;:21;;;3703:6;:22;;;3743:6;:17;;;3778:6;:24;;;3563:17;:253::i;:::-;3867:20;;3830:81;;3889:21;3830:36;:81::i;:::-;3926:159;3972:7;3981:9;:20;;;4003:6;:15;;;4020:14;4036:12;4050:21;3926:28;:159::i;:::-;3442:654;;2739:1363;;;;;;;;;;:::o;1424:1464:105:-;1631:4;;1647:1212;1671:10;:17;1667:1;:21;1647:1212;;;1709:27;1739:10;1750:1;1739:13;;;;;;;;;;;;;;1709:43;;1806:9;1787:5;:15;;;:28;;:78;;;;1855:10;1835:30;;:5;:16;;;:30;;;;1787:78;:124;;;;1903:8;1885:5;:14;;;:26;;1787:124;1766:168;;;1926:8;;;1766:168;2132:24;2110:5;:18;;;:46;;;;;;;;;;:120;;;;-1:-1:-1;2198:32:105;2176:5;:18;;;:54;;;;;;;;;;2110:120;2085:159;;;;;;2322:14;;;;2301:18;;2322:28;;2341:8;2322:18;:28::i;:::-;2301:49;;2430:40;2460:9;2430:29;:40::i;:::-;2426:163;;;2513:1;2498:11;:16;;2490:25;;;;;;-1:-1:-1;;2611:30:105;;;;;:64;;-1:-1:-1;2660:15:105;2645:30;;;2611:64;2603:73;;;;;;2735:14;;;:28;2798:24;2777:18;;;;:45;;;2798:24;-1:-1:-1;2837:11:105;;-1:-1:-1;2837:11:105;1647:1212;1690:3;;1647:1212;;;-1:-1:-1;2876:5:105;;1424:1464;-1:-1:-1;;;;;;1424:1464:105:o;836:222:109:-;904:4;5641:1:76;939:48:109;;;;;:112;;-1:-1:-1;;5700:1:76;-1:-1:-1;1003:48:109;;836:222::o;5439:648:105:-;5550:23;5788:17;5808:9;:16;5828:1;5808:21;:48;;5836:9;:16;5855:1;5836:20;5808:48;;;5832:1;5808:48;5788:68;;5866:37;5927:9;5906:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;5866:71;;5952:9;5947:103;5971:9;:16;5967:1;:20;5947:103;;;6027:9;6037:1;6027:12;;;;;;;;;;;;;;6008:13;6022:1;6008:16;;;;;;;;;;;;;;;;;:31;5989:3;;5947:103;;;-1:-1:-1;6067:13:105;5439:648;-1:-1:-1;;;5439:648:105:o;27850:1073:101:-;27962:21;;:::i;:::-;27995:31;28029;28049:10;28029:19;:31::i;:::-;27995:65;;28155:9;28130:7;:22;;;:34;28126:528;;;28180:28;28222:30;28255:38;28282:10;28255:26;:38::i;:::-;28222:71;;28341:109;28382:10;28394:7;28403:22;28427:9;28341:23;:109::i;:::-;28307:143;;-1:-1:-1;28307:143:101;-1:-1:-1;28464:71:101;28493:10;28307:143;;28464:28;:71::i;:::-;28126:528;;;;;28574:22;;:35;;28566:44;;;;;;28671:245;;;;;;;;28709:58;:50;28734:7;:24;;;28709:7;:20;;;:24;;:50;;;;:::i;:::-;:56;:58::i;:::-;28671:245;;;;28793:56;:48;28816:7;:24;;;28793:7;:18;;;:22;;:48;;;;:::i;:56::-;28671:245;;;;28881:7;:24;;;28671:245;;;28664:252;;27850:1073;;;;;:::o;10558:218:93:-;10635:12;10659:41;10703:32;:30;:32::i;:::-;10752:17;;;;;;-1:-1:-1;;10752:17:93;;;;;10558:218::o;1516:609:94:-;1661:4;1702:1;1685:14;:18;1677:52;;;;-1:-1:-1;;;1677:52:94;;;;;;;:::i;:::-;2606:1:76;1747:14:94;:51;;1739:86;;;;-1:-1:-1;;;1739:86:94;;;;;;;:::i;:::-;3200:9:76;1840:8:94;:28;:33;1836:51;;-1:-1:-1;1882:5:94;1875:12;;1836:51;1897:12;1912:36;1938:9;1912:25;:36::i;:::-;1897:51;-1:-1:-1;1976:1:94;1959:137;1984:14;1979:1;:19;1959:137;;2035:37;2044:27;2069:1;2044:24;:27::i;:::-;2035:4;;:8;:37::i;:::-;2023:8;:49;2019:66;;;2081:4;2074:11;;;;;;2019:66;2000:3;;1959:137;;;-1:-1:-1;2113:5:94;;1516:609;-1:-1:-1;;;;;1516:609:94:o;1900:219:99:-;1966:20;1998:41;2042:36;:34;:36::i;:::-;2095:17;;;;;;-1:-1:-1;;2095:17:99;;;;-1:-1:-1;;;;;2095:17:99;;1900:219::o;1087:737::-;1195:17;1226:35;1275:27;1316:22;1352:17;1394:47;1444:36;:34;:36::i;:::-;-1:-1:-1;;;;;1522:19:99;;;1490:29;1522:19;;;;;;;;-1:-1:-1;;1522:19:99;;;;1565:18;;;;;1623:35;;;;;;;-1:-1:-1;1690:27:99;;;;;-1:-1:-1;1746:24:99;-1:-1:-1;;;1746:24:99;;;;-1:-1:-1;;;;1793:24:99;;;;;;-1:-1:-1;1087:737:99:o;369:144:121:-;427:7;458:5;;;481:6;;;;473:15;;;;;1688:368:104;1823:15;1850:99;1952:35;:33;:35::i;:::-;-1:-1:-1;;;;;2004:14:104;;;;;;;;;;;;;;:26;;;;;;;;:36;;;;;;;:45;;;;;1997:52;;;-1:-1:-1;;1688:368:104;;;;;:::o;14584:1612:35:-;14803:6;;14842:50;:9;14872:8;14882:9;14842:29;:50::i;:::-;14821:71;-1:-1:-1;7032:1:76;15038:49:35;;;4771:16:76;15024:110:35;14984:25;15149:15;;15145:698;;;15356:33;:10;15371:17;15356:14;:33::i;:::-;15343:46;;15145:698;;;15423:17;15410:10;:30;15406:437;;;15652:33;:10;15667:17;15652:14;:33::i;15406:437::-;15831:1;15818:14;;15406:437;15853:19;15887:75;15926:10;15938:23;:8;15951:9;15938:12;:23::i;:::-;15887:38;:75::i;:::-;15853:109;-1:-1:-1;16102:87:35;16144:44;:11;15853:109;16144:30;:44::i;:::-;16102:19;;;;;:41;:87::i;:::-;16083:106;14584:1612;-1:-1:-1;;;;;;;;;14584:1612:35:o;13196:478:83:-;13331:26;13377:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13377:47:83;;-1:-1:-1;13545:21:83;;13541:50;;;13588:2;;13582:4;13541:50;13601:9;-1:-1:-1;;;;;13601:22:83;;13624:4;13630:2;13642:23;:17;:21;:23::i;:::-;13601:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7997:551;8139:11;8135:24;;8152:7;;8135:24;8168:10;8181:33;8193:10;8205:8;8181:11;:33::i;:::-;8168:46;;8436:1;8427:6;:10;8423:39;;;8453:2;;8457:4;8423:39;-1:-1:-1;;;;;8478:63:83;;;;;;8493:10;8478:63;8515:2;8527:12;:6;:10;:12::i;:::-;8478:63;;;;;;;:::i;:::-;;;;;;;;7997:551;;;;;;:::o;16202:1083:35:-;16452:20;16475:236;16523:13;16550:10;16574:8;16596:19;16629:27;:21;:25;:27::i;:::-;16475:34;:236::i;:::-;16452:259;;16842:1;16818:21;:25;:47;;;;;16864:1;16847:13;:18;;16818:47;16817:114;;;;16907:1;16883:21;:25;:47;;;;;16929:1;16912:13;:18;;16883:47;16796:145;;;;;;16952:24;16979:64;17017:13;17032:10;16979:37;:64::i;:::-;16952:91;-1:-1:-1;17073:41:35;16952:91;17095:18;17073:21;:41::i;:::-;17053:61;;17191:87;17233:13;17248:10;17260:17;17191:41;:87::i;:::-;16202:1083;;;;;;;;:::o;6170:243:78:-;6235:61;6312:12;6327:39;6343:22;15738:329;15830:12;490:7;16030:9;16022:18;;;;;;;;:38;;15738:329;-1:-1:-1;;15738:329:78:o;603:160:94:-;661:7;2982:5:76;688:4:94;:21;;680:30;;;;;;2982:5:76;735:4:94;:20;;727:29;;;;603:160;-1:-1:-1;603:160:94:o;3647:1015:120:-;3715:6;3790:3;3781:5;:12;:40;;;;3807:1;3798:5;:10;;:22;;;;;3819:1;3812:3;:8;;3798:22;3777:54;;;-1:-1:-1;3830:1:120;3823:8;;3777:54;3854:1;3845:5;:10;;:21;;;;;3863:3;3859:1;:7;3845:21;3841:754;;;-1:-1:-1;4047:5:120;4040:12;;3841:754;4080:1;4073:3;:8;;:21;;;;;4089:5;4085:1;:9;4073:21;4069:526;;;4278:8;4282:3;4278;:8::i;:::-;4271:15;;;;4069:526;4316:1;4307:5;:10;;:22;;;;;4328:1;4321:3;:8;;4307:22;4303:292;;;4569:15;4573:5;4580:3;4569;:15::i;13605:278:78:-;13677:75;13769:12;13784:52;13800:35;13784:15;:52::i;1280:154:120:-;1403:5;;;1398:16;;;;1336:8;1419:6;;;1398:28;1390:37;;;;;2410:117;2459:7;2491:1;2486;:6;;2478:15;;;;;4181:133:121;4233:6;-1:-1:-1;;;;;4259:21:121;;;4251:30;;;;;7493:440:83;7637:20;7659:23;7686:47;7697:10;7709:8;7719:13;7686:10;:47::i;:::-;7636:97;;;;7743:12;7757:10;7797:1;7781:13;:17;7777:75;;;7807:7;7800:14;;7777:75;;;-1:-1:-1;7845:7:83;7777:75;7910:2;-1:-1:-1;;;;;7878:48:83;7904:4;-1:-1:-1;;;;;7878:48:83;7892:10;-1:-1:-1;;;;;7878:48:83;;7914:3;7919:6;7878:48;;;;;;;:::i;:::-;;;;;;;;7493:440;;;;;;;;:::o;996:838:118:-;1198:1;1193:6;;;1202:66;1193:75;;;1118:70;;1117:152;1364:1;1359:6;;;1368:66;1359:75;;;1284:70;;1283:152;1530:1;1525:6;;;1454:66;1450:70;;;;1449:83;1627:1;1622:6;;;1631:66;1622:75;;;1547:70;;1546:152;1722:2;1717:7;;;1712:13;1749:2;1744:7;;;1739:13;1777:2;1772:7;;;1766:14;1816:3;1811:8;;;1822:4;1811:15;;;1798:8;;1797:30;;996:838::o;948:470:94:-;1011:7;1034:5;1043:1;1034:10;1030:40;;;-1:-1:-1;3200:9:76;1046:24:94;;1030:40;1084:5;1093:1;1084:10;1080:44;;;-1:-1:-1;1103:21:94;1096:28;;1080:44;1138:5;1147:1;1138:10;1134:37;;;-1:-1:-1;3248:11:76;1150:21:94;;1134:37;1185:5;1194:1;1185:10;1181:41;;;-1:-1:-1;1204:18:94;1197:25;;1181:41;1236:5;1245:1;1236:10;1232:41;;;-1:-1:-1;1255:18:94;1248:25;;1232:41;1287:5;1296:1;1287:10;1283:42;;;-1:-1:-1;1306:19:94;1299:26;;1283:42;1339:5;1348:1;1339:10;1335:42;;;-1:-1:-1;1358:19:94;1351:26;;1335:42;1388:23;;-1:-1:-1;;;1388:23:94;;;;;;;:::i;350:193::-;418:7;3200:9:76;445:30:94;;;437:39;;;;;;3200:9:76;506::94;:29;;4759:311:93;4994:14;;;2847:3:76;1642:1:93;4994:41;;;;4972:66;;:91;;4759:311::o;10056:609:97:-;10350:22;3200:9:76;10375:36:97;10401:9;10375:25;:36::i;:::-;:56;10350:81;;10441:217;10483:6;10503:10;10527:8;10549:9;10572:14;10600:20;10634:14;10441:28;:217::i;:::-;10056:609;;;;;;;:::o;411:190:120:-;491:5;;;-1:-1:-1;;510:7:120;;506:88;;;528:6;;;:20;;;547:1;542;538;:5;;;;;;:10;528:20;519:30;;;;;;506:88;;;573:6;;;:20;;;592:1;587;583;:5;;;;;;:10;573:20;564:30;;;;;19096:2937:96;19332:28;19362:25;19389:27;19500:1;19486:11;:15;19478:24;;;;;;19790:14;19769:6;:17;;;:35;19765:57;;-1:-1:-1;19814:1:96;;-1:-1:-1;19814:1:96;;-1:-1:-1;19814:1:96;19806:16;;19765:57;19833:38;19874:66;19906:9;:20;;;19928:11;19874:31;:66::i;:::-;19833:107;;19950:26;19979:62;20019:6;:21;;;19979:9;:19;;;:39;;:62;;;;:::i;:::-;19950:91;;20141:29;20180:28;20218:29;20410:192;20452:8;20474:6;20494:9;20517:19;20550:14;20578;20410:28;:192::i;:::-;20257:345;-1:-1:-1;20257:345:96;;-1:-1:-1;20257:345:96;-1:-1:-1;20257:345:96;-1:-1:-1;20675:27:96;20671:49;;20712:1;20715;20718;20704:16;;;;;;;;;;;;;20671:49;21001:17;;;;:42;;21028:14;21001:26;:42::i;:::-;20981:17;;;:62;21079:46;:19;21103:21;21079:23;:46::i;:::-;21057:68;;21140:19;21162:62;21182:1;21185:6;:17;;;21204:19;21162;:62::i;:::-;21140:84;;4071:3:76;21242:11:96;:47;21238:69;;;21299:1;21302;21305;21291:16;;;;;;;;;;;;;;21238:69;21322:28;21353:38;21369:8;21379:11;21353:15;:38::i;:::-;21322:69;-1:-1:-1;21614:25:96;21610:47;;21649:1;21652;21655;21641:16;;;;;;;;;;;;;;;21610:47;21726:22;;;:45;-1:-1:-1;21890:19:96;;;;21838:188;;21726:6;;21923:22;21959:21;21994:22;21838:18;:188::i;:::-;21792:234;;-1:-1:-1;21792:234:96;-1:-1:-1;;;;;;19096:2937:96;;;;;;;;;;:::o;6846:257:97:-;7010:18;;7047:50::o;8816:1123::-;9088:1;9074:10;:15;;:49;;;;-1:-1:-1;;;;;;9093:30:97;;;9074:49;9066:58;;;;;;9196:1;9178:14;:19;;:57;;;;-1:-1:-1;;;;;;9201:34:97;;;9178:57;9170:66;;;;;;9298:15;9294:1;:19;:58;;;;-1:-1:-1;9336:16:97;9317:35;;;9294:58;9286:67;;;;;;9416:10;9412:1;:14;:48;;;;-1:-1:-1;9444:16:97;9430:30;;;9412:48;9404:57;;;;;;9562:16;9541:37;;;9507:72;;;;;;9635:45;;-1:-1:-1;;9635:45:97;-1:-1:-1;;;;;9635:45:97;;;;-1:-1:-1;;;;9690:53:97;-1:-1:-1;;;9690:53:97;;;;;;;;;;;;-1:-1:-1;;;;9753:55:97;-1:-1:-1;;;9753:55:97;;;;;;-1:-1:-1;;;;9818:45:97;-1:-1:-1;;;9818:45:97;;;;;;;;;;;-1:-1:-1;;;;;9873:59:97;-1:-1:-1;;;9873:59:97;;;;;;;;8816:1123::o;15273:369:84:-;15369:1;15362:3;:8;;15354:17;;;;;;15428:19;15450:57;1172:42:76;15496:10:84;15450:22;:57::i;:::-;15428:79;-1:-1:-1;15532:21:84;15428:79;15549:3;15532:16;:21::i;:::-;15517:36;;15563:72;1172:42:76;15610:10:84;15622:12;15563:23;:72::i;:::-;15273:369;;;:::o;11248:1511:83:-;11472:26;11518:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11518:47:83;;-1:-1:-1;11593:36:83;:34;:36::i;:::-;:48;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11593:48:83;;-1:-1:-1;12266:32:83;:13;12284;12266:17;:32::i;:::-;12241:57;;12308:9;-1:-1:-1;;;;;12308:33:83;;12342:7;12351:6;12359:15;12376:22;:13;:20;:22::i;:::-;12308:91;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12680:72;12698:6;12706:7;12715:10;12727:8;12737:14;12680:17;:72::i;1663:662:101:-;1748:25;;:::i;:::-;1785:33;1821:32;:30;:32::i;:::-;:44;;;;;;;;;;;;;;;;;1894:16;;;;;1875:35;;1941:18;;;-1:-1:-1;;;;;1941:18:101;;;1920;;;:39;;;;1894:16;1988;;;;;1969;;;:35;;;;-1:-1:-1;;;2035:18:101;;;;2014;;;:39;-1:-1:-1;;;2092:26:101;;;;;;2063;;;:55;2149:18;;;-1:-1:-1;;;;;2149:18:101;;;2128;;;:39;-1:-1:-1;;;2194:14:101;;;;2177;;;:31;-1:-1:-1;;;2233:12:101;;;2218;;;:27;-1:-1:-1;;;2280:26:101;;;;2309:9;2280:38;2255:63;;;1894:16;2255:22;;:63;1875:35;:1;-1:-1:-1;1663:662:101:o;4438:255::-;4511:7;4538:25;4567:38;4594:10;4567:26;:38::i;:::-;-1:-1:-1;;;;;4567:83:101;;:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4530:122;4438:255;-1:-1:-1;;;;4438:255:101:o;24613:2042::-;24807:23;;:::i;:::-;24832:7;24851:28;24889:24;25062:48;25081:10;25093:9;25104:5;25062:18;:48::i;:::-;24967:18;;;24923:187;;;;24937:16;;;24923:187;;;;25280:22;;;;24923:187;;-1:-1:-1;24923:187:101;-1:-1:-1;25280:48:101;;24923:187;25280:26;:48::i;:::-;25255:22;;;:73;25867:30;;;;25818;;25867:34;25863:422;;26239:30;;;;26138:132;;:58;:22;26239:30;26138:26;:58::i;:::-;:100;;:132::i;:::-;26113:157;;25863:422;26324:116;26385:54;4160:4:76;26416:22:101;26385:30;:54::i;:::-;26324:22;;;;;:60;:116::i;:::-;26299:22;;;:141;-1:-1:-1;;26454:30:101;;;:55;;;;-1:-1:-1;;26569:32:101;;26299:22;;26627:20;;-1:-1:-1;24613:2042:101:o;10176:1240::-;10338:33;10374:32;:30;:32::i;:::-;:44;10407:10;10374:44;;;;;;;;;;;;;10338:80;;10447:27;:1;:16;;;:25;:27::i;:::-;10428:46;;-1:-1:-1;;10428:46:101;;;;;;;;;10505:18;;;;:29;;:27;:29::i;:::-;10484:18;;;:50;;-1:-1:-1;;10484:50:101;-1:-1:-1;;;;;10484:50:101;;;;;;;;;;10561:14;;;;:25;;:23;:25::i;:::-;10544:1;:14;;;:42;;;;;-1:-1:-1;;;;;10544:42:101;;;;;-1:-1:-1;;;;;10544:42:101;;;;;;10611:23;:1;:12;;;:21;:23::i;:::-;10596:1;:12;;;:38;;;;;-1:-1:-1;;;;;10596:38:101;;;;;-1:-1:-1;;;;;10596:38:101;;;;;;10735:29;:1;:18;;;:27;:29::i;:::-;10714:50;;-1:-1:-1;;;;;10714:50:101;;;;;;-1:-1:-1;;10714:50:101;;;;;;10793:16;;;;:27;;:25;:27::i;:::-;10774:16;;;:46;;-1:-1:-1;;10774:46:101;-1:-1:-1;;;;;10774:46:101;;;;;;;;;;10859:26;;;;:37;;:35;:37::i;:::-;10830:66;;-1:-1:-1;;;;;10830:66:101;;;;-1:-1:-1;;;10830:66:101;-1:-1:-1;;;;10830:66:101;;;;;;10927:18;;;;:29;;:27;:29::i;:::-;10906:50;;;;;;;-1:-1:-1;;;10906:50:101;-1:-1:-1;;;;10906:50:101;;;;;;11018:24;;11014:272;;11058:18;11079:28;:20;:26;:28::i;:::-;11058:49;;11121:61;11158:10;11170:11;11121:36;:61::i;:::-;11196:79;1172:42:76;11251:10:101;11263:11;11196:31;:79::i;:::-;11014:272;;11339:10;11301:108;;;11351:1;:18;;;11371:1;:14;;;11387:1;:12;;;11301:108;;;;;;;;:::i;:::-;;;;;;;;10176:1240;;;;:::o;1152:178:121:-;1210:7;1233:6;1229:20;;-1:-1:-1;1248:1:121;1241:8;;1229:20;1271:5;;;1275:1;1271;:5;:1;1294:5;;;;;:10;1286:19;;;;;4888:163;4937:6;-1:-1:-1;;;;;4964:1:121;:30;;4955:40;;;;;5532:217:78;5594:41;5651:12;5666:36;5682:19;5666:15;:36::i;3301:225::-;3367:41;3424:12;3439:40;3455:23;3439:15;:40::i;3008:232::-;3074:47;3138:12;3153:40;3169:23;3153:15;:40::i;8808:1744:93:-;8965:18;8996:19;9017:18;9051:70;9075:9;:24;;;9101:8;9111:9;9051:23;:70::i;:::-;8995:126;;;;9131:18;9152:34;9176:9;9152:23;:34::i;:::-;9131:55;;9202:13;9197:1349;;9265:20;;9244:75;;;;9287:8;9297:10;9309:9;9244:20;:75::i;:::-;9231:88;;9197:1349;;;9350:21;9374:36;9400:9;9374:25;:36::i;:::-;9350:60;;9525:20;9548:56;9566:37;9591:11;9566:24;:37::i;9548:56::-;9525:79;;9618:16;9653:79;9674:9;:20;;;9653:79;;9696:12;9710:10;9722:9;9653:20;:79::i;:::-;9618:114;;9747:17;9778:21;9817:11;9832:1;9817:16;9813:614;;;-1:-1:-1;;9993:19:93;;;;;:36;;9954:9;9813:614;;;10143:60;10161:41;10200:1;10186:11;:15;10161:24;:41::i;:::-;10143:13;;:17;:60::i;:::-;10127:76;;10234:178;10276:9;:20;;;10234:178;;10318:13;10353:10;10385:9;10234:20;:178::i;:::-;10222:190;;9813:614;10454:81;10476:13;10491:12;10505:9;10516:8;10526;10454:21;:81::i;:::-;10441:94;;9197:1349;;;;;;8808:1744;;;;;;;;:::o;26073:577:96:-;26194:19;;26255:76;26278:52;3248:11:76;26278:32:96;:12;26295:14;26278:16;:32::i;:::-;:36;;:52::i;:::-;26255:22;:76::i;:::-;26225:106;;26341:21;26365:59;26383:8;-1:-1:-1;;;26365:17:96;:59::i;:::-;26341:83;;26434:16;26453:33;26471:14;26453:17;:33::i;:::-;26434:52;;26496:22;26521:60;26539:9;-1:-1:-1;;;26521:17:96;:60::i;:::-;26496:85;;26607:36;26627:15;26607:19;:36::i;:::-;26592:51;;;26073:577;-1:-1:-1;;;;;;;26073:577:96:o;2040:143:120:-;2111:6;2136:40;2140:32;2144:1;4071:3:76;2140::120;:32::i;:::-;2174:1;2136:3;:40::i;14980:317:102:-;15198:15;;15103:6;;;;15137:77;;:56;:17;4251:4:76;15137:21:102;:56::i;:::-;:60;;:77::i;:::-;15121:93;;15251:1;15231:17;:21;:59;;15284:6;15231:59;;;15255:26;15270:6;-1:-1:-1;;15255:14:102;:26::i;13955:225:78:-;14021:41;14079:12;14094:39;14110:22;14094:15;:39::i;1662:118:120:-;1708:6;1734:1;1730;:5;1726:47;;;1744:6;1748:1;1744:3;:6::i;:::-;1737:13;;;;1726:47;-1:-1:-1;1772:1:120;1765:8;;6221:322:83;6353:47;2786:2;6353:47;;;;2729:1;6417:36;;;6352:102;5494:1:76;6352:174:83;6221:322;;;;:::o;16666:483:84:-;16779:18;16809:68;16880:30;:28;:30::i;:::-;-1:-1:-1;;;;;16960:14:84;;16920:37;16960:14;;;;;;;;;;;:26;;;;;;;;;;17010;;-1:-1:-1;;;17010:26:84;;;;;;16996:40;;;-1:-1:-1;16809:101:84;;-1:-1:-1;17125:16:84;;;17117:25;;;;;;16666:483;;;;;;:::o;14523:217::-;14670:63;14694:13;14709:10;14721:11;14670:23;:63::i;6842:490:83:-;7019:16;;;7033:1;7019:16;;;6950;7019;;;;;;6950;;6996:20;;7019:16;;;;;;;;;;;;-1:-1:-1;7019:16:83;6996:39;;7045:10;7058:33;7070:10;7082:8;7058:11;:33::i;:::-;7045:46;;7110:2;7101:3;7105:1;7101:6;;;;;;;;;;;;;:11;;;;;2961:7;7131:2;:24;7122:3;7126:1;7122:6;;;;;;;;;;;;;;;;;:33;7192:16;;;7206:1;7192:16;;;;;;;;;7166:23;;7192:16;;;;;;;;;;;;-1:-1:-1;7192:16:83;7166:42;;7238:12;:6;:10;:12::i;:::-;7218:6;7225:1;7218:9;;;;;;;;;;;;;:33;;;;;7281:12;:6;:10;:12::i;:::-;7261:6;7268:1;7261:9;;;;;;;;;;;;;;;;;:33;7313:3;;-1:-1:-1;7318:6:83;;-1:-1:-1;;6842:490:83;;;;;;;:::o;10850:612:97:-;11138:80;11157:6;11165:10;11177:8;11187:14;11203;11138:18;:80::i;:::-;11249:206;11297:6;:24;;;11335:6;:22;;;11371:6;:17;;;11402:20;11436:9;11249:34;:206::i;:::-;11229:17;;;;:226;;;;-1:-1:-1;;;;;;10850:612:97:o;7357:327:96:-;7483:31;;:::i;:::-;7533:144;7574:10;7598:11;7623:44;:42;:44::i;:::-;7533:27;:144::i;14554:312:102:-;14674:6;14692:13;14708:76;4251:4:76;14708:37:102;14729:2;:15;;;14708:16;:20;;:37;;;;:::i;22439:2396:96:-;22747:27;22784:28;22822:20;22852:27;22896:19;22918:75;22938:14;22954:6;:17;;;22973:19;22918;:75::i;:::-;22896:97;;4071:3:76;23070:11:96;:47;23066:72;;;23127:1;23130;23133;23136;23119:19;;;;;;;;;;;23066:72;23148:26;23177:38;23193:8;23203:11;23177:15;:38::i;:::-;23148:67;;23226:26;23255:119;:113;23302:56;23323:18;23343:14;23302:20;:56::i;:::-;23255:14;;:33;:113::i;:::-;:117;:119::i;:::-;23226:148;;23407:72;23430:8;23440:18;23477:1;23460:14;:18;23407:22;:72::i;:::-;23385:94;;23512:120;:114;23559:57;23580:19;23601:14;23559:20;:57::i;23512:120::-;23489:143;;23675:19;23651:20;:43;;23643:52;;;;;;23882:10;23895:45;:19;23919:20;23895:23;:45::i;:::-;23882:58;;23967:74;2186:3:76;23967:39:96;23975:30;:9;:28;:30::i;:::-;23967:3;;:7;:39::i;:74::-;23951:90;-1:-1:-1;24781:47:96;24782:39;:20;23951:90;24782:24;:39::i;24781:47::-;24757:71;;22439:2396;;;;;;;;;;;;;;;;:::o;1786:176:120:-;1847:8;1871:9;1875:1;1878;1871:3;:9::i;:::-;1867:13;;1903:1;1898;:6;;1890:15;;;;;12011:407:96;12163:19;12216:1;12202:10;:15;;12194:24;;;;;;12259:1;12236:19;:24;;12228:33;;;;;;12285:126;:104;12353:35;:19;12377:10;12353:23;:35::i;:::-;12285;:10;12305:14;12285:19;:35::i;:::-;:67;;:104::i;12518:2178::-;12649:26;12831:1;12812:8;:16;;;:20;12804:29;;;;;;4071:3:76;13163:11:96;:48;;13155:57;;;;;;13242:25;;13227:40;;13223:1467;;13436:25;;13395:18;;;;13362:100;;13436:25;13362:52;;:11;;:32;:52::i;13223:1467::-;13498:8;:25;;;13483:11;:40;13479:1211;;14077:18;;;;13994:25;;13966;;;;13869:18;;;;13785:311;;14077:18;13785:235;;13966:53;;;;13785:124;;13786:39;;;13869;;;13785:83;:124::i;13479:1211::-;14362:317;14660:8;:18;;;14362:241;14577:8;:25;;;4071:3:76;14541:61:96;14362:122;14465:8;:18;;;14446:8;:16;;;:37;14377:8;:25;;;14363:11;:39;14362:83;;:122;;;;:::i;25075:872::-;25323:6;;;25379:54;:9;25411:21;25379:31;:54::i;:::-;25533:21;;;;25349:84;;-1:-1:-1;25533:47:96;;25349:84;25533:25;:47::i;:::-;25509:21;;;:71;25676:15;25649:24;;;:42;-1:-1:-1;25729:55:96;:9;25761:22;25729:31;:55::i;:::-;25701:83;-1:-1:-1;25794:28:96;25825:55;:9;25857:22;25825:31;:55::i;:::-;25794:86;25921:18;;-1:-1:-1;25075:872:96;;-1:-1:-1;;;;;;;;25075:872:96:o;17410:420:84:-;17547:1;17529:14;:19;;17521:28;;;;;;17583:68;17654:30;:28;:30::i;:::-;-1:-1:-1;;;;;17734:14:84;;17694:37;17734:14;;;;;;;;;;;:26;;;;;;;;;;17583:101;;-1:-1:-1;17799:24:84;:14;:22;:24::i;:::-;17770:53;;;;;;;-1:-1:-1;;;;;17770:53:84;-1:-1:-1;;;17770:53:84;-1:-1:-1;;;;;17770:53:84;;;;;;-1:-1:-1;;;;17410:420:84:o;12513:242:78:-;12576:57;12650:12;12665:43;12681:26;12665:15;:43::i;3556:233:101:-;3634:24;3670:33;3706:39;:37;:39::i;:::-;:51;;;;;;;;;;;;;;-1:-1:-1;;3706:51:101;;;3774:8;-1:-1:-1;;;;;3774:8:101;;3556:233::o;21727:2630::-;21885:25;21920:23;21953:28;21991:24;22032:28;22070:29;22175:40;22197:10;22209:5;22175:21;:40::i;:::-;22544:20;;22109:106;;-1:-1:-1;22109:106:101;;-1:-1:-1;22109:106:101;-1:-1:-1;22443:33:101;;22479:87;;22530:35;;:9;;:13;:35::i;:::-;4071:3:76;;22479:50:101;:87::i;:::-;22443:123;-1:-1:-1;22597:233:101;22648:172;3248:11:76;22737:52:101;:21;22443:123;22737:25;:52::i;:::-;:69;;;;;4160:4:76;;22737:69:101;;22648:30;:172::i;:::-;22597:16;;;;;:37;:233::i;:::-;22577:253;-1:-1:-1;22859:230:101;22912:167;3248:11:76;23001:47:101;:16;23022:25;23001:20;:47::i;22912:167::-;22859:18;;;;;:39;:230::i;:::-;22841:248;;23238:21;23214:20;:45;23210:140;;;-1:-1:-1;23319:1:101;;-1:-1:-1;23275:64:101;;-1:-1:-1;;23275:64:101;23210:140;23487:23;23513:232;23564:171;3248:11:76;23653:51:101;:20;23678:25;23653:24;:51::i;23564:171::-;23513:16;;;;;:37;:232::i;:::-;23487:258;-1:-1:-1;23755:26:101;23784:38;:17;23487:258;23784:21;:38::i;:::-;23755:67;;24285:65;24334:15;24285:44;24310:18;24285:5;:20;;;:24;;:44;;;;:::i;:65::-;24262:88;;21727:2630;;;;;;;;;;;;;:::o;3035:150:121:-;3110:7;3136:42;3140:34;3144:1;4160:4:76;3140:3:121;:34::i;:::-;3176:1;3136:3;:42::i;3191:150::-;3266:7;3292:42;3296:9;3300:1;3303;3296:3;:9::i;:::-;4160:4:76;3292:3:121;:42::i;3621:133::-;3673:6;3704:16;3699:21;;;3691:30;;;;;4320:133;4372:6;-1:-1:-1;;;;;4398:21:121;;;4390:30;;;;;3482:133;3534:6;3565:16;3560:21;;;3552:30;;;;;12909:281:83;13032:26;13078:35;:33;:35::i;:::-;:47;;;;;;;;;;;;;;;;;;13136;;-1:-1:-1;;;13136:47:83;;-1:-1:-1;;;;;13078:47:83;;;;-1:-1:-1;13078:47:83;;13136:24;;:47;;13161:7;;13170:12;;13136:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:753:94;3142:7;3151:4;3192:1;3175:14;:18;3167:27;;;;;;2606:1:76;3212:14:94;:51;;3204:60;;;;;;3274:12;3289:36;3315:9;3289:25;:36::i;:::-;3274:51;-1:-1:-1;3353:1:94;3336:396;3361:14;3356:1;:19;3336:396;;3396:22;3421:37;3430:27;3455:1;3430:24;:27::i;:::-;3421:4;;:8;:37::i;:::-;3396:62;;3553:8;3535:14;:26;3531:49;;;-1:-1:-1;3571:1:94;-1:-1:-1;3574:5:94;;-1:-1:-1;3563:17:94;;-1:-1:-1;3563:17:94;3531:49;3695:8;3678:14;:25;3674:47;;;-1:-1:-1;3713:1:94;-1:-1:-1;3716:4:94;;-1:-1:-1;3705:16:94;;-1:-1:-1;3705:16:94;3674:47;-1:-1:-1;3377:3:94;;3336:396;;;;3742:8;;;4108:1391:97;4279:7;4298:100;4401:29;:27;:29::i;:::-;4298:132;-1:-1:-1;4440:22:97;3200:9:76;4465:36:97;4491:9;4465:25;:36::i;:::-;4531:35;4569:17;;;;;;;;;;;:27;;;;;;;;4465:56;;;;4569:43;;;;;;;4649:29;;4465:56;;-1:-1:-1;4569:43:97;4649:29;-1:-1:-1;;;4649:29:97;;;;;-1:-1:-1;;;4709:24:97;;;;;-1:-1:-1;;;4771:31:97;;;;5212:14;5204:49;;;;-1:-1:-1;;;5204:49:97;;;;;;;:::i;:::-;5283:209;5335:17;5370:15;5403:10;5431:20;5469:9;5283:34;:209::i;:::-;5264:228;4108:1391;-1:-1:-1;;;;;;;;;;;4108:1391:97:o;6010:1576:93:-;6215:7;6258:13;6242;:29;6234:38;;;;;;6361:12;6345:13;:28;6337:37;;;;;;6621:9;6609:8;:21;6605:975;;6669:221;6880:9;6669:185;6825:28;;;6669:78;6670:20;;;6717:29;;;6669:47;:78::i;:221::-;6646:244;;;;6605:975;7256:313;7354:197;7522:28;;;7354:82;7355:20;;;7406:29;;;7354:51;:82::i;:197::-;7256:9;;:13;:313::i;1794:120:121:-;1852:7;1883:1;1879;:5;1871:14;;;;;;1906:1;1902;:5;;;;;;;1794:120;-1:-1:-1;;;1794:120:121:o;1907:134:117:-;1960:6;1988:18;1983:1;:23;;1974:33;;;;;;-1:-1:-1;2033:2:117;2028:7;;1907:134::o;6650:222::-;6707:6;6730:1;:6;;6735:1;6730:6;;6721:16;;;;;;6743:13;6780:1;6759:22;;6774:2;6768:1;6760:10;;:16;;6759:22;;;;;;;-1:-1:-1;;;;;;;6796:19:117;;;;;:42;;-1:-1:-1;;;;;;6819:19:117;;;6796:42;6787:52;;;;;21318:266;21365:6;-1:-1:-1;;;21388:1:117;:24;;;21379:34;;;;;;-1:-1:-1;;21436:1:117;:25;;;21432:39;;;-1:-1:-1;21470:1:117;21463:8;;21432:39;21498:81;21574:3;21530:1;21522:10;;21535:35;21522:48;:55;;21498:5;:81::i;4165:197::-;4222:6;4252:13;:9;;;:13;;;;;4269:2;4252:19;-1:-1:-1;;;;;;4286:19:117;;;;;:42;;-1:-1:-1;;;;;;4309:19:117;;;4277:52;;;;;1589:89;1665:7;;1670:2;1665:7;;1589:89::o;1035:239:120:-;1091:8;1121:1;-1:-1:-1;;1121:7:120;:27;;;;;-1:-1:-1;;;1132:1:120;:16;1121:27;1119:30;1111:39;;;;;;1266:1;1262;:5;;;;;;;1035:239;-1:-1:-1;;;1035:239:120:o;3408:101::-;3464:6;3493:1;3489;:5;:13;;3501:1;3489:13;;;-1:-1:-1;3497:1:120;;3408:101;-1:-1:-1;3408:101:120:o;4471:240:78:-;4531:68;4615:12;4630:34;4646:17;4630:15;:34::i;5679:1161:97:-;5983:100;6086:29;:27;:29::i;:::-;6125:35;6163:17;;;;;;;;;;;:27;;;;;;;;:43;;;;;;;;;6307:25;;;6342:15;;;:26;;;6398:24;;-1:-1:-1;;;;;6398:24:97;;;6378:17;;;:44;;;;-1:-1:-1;;;6456:28:97;;;;;6432:21;;;:52;6519:29;-1:-1:-1;;;6519:29:97;;;;6494:22;;;:54;-1:-1:-1;;;6578:24:97;;;;6558:17;;;:44;-1:-1:-1;;;6639:31:97;;;;;;6612:24;;;:58;5983:132;;-1:-1:-1;6163:43:97;6681:153;;;;6739:28;;;;-1:-1:-1;;;;;6739:28:97;6715:21;;;:52;6681:153;;;6822:1;6798:21;;;:25;5679:1161;;;;;;;;:::o;10661:1216:96:-;10875:21;10939:1;10916:20;:24;10908:33;;;;;;11105:9;11088:14;:26;11084:55;;;-1:-1:-1;11123:16:96;11116:23;;11084:55;11150:16;11169:29;:9;11183:14;11169:13;:29::i;:::-;11150:48;;11291:20;11280:8;:31;11276:60;;;11320:16;11313:23;;;;;11276:60;11396:23;11422:49;:8;11450:20;11422:27;:49::i;:::-;11396:75;-1:-1:-1;11535:20:96;11558:54;4071:3:76;11396:75:96;11558:37;:54::i;:::-;11535:77;-1:-1:-1;11741:129:96;4071:3:76;11742:71:96;11784:28;:10;11535:77;11784:14;:28::i;:::-;11742:37;:16;11763:15;11742:20;:37::i;11787:253:78:-;11862:44;11923:12;11938:55;11954:38;11938:15;:55::i;2511:396:96:-;2686:31;;:::i;:::-;2729:12;2744:34;2766:11;2744:21;:34::i;:::-;2803:17;;;2788:12;2803:17;;;;;;;;;;2729:49;;-1:-1:-1;2788:12:96;2835:1;2821:15;;:23;;2843:1;2821:23;;;2839:1;2821:23;2803:42;;;;;;;;;;;2788:57;;2862:38;2887:6;2895:4;2862:24;:38::i;:::-;2855:45;2511:396;-1:-1:-1;;;;;;2511:396:96:o;17338:897::-;17506:27;17545:15;17563:91;2186:3:76;17563:47:96;17586:8;:23;;;17563:18;:22;;:47;;;;:::i;:91::-;17545:109;;17678:8;:19;;;17668:7;:29;17664:64;;;-1:-1:-1;17709:19:96;;;;17664:64;17752:8;:19;;;17742:7;:29;17738:64;;;-1:-1:-1;17783:19:96;;;;17738:64;17817:8;17813:416;;;17967:31;:18;17990:7;17967:22;:31::i;:::-;17945:53;;17813:416;;;18163:18;18153:7;:28;:65;;18210:7;18189:18;:28;18153:65;;;18184:1;18131:87;17338:897;-1:-1:-1;;;;;17338:897:96:o;4446:200:93:-;4602:14;;;1781:32;4602:35;4581:58;;;4446:200::o;2900:192:120:-;2950:5;-1:-1:-1;;2976:28:120;-1:-1:-1;2976:28:120;;;:60;;-1:-1:-1;3020:15:120;3008:28;;;2967:70;;;;;13247:257:78;13317:57;13391:12;13406:51;13422:34;13406:15;:51::i;19401:1969:101:-;19538:28;19576:29;19615:24;20002:19;20062:1;20035:7;:24;;;:28;20031:297;;;20183:134;20266:50;20295:7;:20;;;20266:7;:24;;;:28;;:50;;;;:::i;:::-;20210:18;;;;20183:22;;;;:46;;:26;:46::i;:::-;:82;;:134::i;:::-;20169:148;;20031:297;20337:31;20371:64;20424:10;20371:52;:64::i;:::-;20337:98;-1:-1:-1;20477:30:101;20337:98;20495:11;20477:17;:30::i;:::-;20454:53;-1:-1:-1;20785:15:101;;20781:209;;20927:52;:1;20952:20;20974:4;20927:24;:52::i;:::-;20903:76;;20781:209;21238:24;;;;:28;21234:130;;21301:52;:20;21341:11;21301:39;:52::i;:::-;21282:71;;21234:130;19401:1969;;;;;;;:::o;5837:257:78:-;5896:87;5999:12;6014:33;6030:16;6014:15;:33::i;14615:6524:117:-;14664:6;-1:-1:-1;;;14687:1:117;:24;;;14678:34;;;;;;-1:-1:-1;;14735:1:117;:25;;;14731:39;;;-1:-1:-1;14769:1:117;14762:8;;14731:39;-1:-1:-1;;;14790:14:117;14856:18;14852:22;;:26;;;14848:98;;;14904:35;14895:44;14943:3;14895:51;14848:98;14981:1;14956;14960:18;14956:22;:26;;;14952:98;;;15008:35;14999:44;15047:3;14999:51;14952:98;15085:1;15060;15064:18;15060:22;:26;;;15056:98;;;15112:35;15103:44;15151:3;15103:51;15056:98;15189:1;15164;15168:18;15164:22;:26;;;15160:98;;;15216:35;15207:44;15255:3;15207:51;15160:98;15292:1;15268;15272:17;15268:21;:25;;;15264:97;;;15319:35;15310:44;15358:3;15310:51;15264:97;15395:1;15371;15375:17;15371:21;:25;;;15367:97;;;15422:35;15413:44;15461:3;15413:51;15367:97;15498:1;15474;15478:17;15474:21;:25;;;15470:97;;;15525:35;15516:44;15564:3;15516:51;15470:97;15601:1;15577;15581:17;15577:21;:25;;;15573:97;;;15628:35;15619:44;15667:3;15619:51;15573:97;15703:1;15680;15684:16;15680:20;:24;;;15676:96;;;15730:35;15721:44;15769:3;15721:51;15676:96;15805:1;15782;15786:16;15782:20;:24;;;15778:96;;;15832:35;15823:44;15871:3;15823:51;15778:96;15907:1;15884;15888:16;15884:20;:24;;;15880:96;;;15934:35;15925:44;15973:3;15925:51;15880:96;16009:1;15986;15990:16;15986:20;:24;;;15982:96;;;16036:35;16027:44;16075:3;16027:51;15982:96;16110:1;16088;16092:15;16088:19;:23;;;16084:95;;;16137:35;16128:44;16176:3;16128:51;16084:95;16211:1;16189;16193:15;16189:19;:23;;;16185:95;;;16238:35;16229:44;16277:3;16229:51;16185:95;16312:1;16290;16294:15;16290:19;:23;;;16286:95;;;16339:35;16330:44;16378:3;16330:51;16286:95;16413:1;16391;16395:15;16391:19;:23;;;16387:95;;;16440:35;16431:44;16479:3;16431:51;16387:95;16513:1;16492;16496:14;16492:18;:22;;;16488:94;;;16540:35;16531:44;16579:3;16531:51;16488:94;16613:1;16592;16596:14;16592:18;:22;;;16588:94;;;16640:35;16631:44;16679:3;16631:51;16588:94;16713:1;16692;16696:14;16692:18;:22;;;16688:94;;;16740:35;16731:44;16779:3;16731:51;16688:94;16813:1;16792;16796:14;16792:18;:22;;;16788:94;;;16840:35;16831:44;16879:3;16831:51;16788:94;16912:1;16892;16896:13;16892:17;:21;;;16888:93;;;16939:35;16930:44;16978:3;16930:51;16888:93;17011:1;16991;16995:13;16991:17;:21;;;16987:93;;;17038:35;17029:44;17077:3;17029:51;16987:93;17110:1;17090;17094:13;17090:17;:21;;;17086:93;;;17137:35;17128:44;17176:3;17128:51;17086:93;17209:1;17189;17193:13;17189:17;:21;;;17185:93;;;17236:35;17227:44;17275:3;17227:51;17185:93;17307:1;17288;17292:12;17288:16;:20;;;17284:92;;;17334:35;17325:44;17373:3;17325:51;17284:92;17405:1;17386;17390:12;17386:16;:20;;;17382:92;;;17432:35;17423:44;17471:3;17423:51;17382:92;17503:1;17484;17488:12;17484:16;:20;;;17480:92;;;17530:35;17521:44;17569:3;17521:51;17480:92;17601:1;17582;17586:12;17582:16;:20;;;17578:92;;;17628:35;17619:44;17667:3;17619:51;17578:92;17698:1;17680;17684:11;17680:15;:19;;;17676:91;;;17725:35;17716:44;17764:3;17716:51;17676:91;17795:1;17777;17781:11;17777:15;:19;;;17773:91;;;17822:35;17813:44;17861:3;17813:51;17773:91;17892:1;17874;17878:11;17874:15;:19;;;17870:91;;;17919:35;17910:44;17958:3;17910:51;17870:91;17989:1;17971;17975:11;17971:15;:19;;;17967:91;;;18016:35;18007:44;18055:3;18007:51;17967:91;18085:1;18068;18072:10;18068:14;:18;;;18064:90;;;18112:35;18103:44;18151:3;18103:51;18064:90;18181:1;18164;18168:10;18164:14;:18;;;18160:90;;;18208:35;18199:44;18247:3;18199:51;18160:90;18277:1;18260;18264:10;18260:14;:18;;;18256:90;;;18304:35;18295:44;18343:3;18295:51;18256:90;18373:1;18356;18360:10;18356:14;:18;;;18352:90;;;18400:35;18391:44;18439:3;18391:51;18352:90;18468:1;18452;18456:9;18452:13;:17;;;18448:89;;;18495:35;18486:44;18534:3;18486:51;18448:89;18563:1;18547;18551:9;18547:13;:17;;;18543:89;;;18590:35;18581:44;18629:3;18581:51;18543:89;18658:1;18642;18646:9;18642:13;:17;;;18638:89;;;18685:35;18676:44;18724:3;18676:51;18638:89;18753:1;18737;18741:9;18737:13;:17;;;18733:89;;;18780:35;18771:44;18819:3;18771:51;18733:89;18847:1;18832;18836:8;18832:12;:16;;;18828:88;;;18874:35;18865:44;18913:3;18865:51;18828:88;18941:1;18926;18930:8;18926:12;:16;;;18922:88;;;18968:35;18959:44;19007:3;18959:51;18922:88;19035:1;19020;19024:8;19020:12;:16;;;19016:88;;;19062:35;19053:44;19101:3;19053:51;19016:88;19129:1;19114;19118:8;19114:12;:16;;;19110:88;;;19156:35;19147:44;19195:3;19147:51;19110:88;19222:1;19208;19212:7;19208:11;:15;;;19204:87;;;19249:35;19240:44;19288:3;19240:51;19204:87;19315:1;19301;19305:7;19301:11;:15;;;19297:87;;;19342:35;19333:44;19381:3;19333:51;19297:87;19408:1;19394;19398:7;19394:11;:15;;;19390:87;;;19435:35;19426:44;19474:3;19426:51;19390:87;19501:1;19487;19491:7;19487:11;:15;;;19483:87;;;19528:35;19519:44;19567:3;19519:51;19483:87;19593:1;19580;19584:6;19580:10;:14;;;19576:86;;;19620:35;19611:44;19659:3;19611:51;19576:86;19685:1;19672;19676:6;19672:10;:14;;;19668:86;;;19712:35;19703:44;19751:3;19703:51;19668:86;19777:1;19764;19768:6;19764:10;:14;;;19760:86;;;19804:35;19795:44;19843:3;19795:51;19760:86;19869:1;19856;19860:6;19856:10;:14;;;19852:86;;;19896:35;19887:44;19935:3;19887:51;19852:86;19960:1;19948;19952:5;19948:9;:13;;;19944:85;;;19987:35;19978:44;20026:3;19978:51;19944:85;20051:1;20039;20043:5;20039:9;:13;;;20035:85;;;20078:35;20069:44;20117:3;20069:51;20035:85;20142:1;20130;20134:5;20130:9;:13;;;20126:85;;;20169:35;20160:44;20208:3;20160:51;20126:85;20233:1;20221;20225:5;20221:9;:13;;;20217:85;;;20260:35;20251:44;20299:3;20251:51;20217:85;20323:1;20312;20316:4;20312:8;:12;;;20308:84;;;20350:35;20341:44;20389:3;20341:51;20308:84;20413:1;20402;20406:4;20402:8;:12;;;20398:84;;;20440:35;20431:44;20479:3;20431:51;20398:84;20503:1;20492;20496:4;20492:8;:12;;;20488:84;;;20530:35;20521:44;20569:3;20521:51;20488:84;20593:1;20582;20586:4;20582:8;:12;;;20578:84;;;20620:35;20611:44;20659:3;20611:51;20578:84;20682:1;20672;20676:3;20672:7;:11;;;20668:83;;;20709:35;20700:44;20748:3;20700:51;20668:83;20771:1;20761;20765:3;20761:7;:11;;;20757:83;;;20798:35;20789:44;20837:3;20789:51;20757:83;20860:1;20850;20854:3;20850:7;:11;;;20846:83;;;20887:35;20878:44;20926:3;20878:51;20846:83;20949:1;20939;20943:3;20939:7;:11;;;20935:83;;;20976:35;20967:44;21015:3;20967:51;20935:83;21051:7;;;;21056:2;21051:7;21045:2;:14;21036:24;;21025:35;-1:-1:-1;;;;;21075:29:117;;;21066:39;;;;;2713:155:121;2786:7;2812:49;2816:41;2820:1;4071:3:76;2816::121;:41::i;2232:273:96:-;2306:12;2342:11;2338:1;:15;2330:24;;;;;;2606:1:76;2372:11:96;:48;;2364:57;;;;;;2460:1;2446:11;:15;:47;;2492:1;2478:11;:15;2446:47;;;2464:11;2446:47;2497:1;2440:58;;2232:273;-1:-1:-1;;2232:273:96:o;3552:1423::-;3659:31;;:::i;:::-;2186:3:76;4071;3879:4:96;3884:32;;;3879:38;;;;;;;;3865:90;:143;;;;;;3844:164;;2186:3:76;4071;4053:4:96;4058:32;;;1019:1;4058:32;4053:38;;;;;;;;4039:90;:143;;;;;;4018:1;:18;;:164;;;;;4204:53;4227:4;1077:1;4232:6;:22;;;4227:28;;;;;;;;4204:16;:53::i;:::-;4192:9;;;:65;;;4515:3;;4467:4;4472:25;;;1135:1;4472:25;4467:31;;;;;;;;4453:59;:65;;;;;;4439:11;;;:79;4592:9;;;;4604:3;;4556:4;4561:25;;;1193:1;4561:25;4556:31;;;;;;;;4542:59;:65;;;;;;4528:11;;;:79;4633:15:76;4695:4:96;4700:26;;;4633:1:76;4700:26:96;4695:32;;;;;;;;4681:87;4666:12;;;:102;5125:16:76;4807:4:96;4812:26;;;1309:1;4812:26;4807:32;;;;;;;;4793:94;4778:12;;;:109;4930:4;4801:39;4935:30;;1367:1;4935:30;4930:36;;;;;;;;4897:16;;;:71;:1;3552:1423;-1:-1:-1;;3552:1423:96:o;8019:290::-;8119:31;;:::i;:::-;8162:12;8177:44;:42;:44::i;:::-;:56;;;;;;;;;;;;;;;:59;;-1:-1:-1;8253:49:96;;8177:59;8253:24;:49::i;2874:155:121:-;2947:7;2973:49;2977:9;2981:1;2984;2977:3;:9::i;:::-;4071:3:76;2973::121;:49::i;2913:633:96:-;2981:7;3306:11;3274:43;;4981:3:76;3274:43:96;:265;;3491:48;;;5125:16:76;3491:48:96;3274:265;;;-1:-1:-1;;;3388:43:96;;;;;;5206:17:76;3387:88:96;5044:22:76;3333:142:96;;2913:633::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:175:213:-;84:20;;-1:-1:-1;;;;;133:31:213;;123:42;;113:2;;179:1;176;169:12;194:400;;;327:3;320:4;312:6;308:17;304:27;294:2;;350:6;342;335:22;294:2;-1:-1:-1;378:20:213;;421:18;410:30;;407:2;;;460:8;450;443:26;407:2;504:4;496:6;492:17;480:29;;567:3;560:4;552;544:6;540:17;532:6;528:30;524:41;521:50;518:2;;;584:1;581;574:12;599:1531;;727:3;720:4;712:6;708:17;704:27;694:2;;749:5;742;735:20;694:2;789:6;776:20;815:4;838:18;875:2;871;868:10;865:2;;;881:9;865:2;912:36;944:2;939;935;931:11;927:20;912:36;:::i;:::-;982:15;;;1013:12;;;;1045:15;;;1079:4;1114:11;;;1102:24;;1098:33;;1095:42;-1:-1:-1;1092:2:213;;;1154:5;1147;1140:20;1092:2;1180:5;1194:907;1208:2;1205:1;1202:9;1194:907;;;1275:2;1269:3;1264;1260:13;1256:22;1253:2;;;1295:5;1288;1281:20;1253:2;1326;1361;1355:9;1407:2;1399:6;1395:15;1464:6;1452:10;1449:22;1444:2;1432:10;1429:18;1426:46;1423:2;;;1475:9;1423:2;1499:22;;1549:24;1569:3;1549:24;:::i;:::-;1534:40;;1624:12;;;1611:26;1594:15;;;1587:51;1688:12;;;1675:26;1658:15;;;1651:51;;;;1725:2;1777:12;;;1764:26;1747:15;;;1740:51;1814:3;1867:12;;;1854:26;1837:15;;;1830:51;1904:3;;1944:50;1981:12;;;1944:50;:::i;:::-;1927:15;;;1920:75;;;;2008:19;;2047:12;;;;2079;;;;1226:1;1219:9;1194:907;;;-1:-1:-1;2119:5:213;;684:1446;-1:-1:-1;;;;;;;;;684:1446:213:o;2135:161::-;2221:20;;2270:1;2260:12;;2250:2;;2286:1;2283;2276:12;2301:161;2370:20;;2430:6;2419:18;;2409:29;;2399:2;;2452:1;2449;2442:12;2467:1640;;;;;;2697:3;2685:9;2676:7;2672:23;2668:33;2665:2;;;2719:6;2711;2704:22;2665:2;2747:31;2768:9;2747:31;:::i;:::-;2737:41;;2797:39;2832:2;2821:9;2817:18;2797:39;:::i;:::-;2787:49;;2887:2;2876:9;2872:18;2859:32;2910:18;2951:2;2943:6;2940:14;2937:2;;;2972:6;2964;2957:22;2937:2;3000:22;;;;3056:3;3038:16;;;3034:26;3031:2;;;3078:6;3070;3063:22;3031:2;3116;3110:9;3158:3;3150:6;3146:16;3212:6;3200:10;3197:22;3192:2;3180:10;3177:18;3174:46;3171:2;;;3223:9;3171:2;3250;3243:22;3290:16;;3318;;;3315:2;;;3352:6;3344;3337:22;3315:2;3385:77;3454:7;3443:8;3439:2;3435:17;3385:77;:::i;:::-;3377:6;3370:93;;3509:2;3505;3501:11;3488:25;3538:2;3528:8;3525:16;3522:2;;;3559:6;3551;3544:22;3522:2;3601:77;3670:7;3659:8;3655:2;3651:17;3601:77;:::i;:::-;3596:2;3584:15;;3577:102;-1:-1:-1;3733:2:213;3725:11;;;3712:25;3695:15;;;3688:50;3792:2;3784:11;;;3771:25;3754:15;;;3747:50;3588:6;-1:-1:-1;3860:18:213;;;3847:32;;3891:16;;;3888:2;;;3925:6;3917;3910:22;3888:2;;3969:78;4039:7;4028:8;4017:9;4013:24;3969:78;:::i;:::-;2655:1452;;;;-1:-1:-1;2655:1452:213;;-1:-1:-1;4066:8:213;;3943:104;2655:1452;-1:-1:-1;;;2655:1452:213:o;4112:790::-;;;;;;4308:3;4296:9;4287:7;4283:23;4279:33;4276:2;;;4330:6;4322;4315:22;4276:2;4358:31;4379:9;4358:31;:::i;:::-;4348:41;;4408:39;4443:2;4432:9;4428:18;4408:39;:::i;:::-;4398:49;;4497:2;4486:9;4482:18;4469:32;4541:12;4534:5;4530:24;4523:5;4520:35;4510:2;;4574:6;4566;4559:22;4510:2;4602:5;-1:-1:-1;4658:2:213;4643:18;;4630:32;4685:18;4674:30;;4671:2;;;4722:6;4714;4707:22;4671:2;4766:76;4834:7;4825:6;4814:9;4810:22;4766:76;:::i;4907:340::-;;;;5052:2;5040:9;5031:7;5027:23;5023:32;5020:2;;;5073:6;5065;5058:22;5020:2;5101:30;5121:9;5101:30;:::i;:::-;5091:40;;5150;5186:2;5175:9;5171:18;5150:40;:::i;:::-;5140:50;;5237:2;5226:9;5222:18;5209:32;5199:42;;5010:237;;;;;:::o;5252:255::-;;;5392:2;5380:9;5371:7;5367:23;5363:32;5360:2;;;5413:6;5405;5398:22;5360:2;-1:-1:-1;;5441:16:213;;5497:2;5482:18;;;5476:25;5441:16;;5476:25;;-1:-1:-1;5350:157:213:o;5512:980::-;;5624:5;5618:12;5651:6;5646:3;5639:19;5677:4;5706:2;5701:3;5697:12;5690:19;;5743:2;5736:5;5732:14;5764:3;5776:691;5790:6;5787:1;5784:13;5776:691;;;5849:13;;5891:9;;5902:6;5887:22;5875:35;;5950:11;;;5944:18;5930:12;;;5923:40;5986:4;6030:11;;;6024:18;6010:12;;;6003:40;6066:4;6110:11;;;6104:18;6090:12;;;6083:40;6146:4;6190:11;;;6184:18;6170:12;;;6163:40;6226:4;6269:11;;;6263:18;;6321:1;6304:19;;6294:2;;6327:9;6294:2;6358:12;;6351:34;6414:4;6405:14;;;;6442:15;;;;5812:1;5805:9;5776:691;;;-1:-1:-1;6483:3:213;;5594:898;-1:-1:-1;;;;;5594:898:213:o;6497:443::-;;6594:5;6588:12;6621:6;6616:3;6609:19;6647:4;6676:2;6671:3;6667:12;6660:19;;6713:2;6706:5;6702:14;6734:3;6746:169;6760:6;6757:1;6754:13;6746:169;;;6821:13;;6809:26;;6855:12;;;;6890:15;;;;6782:1;6775:9;6746:169;;6945:445;-1:-1:-1;;;;;7230:15:213;;;7212:34;;7282:15;;;;7277:2;7262:18;;7255:43;7329:2;7314:18;;7307:34;7372:2;7357:18;;7350:34;;;;7161:3;7146:19;;7128:262::o;7395:375::-;-1:-1:-1;;;;;7653:15:213;;;7635:34;;7705:15;;;;7700:2;7685:18;;7678:43;7752:2;7737:18;;7730:34;;;;7585:2;7570:18;;7552:218::o;7775:272::-;-1:-1:-1;;;;;7965:32:213;;;;7947:51;;8029:2;8014:18;;8007:34;7935:2;7920:18;;7902:145::o;8052:477::-;;8309:2;8298:9;8291:21;8335:62;8393:2;8382:9;8378:18;8370:6;8335:62;:::i;:::-;8445:9;8437:6;8433:22;8428:2;8417:9;8413:18;8406:50;8473;8516:6;8508;8473:50;:::i;8534:183::-;8686:25;;;8674:2;8659:18;;8641:76::o;8722:264::-;8896:25;;;8964:14;8957:22;8952:2;8937:18;;8930:50;8884:2;8869:18;;8851:135::o;8991:346::-;9193:2;9175:21;;;9232:2;9212:18;;;9205:30;-1:-1:-1;;;9266:2:213;9251:18;;9244:52;9328:2;9313:18;;9165:172::o;9342:350::-;9544:2;9526:21;;;9583:2;9563:18;;;9556:30;9622:28;9617:2;9602:18;;9595:56;9683:2;9668:18;;9516:176::o;9697:338::-;9899:2;9881:21;;;9938:2;9918:18;;;9911:30;-1:-1:-1;;;9972:2:213;9957:18;;9950:44;10026:2;10011:18;;9871:164::o;10040:345::-;10242:2;10224:21;;;10281:2;10261:18;;;10254:30;-1:-1:-1;;;10315:2:213;10300:18;;10293:51;10376:2;10361:18;;10214:171::o;10390:337::-;10592:2;10574:21;;;10631:2;10611:18;;;10604:30;-1:-1:-1;;;10665:2:213;10650:18;;10643:43;10718:2;10703:18;;10564:163::o;10732:347::-;10934:2;10916:21;;;10973:2;10953:18;;;10946:30;11012:25;11007:2;10992:18;;10985:53;11070:2;11055:18;;10906:173::o;11084:339::-;11286:2;11268:21;;;11325:2;11305:18;;;11298:30;-1:-1:-1;;;11359:2:213;11344:18;;11337:45;11414:2;11399:18;;11258:165::o;11428:340::-;11630:2;11612:21;;;11669:2;11649:18;;;11642:30;-1:-1:-1;;;11703:2:213;11688:18;;11681:46;11759:2;11744:18;;11602:166::o;11773:346::-;11975:2;11957:21;;;12014:2;11994:18;;;11987:30;-1:-1:-1;;;12048:2:213;12033:18;;12026:52;12110:2;12095:18;;11947:172::o;12124:338::-;12326:2;12308:21;;;12365:2;12345:18;;;12338:30;-1:-1:-1;;;12399:2:213;12384:18;;12377:44;12453:2;12438:18;;12298:164::o;12467:347::-;12669:2;12651:21;;;12708:2;12688:18;;;12681:30;12747:25;12742:2;12727:18;;12720:53;12805:2;12790:18;;12641:173::o;12819:346::-;13021:2;13003:21;;;13060:2;13040:18;;;13033:30;-1:-1:-1;;;13094:2:213;13079:18;;13072:52;13156:2;13141:18;;12993:172::o;13170:841::-;;13399:2;13388:9;13381:21;13437:6;13431:13;13480:4;13475:2;13464:9;13460:18;13453:32;13508:84;13587:3;13576:9;13572:19;13558:12;13508:84;:::i;:::-;13494:98;;13641:4;13633:6;13629:17;13623:24;13715:2;13711:7;13699:9;13691:6;13687:22;13683:36;13678:2;13667:9;13663:18;13656:64;13743:73;13809:6;13793:14;13743:73;:::i;:::-;13872:2;13860:15;;13854:22;13847:4;13832:20;;13825:52;13932:2;13920:15;;;13914:22;13908:3;13893:19;;13886:51;-1:-1:-1;;;13991:4:213;13976:20;13969:36;13729:87;13371:640::o;14016:248::-;14190:25;;;14246:2;14231:18;;14224:34;14178:2;14163:18;;14145:119::o;14269:319::-;14471:25;;;14527:2;14512:18;;14505:34;;;;14570:2;14555:18;;14548:34;14459:2;14444:18;;14426:162::o;14593:242::-;14663:2;14657:9;14693:17;;;14740:18;14725:34;;14761:22;;;14722:62;14719:2;;;14787:9;14719:2;14814;14807:22;14637:198;;-1:-1:-1;14637:198:213:o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"executeTradesArrayBatch(address,uint16,PortfolioState,bytes32[])": {"notice": "Executes trades for a bitmapped portfolio, cannot be called directly", "params": {"account": "account to put fCash assets in", "currencyId": "currency id to trade", "portfolioState": "used to update the positions in the portfolio", "trades": "tightly packed array of trades, schema is defined in global/Types.sol"}, "returns": {"_0": "resulting portfolio state", "_1": "netCash generated by trading"}}, "executeTradesBitmapBatch(address,uint16,uint40,bytes32[])": {"notice": "Executes trades for a bitmapped portfolio, cannot be called directly", "params": {"account": "account to put fCash assets in", "bitmapCurrencyId": "currency id of the bitmap", "nextSettleTime": "used to calculate the relative positions in the bitmap", "trades": "tightly packed array of trades, schema is defined in global/Types.sol"}, "returns": {"_0": "netCash generated by trading", "_1": "didIncurDebt if the bitmap had an fCash position go negative"}}, "executeVaultTrade(uint16,address,bytes32)": {"notice": "Executes a trade for leveraged vaults (they can only lend or borrow).", "params": {"currencyId": "the currency id to lend or borrow", "trade": "the bytes32 encoded trade data"}}}, "version": 1}, "offset": [1203, 17287], "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3643F39B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x715E9002 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xB58F83ED EQ PUSH2 0xB4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70 PUSH2 0x6B CALLDATASIZE PUSH1 0x4 PUSH2 0x3F63 JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP3 SWAP2 SWAP1 PUSH2 0x416E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FD1 JUMP JUMPDEST PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x4165 JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x3E69 JUMP JUMPDEST PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP3 SWAP2 SWAP1 PUSH2 0x43AC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF0 DUP8 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP PUSH2 0xFA PUSH2 0x3B3E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104 PUSH2 0x3B86 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 PUSH2 0x13A DUP14 DUP8 DUP8 DUP14 DUP14 DUP8 DUP2 DUP2 LT PUSH2 0x129 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 PUSH1 0xA0 ADD MLOAD PUSH2 0x325 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP7 PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 DUP2 MSTORE POP DUP3 SWAP4 POP POP POP POP PUSH2 0x168 DUP14 DUP14 DUP4 DUP15 PUSH5 0xFFFFFFFFFF AND DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE DUP4 DUP1 PUSH2 0x17D JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD SLT JUMPDEST DUP4 MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP2 SWAP6 POP PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x10D JUMP JUMPDEST POP PUSH1 0x60 ADD MLOAD SWAP11 SWAP1 SWAP10 POP SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BF DUP6 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP PUSH2 0x1C9 PUSH2 0x3B3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF8 DUP6 SWAP1 SHR PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x1DB JUMPI INVALID JUMPDEST SWAP1 POP PUSH2 0x1EB DUP7 DUP5 DUP5 DUP5 TIMESTAMP DUP11 PUSH2 0x55A JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1FF PUSH2 0x3BBC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20B DUP8 PUSH2 0x2FD JUMP JUMPDEST SWAP1 POP PUSH2 0x215 PUSH2 0x3B3E JUMP JUMPDEST PUSH2 0x21D PUSH2 0x3B86 JUMP JUMPDEST TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x23C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x254 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x264 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x27B JUMPI POP PUSH1 0x3 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x279 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2AA DUP14 DUP8 DUP8 DUP14 DUP14 DUP9 DUP2 DUP2 LT PUSH2 0x299 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP9 PUSH1 0xA0 ADD MLOAD PUSH2 0x325 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD DUP2 SWAP1 MSTORE SWAP1 DUP7 MSTORE SWAP1 SWAP2 POP PUSH2 0x2C9 SWAP1 DUP13 SWAP1 DUP15 SWAP1 DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x649 JUMP JUMPDEST POP DUP3 MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x2DA SWAP2 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x226 JUMP JUMPDEST POP PUSH1 0x60 ADD MLOAD SWAP7 SWAP10 SWAP7 SWAP9 POP SWAP6 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x305 PUSH2 0x3BE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 DUP4 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH2 0x31C DUP4 DUP3 PUSH2 0x76C JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0xF8 DUP7 SWAP1 SHR PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x33A JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x34A JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x368 JUMPI PUSH2 0x35C DUP10 DUP10 DUP8 DUP10 PUSH2 0x7AF JUMP JUMPDEST SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x3D3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x376 JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x38D JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x38B JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x4B JUMPI PUSH2 0x3A0 DUP10 DUP10 DUP10 DUP5 DUP10 DUP12 PUSH2 0x55A JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x3CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x4263 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH1 0x20 ADD MLOAD SWAP4 POP JUMPDEST POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3F0 DUP8 DUP8 PUSH2 0xFFFF AND PUSH2 0x956 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3FC PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP13 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP11 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP2 SWAP3 POP DUP1 PUSH2 0x437 DUP9 DUP11 PUSH2 0x998 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44F DUP6 DUP4 PUSH2 0xAA3 JUMP JUMPDEST ISZERO PUSH2 0x4D2 JUMPI DUP3 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0x0 PUSH2 0x469 DUP10 DUP4 PUSH2 0x53E JUMP JUMPDEST SWAP1 POP PUSH2 0x474 DUP2 PUSH2 0xAD3 JUMP JUMPDEST DUP6 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR DUP6 SSTORE PUSH2 0x4A1 DUP14 DUP14 DUP14 DUP6 DUP6 PUSH2 0xB01 JUMP JUMPDEST DUP1 PUSH2 0x4B5 JUMPI PUSH2 0x4B2 DUP8 DUP6 PUSH1 0x0 PUSH2 0xBD9 JUMP JUMPDEST SWAP7 POP JUMPDEST PUSH2 0x4C4 DUP14 DUP14 PUSH2 0xFFFF AND DUP10 PUSH2 0xC27 JUMP JUMPDEST SWAP7 POP PUSH2 0x535 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP7 ISZERO PUSH2 0x52C JUMPI PUSH2 0x4E1 DUP8 PUSH2 0xAD3 JUMP JUMPDEST DUP4 SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP2 AND OR DUP4 SSTORE PUSH2 0x50F DUP12 DUP12 DUP12 PUSH1 0x0 DUP12 PUSH2 0xB01 JUMP JUMPDEST PUSH2 0x51B DUP6 DUP4 PUSH1 0x1 PUSH2 0xBD9 JUMP JUMPDEST SWAP5 POP PUSH2 0x52C DUP12 DUP12 PUSH2 0xFFFF AND DUP8 PUSH2 0xC27 JUMP JUMPDEST DUP7 SWAP6 POP POP POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 ADD DUP3 DUP2 SLT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF PUSH1 0xF0 DUP5 SWAP1 SHR AND PUSH2 0x572 DUP9 DUP9 DUP4 DUP6 DUP10 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB PUSH1 0x98 DUP6 SWAP1 SHR AND SWAP2 POP PUSH1 0x1 DUP7 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x590 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x5A2 JUMPI PUSH2 0x59F DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x5CC DUP11 DUP11 DUP6 PUSH2 0x5C1 DUP11 DUP14 PUSH1 0x20 ADD MLOAD PUSH2 0xD0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP13 SWAP4 SWAP3 SWAP2 SWAP1 DUP8 PUSH2 0xD1F JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP PUSH4 0xFFFFFFFF PUSH1 0x78 DUP7 SWAP1 SHR AND DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x1 DUP9 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x5F0 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x61B JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x437C JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x437C JUMP JUMPDEST POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH2 0x658 SWAP1 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD9E JUMP JUMPDEST ISZERO PUSH2 0x662 JUMPI PUSH2 0x753 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 PUSH2 0x67F DUP7 PUSH1 0x20 ADD MLOAD DUP7 DUP7 DUP7 DUP7 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x68D JUMPI POP PUSH2 0x753 JUMP JUMPDEST POP JUMPDEST PUSH2 0x698 DUP3 PUSH2 0xEC2 JUMP JUMPDEST ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x6D2 JUMPI POP PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF DUP2 SGT ISZERO JUMPDEST PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD MLOAD DUP6 PUSH1 0x40 ADD MLOAD EQ ISZERO PUSH2 0x6FF JUMPI PUSH2 0x6F9 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xED8 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP2 MLOAD DUP2 LT PUSH2 0x715 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH2 0xFFFF DUP8 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD DUP1 MLOAD PUSH1 0x1 ADD SWAP1 MSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x762 PUSH2 0x3C10 JUMP JUMPDEST PUSH2 0x554 DUP3 TIMESTAMP PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x774 PUSH2 0x3BE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x783 DUP5 PUSH2 0xFFFF AND PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH2 0xFFFF SWAP7 SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH4 0xFFFFFFFF PUSH1 0xD8 DUP6 SWAP1 SHR AND PUSH1 0x80 DUP6 SWAP1 SHR PUSH1 0xA SIGNEXTEND DUP7 DUP3 GT PUSH2 0x7E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x42C3 JUMP JUMPDEST PUSH2 0x7F4 DUP9 PUSH1 0x20 ADD MLOAD DUP4 DUP10 PUSH2 0x1074 JUMP JUMPDEST ISZERO PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x41AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x824 DUP10 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND PUSH2 0x1119 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x832 DUP4 PUSH2 0x113F JUMP JUMPDEST SWAP5 POP POP SWAP4 POP POP POP PUSH2 0x859 DUP2 PUSH1 0x2 PUSH1 0xFF AND PUSH1 0x6 DUP2 LT PUSH2 0x84C JUMPI INVALID JUMPDEST DUP5 SWAP2 PUSH2 0xE10 SWAP2 BYTE MUL PUSH2 0x11AB JUMP JUMPDEST DUP11 GT PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x4345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP5 DUP14 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP9 PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT DUP1 ISZERO PUSH2 0x89E JUMPI POP PUSH1 0x0 DUP6 SLT JUMPDEST ISZERO PUSH2 0x8B4 JUMPI DUP1 DUP6 SLT ISZERO PUSH2 0x8AF JUMPI DUP1 SWAP5 POP JUMPDEST PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x0 DUP2 SGT DUP1 ISZERO PUSH2 0x8C4 JUMPI POP PUSH1 0x0 DUP6 SGT JUMPDEST ISZERO PUSH2 0x8D9 JUMPI DUP1 DUP6 SGT ISZERO PUSH2 0x8AF JUMPI DUP1 SWAP5 POP PUSH2 0x8F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x41E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x900 DUP14 DUP9 DUP15 DUP10 DUP8 PUSH2 0x1202 JUMP JUMPDEST SWAP1 POP PUSH2 0x912 DUP15 DUP7 DUP16 PUSH1 0x0 ADD MLOAD DUP5 PUSH2 0x1289 JUMP JUMPDEST PUSH2 0x923 DUP6 DUP16 DUP16 PUSH1 0x0 ADD MLOAD DUP11 DUP11 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x935 DUP6 DUP15 PUSH1 0x0 ADD MLOAD DUP10 DUP8 DUP11 DUP7 PUSH2 0x13A1 JUMP JUMPDEST DUP7 PUSH2 0x93F DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP1 SWAP16 SWAP1 SWAP15 POP SWAP6 SWAP13 POP SWAP5 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x961 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0xC PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x9A6 DUP6 PUSH2 0x143C JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP5 MOD ISZERO PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xA9C JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x9D4 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0xA9C JUMP JUMPDEST PUSH3 0x15180 DUP2 DUP6 SUB DIV PUSH1 0x5A DUP2 GT PUSH2 0x9F1 JUMPI SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0xA9C SWAP1 POP JUMP JUMPDEST PUSH2 0x168 DUP2 GT PUSH2 0xA30 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x7E900 DUP5 MOD DIV DUP3 ADD PUSH1 0x59 NOT ADD SWAP1 POP PUSH1 0x6 DUP2 DIV PUSH1 0x5A ADD PUSH1 0x6 DUP3 DUP2 PUSH2 0xA20 JUMPI INVALID JUMPDEST MOD PUSH1 0x0 EQ SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x870 DUP2 GT PUSH2 0xA60 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x278D00 DUP5 MOD DIV DUP3 ADD PUSH2 0x167 NOT ADD SWAP1 POP PUSH1 0x1E DUP2 DIV PUSH1 0x87 ADD PUSH1 0x1E DUP3 DUP2 PUSH2 0xA20 JUMPI INVALID JUMPDEST PUSH2 0x1DE2 DUP2 GT PUSH2 0xA90 JUMPI PUSH1 0x0 PUSH3 0x15180 PUSH3 0x76A700 DUP5 MOD DIV DUP3 ADD PUSH2 0x86F NOT ADD SWAP1 POP PUSH1 0x5A DUP2 DIV PUSH1 0xC3 ADD PUSH1 0x5A DUP3 DUP2 PUSH2 0xA20 JUMPI INVALID JUMPDEST PUSH2 0x100 PUSH1 0x0 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 LT ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI POP PUSH2 0x100 DUP3 GT ISZERO JUMPDEST PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 NOT ADD SHL PUSH1 0x1 PUSH1 0xFF SHL SWAP1 DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0xAF4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP3 SGT ISZERO JUMPDEST PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0D DUP4 DUP4 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB1A JUMPI POP PUSH2 0x753 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB24 PUSH2 0x14EB JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP10 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP1 SWAP2 AND DUP2 SUB SWAP1 PUSH2 0xB5C DUP3 DUP6 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0xB6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB85 PUSH2 0xB80 PUSH2 0xB7B DUP4 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x150E JUMP JUMPDEST PUSH2 0x151D JUMP JUMPDEST PUSH2 0xFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xBCE DUP10 DUP10 DUP10 DUP8 PUSH2 0x1533 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI POP PUSH2 0x100 DUP4 GT ISZERO JUMPDEST PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xC10 JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR DUP4 OR PUSH2 0xC20 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 NOT DUP4 ADD SHR NOT DUP4 AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x14 PUSH2 0xC32 DUP3 PUSH2 0x15BD JUMP JUMPDEST GT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x429A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5A PUSH2 0x141A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 DUP3 MSTORE SWAP4 SWAP1 SWAP5 MSTORE POP SWAP2 KECCAK256 SSTORE JUMP JUMPDEST DUP3 PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0xC96 JUMPI POP DUP5 PUSH1 0x20 ADD MLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x431D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCF PUSH2 0xCC0 DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xCC9 DUP5 PUSH2 0x1731 JUMP JUMPDEST SWAP1 PUSH2 0x11AB JUMP JUMPDEST SWAP1 POP PUSH2 0xCF4 DUP7 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP3 DUP5 DUP7 PUSH2 0xCE9 DUP12 PUSH2 0x174D JUMP JUMPDEST DUP11 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1761 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH1 0x0 NOT DUP4 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xD31 DUP10 DUP9 DUP9 DUP9 DUP9 PUSH2 0x17D9 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 PUSH2 0xD4A DUP11 PUSH2 0x1919 JUMP JUMPDEST SWAP1 POP PUSH2 0xD6E DUP2 DUP12 PUSH1 0x40 ADD MLOAD DUP13 PUSH1 0x60 ADD MLOAD DUP14 PUSH1 0xA0 ADD MLOAD DUP15 PUSH1 0xC0 ADD MLOAD DUP16 PUSH1 0xE0 ADD MLOAD PUSH2 0x191D JUMP JUMPDEST DUP8 MLOAD PUSH2 0xD7A SWAP1 DUP4 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0xD90 DUP10 DUP10 PUSH1 0x0 ADD MLOAD DUP13 PUSH1 0x20 ADD MLOAD DUP11 DUP9 DUP8 PUSH2 0x1A6D JUMP JUMPDEST POP JUMPDEST POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDB9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP5 DUP2 PUSH1 0x40 ADD MLOAD EQ ISZERO DUP1 PUSH2 0xDE2 JUMPI POP DUP7 PUSH2 0xFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND EQ ISZERO JUMPDEST DUP1 PUSH2 0xDF1 JUMPI POP DUP6 DUP2 PUSH1 0x20 ADD MLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xDFC JUMPI POP PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE0E JUMPI INVALID JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xE2C JUMPI POP PUSH1 0x3 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE29 JUMPI INVALID JUMPDEST EQ ISZERO JUMPDEST PUSH2 0xE35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0xE47 SWAP1 DUP7 PUSH2 0x53E JUMP JUMPDEST SWAP1 POP PUSH2 0xE52 DUP7 PUSH2 0xEC2 JUMP JUMPDEST ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0xE8C JUMPI POP PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF DUP2 SGT ISZERO JUMPDEST PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SWAP1 SWAP2 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH2 0x535 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x554 JUMPI POP POP PUSH1 0x8 LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 EQ PUSH2 0xEEF JUMPI DUP3 MLOAD PUSH1 0x2 MUL PUSH2 0xEF2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF47 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xF34 PUSH2 0x3C31 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF2C JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xF89 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xF62 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF76 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xF4D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF99 PUSH2 0x3C10 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA4 DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 PUSH2 0xFBE DUP7 PUSH2 0x1C0E JUMP JUMPDEST SWAP1 POP PUSH2 0xFCC DUP7 DUP5 DUP4 DUP9 PUSH2 0x1C93 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0xFDC DUP7 DUP4 DUP6 PUSH2 0x1D37 JUMP JUMPDEST POP POP PUSH2 0xFF0 JUMP JUMPDEST DUP1 MLOAD DUP4 EQ PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x101E PUSH2 0x1019 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xC0 ADD MLOAD PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F94 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1041 PUSH2 0x1019 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH1 0xE0 ADD MLOAD PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1062 PUSH2 0x1FAA JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x1095 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x420D JUMP JUMPDEST PUSH1 0x7 DUP5 GT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x42ED JUMP JUMPDEST PUSH3 0x76A700 DUP4 MOD ISZERO PUSH2 0x10C9 JUMPI POP PUSH1 0x0 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP4 PUSH2 0x1731 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP6 DUP2 GT PUSH2 0x110D JUMPI PUSH2 0x10F3 PUSH2 0x10EC DUP3 PUSH2 0x168D JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x11AB JUMP JUMPDEST DUP6 EQ ISZERO PUSH2 0x1105 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10D9 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1124 PUSH2 0x1FB7 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1150 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x40 SWAP1 SWAP5 KECCAK256 SLOAD PUSH2 0xFFFF DUP2 AND SWAP6 PUSH4 0xFFFFFFFF PUSH3 0x10000 DUP4 DIV DUP2 AND SWAP7 POP PUSH7 0x1000000000000 DUP4 DIV AND SWAP5 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x50 SHL DUP4 DIV AND SWAP4 POP PUSH1 0x1 PUSH1 0x58 SHL SWAP1 SWAP2 DIV PUSH1 0xD0 SHL SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11C8 PUSH2 0x98B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 SWAP3 MSTORE KECCAK256 SLOAD PUSH1 0xF SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1210 DUP8 DUP8 DUP8 PUSH2 0x1FD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP4 SWAP1 BYTE PUSH3 0xF4240 MUL PUSH1 0x0 DUP6 SGT ISZERO PUSH2 0x1236 JUMPI PUSH2 0x122F DUP3 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x124D JUMP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1248 JUMPI PUSH2 0x122F DUP3 DUP3 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x0 PUSH2 0x1262 DUP4 PUSH2 0x125D DUP11 DUP11 PUSH2 0xD0A JUMP JUMPDEST PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x127C PUSH2 0x1271 DUP8 DUP4 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD MLOAD SWAP1 PUSH2 0x213D JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 PUSH2 0x2183 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SLT ISZERO PUSH2 0x12BE JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23DE6651 DUP7 DUP7 PUSH2 0x12D8 DUP7 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH2 0x132E JUMPI PUSH2 0x753 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133A DUP5 DUP5 PUSH2 0x21B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x1349 JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND CALLER PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP5 PUSH2 0x1383 DUP8 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1391 SWAP3 SWAP2 SWAP1 PUSH2 0x4404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x13B3 DUP9 PUSH2 0xCFC JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x13CB JUMPI POP PUSH1 0x0 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x13E2 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x13E2 JUMPI POP PUSH1 0x0 DUP2 SGT ISZERO JUMPDEST PUSH2 0x13EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13F7 DUP9 DUP9 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP PUSH2 0x1403 DUP2 DUP5 PUSH2 0x53E JUMP JUMPDEST SWAP1 POP PUSH2 0x1410 DUP9 DUP9 DUP4 PUSH2 0x2228 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0xB JUMPDEST PUSH1 0x0 PUSH3 0xF4240 DUP3 PUSH1 0x26 DUP2 GT ISZERO PUSH2 0x1435 JUMPI INVALID JUMPDEST ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 DUP3 LT ISZERO PUSH2 0x144E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15180 DUP3 JUMPDEST MOD SWAP1 SWAP2 SUB SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ DUP1 PUSH2 0x147A JUMPI POP PUSH1 0x0 DUP4 SLT ISZERO DUP1 ISZERO PUSH2 0x147A JUMPI POP PUSH1 0x0 DUP3 SLT ISZERO JUMPDEST ISZERO PUSH2 0x1487 JUMPI POP PUSH1 0x0 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO DUP1 ISZERO PUSH2 0x1498 JUMPI POP DUP2 PUSH1 0x0 SLT JUMPDEST ISZERO PUSH2 0x14A4 JUMPI POP DUP2 PUSH2 0x554 JUMP JUMPDEST PUSH1 0x0 DUP3 SGT ISZERO DUP1 ISZERO PUSH2 0x14B5 JUMPI POP DUP3 PUSH1 0x0 SLT JUMPDEST ISZERO PUSH2 0x14CA JUMPI PUSH2 0x14C3 DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP PUSH2 0x554 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO DUP1 ISZERO PUSH2 0x14DC JUMPI POP PUSH1 0x0 DUP3 SGT ISZERO JUMPDEST ISZERO PUSH2 0x4B JUMPI PUSH2 0x14C3 DUP4 DUP4 PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x20 PUSH2 0x1423 JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 SGT ISZERO PUSH1 0x0 DUP4 SLT ISZERO EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1541 DUP6 DUP6 DUP6 PUSH2 0x2233 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SLT ISZERO PUSH2 0x1559 JUMPI DUP8 SWAP2 POP PUSH2 0x155C JUMP JUMPDEST POP DUP7 JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x15AB SWAP3 SWAP2 SWAP1 PUSH2 0x4140 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SHR PUSH32 0x5555555555555555555555555555555555555555555555555555555555555555 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x2 DUP2 SWAP1 SHR PUSH32 0x3333333333333333333333333333333333333333333333333333333333333333 SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x4 DUP2 SWAP1 SHR PUSH32 0x707070707070707070707070707070707070707070707070707070707070707 SWAP2 SWAP1 SWAP2 AND ADD PUSH1 0x8 DUP2 SWAP1 SHR PUSH31 0xF000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F SWAP1 DUP2 AND SWAP2 AND ADD PUSH1 0x10 DUP2 SWAP1 SHR ADD PUSH1 0x20 DUP2 SWAP1 SHR ADD PUSH1 0x40 DUP2 SWAP1 SHR ADD PUSH1 0x80 DUP2 SWAP1 SHR PUSH1 0xFF SWAP1 DUP2 AND SWAP2 AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x16A2 JUMPI POP PUSH3 0x76A700 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x16B5 JUMPI POP PUSH3 0xED4E00 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x3 EQ ISZERO PUSH2 0x16C9 JUMPI POP PUSH4 0x1DA9C00 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x4 EQ ISZERO PUSH2 0x16DD JUMPI POP PUSH4 0x3B53800 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x5 EQ ISZERO PUSH2 0x16F1 JUMPI POP PUSH4 0x9450C00 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x6 EQ ISZERO PUSH2 0x1705 JUMPI POP PUSH4 0x128A1800 PUSH2 0x320 JUMP JUMPDEST DUP2 PUSH1 0x7 EQ ISZERO PUSH2 0x1719 JUMPI POP PUSH4 0x25143000 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 DUP3 LT ISZERO PUSH2 0x1743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x76A700 DUP3 PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH2 0x12C PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0xFF AND MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x1770 DUP6 PUSH2 0x1731 JUMP JUMPDEST ADD SWAP1 POP PUSH2 0x1782 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x231F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 MUL PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x17BB JUMPI DUP2 ISZERO DUP1 PUSH2 0x17AD JUMPI POP DUP3 DUP3 DUP3 DUP2 PUSH2 0x17AA JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x554 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x17D0 JUMPI POP DUP2 DUP4 DUP3 DUP2 PUSH2 0x17CD JUMPI INVALID JUMPDEST SDIV EQ JUMPDEST PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GT PUSH2 0x17EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP9 PUSH1 0x40 ADD MLOAD SGT PUSH2 0x1803 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x190E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1813 DUP9 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x2356 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1832 DUP11 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x40 ADD MLOAD PUSH2 0x2370 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1847 DUP6 DUP15 DUP15 DUP8 DUP16 DUP16 PUSH2 0x239D JUMP JUMPDEST SWAP9 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 PUSH2 0x186A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x190E JUMP JUMPDEST PUSH1 0x40 DUP14 ADD MLOAD PUSH2 0x1879 SWAP1 DUP13 PUSH2 0x247C JUMP JUMPDEST PUSH1 0x40 DUP15 ADD MSTORE PUSH2 0x1888 DUP5 DUP4 PUSH2 0x53E JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH2 0x189C PUSH1 0x0 DUP16 PUSH1 0x40 ADD MLOAD DUP8 PUSH2 0x2498 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 GT ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x190E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18CC DUP8 DUP4 PUSH2 0x24D5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x18EA JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0x190E JUMP JUMPDEST PUSH1 0xA0 DUP16 ADD MSTORE POP PUSH1 0x40 DUP13 ADD MLOAD PUSH2 0x1903 SWAP1 DUP15 SWAP1 DUP6 DUP6 DUP6 PUSH2 0x2588 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP POP POP POP POP POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP6 SLT ISZERO DUP1 ISZERO PUSH2 0x1935 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP6 SGT ISZERO JUMPDEST PUSH2 0x193E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SLT ISZERO DUP1 ISZERO PUSH2 0x1956 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP5 SGT ISZERO JUMPDEST PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x1973 JUMPI POP PUSH4 0xFFFFFFFF DUP4 GT ISZERO JUMPDEST PUSH2 0x197C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 LT DUP1 ISZERO PUSH2 0x1990 JUMPI POP PUSH4 0xFFFFFFFF DUP3 GT ISZERO JUMPDEST PUSH2 0x1999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP6 DUP7 AND OR PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0x50 SHL NOT AND PUSH1 0x1 PUSH1 0x50 SHL SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 MUL SWAP4 SWAP1 SWAP4 OR PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A4D PUSH2 0xFEE DUP5 PUSH2 0x21CF JUMP JUMPDEST SWAP1 POP PUSH2 0x1A59 DUP2 DUP4 PUSH2 0x53E JUMP JUMPDEST SWAP1 POP PUSH2 0x1A68 PUSH2 0xFEE DUP5 DUP4 PUSH2 0x25DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A77 PUSH2 0x2183 JUMP JUMPDEST PUSH2 0xFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1A9F PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0xFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x1AC9 DUP6 DUP6 PUSH2 0x53E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCCB2D5ED DUP11 DUP5 DUP5 PUSH2 0x1AE6 DUP10 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B05 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBCE DUP3 DUP11 DUP11 DUP11 DUP11 PUSH2 0x1324 JUMP JUMPDEST PUSH2 0x1B4C PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B56 PUSH2 0x2651 JUMP JUMPDEST PUSH2 0xFFFF SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP7 MSTORE PUSH6 0x10000000000 DUP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP1 DUP2 AND SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xD8 SHL DUP3 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SWAP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP3 AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x50 SHL DUP3 DIV DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xF0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x12C MUL SWAP1 SWAP3 AND PUSH2 0x100 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C1A DUP4 PUSH2 0x265E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xEF81F216 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8B SWAP2 SWAP1 PUSH2 0x400C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1C9B PUSH2 0x3C75 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CAB DUP9 DUP7 DUP10 PUSH2 0x268E JUMP JUMPDEST PUSH1 0xC0 DUP12 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP11 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 DUP10 ADD MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x1CCF SWAP1 DUP4 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x1CFD JUMPI PUSH1 0x80 DUP9 ADD MLOAD PUSH2 0x1CFA SWAP1 PUSH2 0x1CF4 DUP10 DUP3 PUSH2 0xD0A JUMP JUMPDEST SWAP1 PUSH2 0x2799 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1D1D PUSH2 0x1D12 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0xA0 DUP11 ADD MLOAD SWAP1 PUSH2 0x27B6 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE POP POP PUSH1 0x80 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE POP POP DUP3 MSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D41 PUSH2 0x2651 JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D65 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x27D3 JUMP JUMPDEST DUP2 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1D8A SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1DBD SWAP1 PUSH2 0x151D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1DF2 DUP3 PUSH1 0xE0 ADD MLOAD PUSH2 0x151D JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E27 DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0x27E7 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH6 0x10000000000 MUL PUSH16 0xFFFFFFFFFFFFFFFFFFFFFF0000000000 NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1E63 SWAP1 PUSH2 0x27E7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1E97 SWAP1 PUSH2 0x27E7 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1ECF SWAP1 PUSH2 0x27FD JUMP JUMPDEST DUP2 SLOAD PUSH4 0xFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xD8 SHL MUL PUSH4 0xFFFFFFFF PUSH1 0xD8 SHL NOT SWAP1 SWAP2 AND OR DUP2 SSTORE DUP3 ISZERO PUSH2 0x1F1B JUMPI PUSH1 0x0 PUSH2 0x1F00 DUP5 PUSH2 0x1F94 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F0C DUP6 DUP3 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x1F19 PUSH2 0xFEE DUP7 DUP4 PUSH2 0x2810 JUMP JUMPDEST POP JUMPDEST DUP4 PUSH2 0xFFFF AND PUSH32 0xEF25641E225E493886510CA1AD6584FA7B442B9FEA820A29D1DE3CE27D270FD2 DUP4 PUSH1 0xA0 ADD MLOAD DUP5 PUSH1 0xC0 ADD MLOAD DUP6 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x1F5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F7C JUMPI POP PUSH1 0x0 PUSH2 0x554 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1F89 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x9 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x3 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x2 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1FE5 DUP7 PUSH1 0x20 ADD MLOAD DUP7 DUP7 PUSH2 0x2890 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x1FF4 DUP8 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x2014 JUMPI DUP7 MLOAD PUSH2 0x200D SWAP1 PUSH2 0xFFFF AND DUP8 DUP4 DUP9 PUSH2 0x2917 JUMP JUMPDEST SWAP4 POP PUSH2 0x20A9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201F DUP7 PUSH2 0x1731 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x202F PUSH2 0x10EC DUP7 PUSH2 0x168D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2047 DUP11 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP4 DUP7 DUP12 PUSH2 0x2917 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 EQ ISZERO PUSH2 0x2065 JUMPI POP POP PUSH1 0x40 DUP1 DUP12 ADD MLOAD ADD MLOAD DUP9 PUSH2 0x2094 JUMP JUMPDEST PUSH2 0x207B PUSH2 0x2074 PUSH1 0x1 DUP11 SUB PUSH2 0x168D JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x11AB JUMP JUMPDEST SWAP1 POP PUSH2 0x2091 DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND DUP3 DUP9 DUP14 PUSH2 0x2917 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x20A1 DUP2 DUP6 DUP5 DUP7 DUP16 PUSH2 0x29B6 JUMP JUMPDEST SWAP9 POP POP POP POP POP POP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20D6 PUSH2 0x20D1 PUSH4 0x1DA9C00 PUSH2 0x20CB DUP8 DUP8 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 PUSH2 0x2A14 JUMP JUMPDEST PUSH2 0x2A33 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2A51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20F7 DUP3 PUSH2 0x2AA4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x210B DUP3 PUSH3 0x1DCD65 PUSH1 0x49 SHL PUSH2 0x2AF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2116 DUP2 PUSH2 0x2B2F JUMP JUMPDEST PUSH1 0x7 SIGNEXTEND SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 PUSH2 0x2137 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x178B JUMP JUMPDEST DUP4 PUSH2 0x2B38 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x2167 SWAP1 PUSH2 0x2161 DUP6 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x178B JUMP JUMPDEST SWAP1 PUSH2 0x2B38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SLT PUSH2 0x2177 JUMPI DUP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x1C8B DUP2 PUSH1 0x0 NOT PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x21 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A3 DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP PUSH2 0x320 JUMP JUMPDEST POP DUP1 PUSH2 0x320 JUMP JUMPDEST PUSH8 0xFFFF000000000000 PUSH1 0x30 DUP4 SWAP1 SHL AND PUSH1 0x8 DUP3 SWAP1 SHL OR PUSH1 0x1 OR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21DA PUSH2 0x2B7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xA SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND SWAP5 POP SWAP2 SWAP3 POP DUP4 SLT ISZERO PUSH2 0x2220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A68 DUP4 DUP4 DUP4 PUSH2 0x25DD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 DUP2 ADD SWAP1 SWAP4 MSTORE DUP3 SWAP2 PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x2267 DUP8 DUP8 PUSH2 0x21B1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2277 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH9 0x10000000000000000 DUP2 OR DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x229C JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH2 0x22D5 DUP7 PUSH2 0x2190 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x22E2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x22F7 DUP7 PUSH2 0x2190 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2304 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x232C DUP8 DUP8 DUP8 DUP7 DUP6 PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0x2345 DUP8 PUSH1 0xE0 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP6 DUP9 PUSH2 0x2C46 JUMP JUMPDEST PUSH1 0xC0 SWAP1 SWAP8 ADD SWAP7 SWAP1 SWAP7 MSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x235E PUSH2 0x3CC1 JUMP JUMPDEST PUSH2 0xC20 DUP4 DUP4 PUSH2 0x236B PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2167 PUSH15 0xC097CE7BC90715B34B9F1000000000 PUSH2 0x2161 DUP7 PUSH1 0x0 ADD MLOAD DUP7 PUSH2 0x178B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x23B4 DUP8 DUP12 PUSH1 0x40 ADD MLOAD DUP11 PUSH2 0x2498 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 DUP2 GT ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP PUSH2 0x246F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23E2 DUP13 DUP4 PUSH2 0x24D5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2402 PUSH2 0x23FD PUSH2 0x23F6 DUP5 DUP12 PUSH2 0x20B3 JUMP JUMPDEST DUP12 SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST SWAP1 POP PUSH2 0x2412 DUP14 DUP4 PUSH1 0x0 DUP13 SLT PUSH2 0x2D2F JUMP JUMPDEST SWAP4 POP PUSH2 0x2424 PUSH2 0x23FD PUSH2 0x23F6 DUP7 DUP12 PUSH2 0x20B3 JUMP JUMPDEST SWAP7 POP DUP1 DUP8 SGT ISZERO PUSH2 0x2433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x243F DUP3 DUP10 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2459 PUSH1 0x64 PUSH2 0x2161 PUSH2 0x2452 DUP16 PUSH2 0x2DA7 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x178B JUMP JUMPDEST SWAP6 POP PUSH2 0x2468 PUSH2 0x23FD DUP10 DUP9 PUSH2 0x53E JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2488 DUP4 DUP4 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0x24B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C8B PUSH2 0xB7B PUSH2 0x24C5 DUP5 DUP7 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x24CF DUP7 DUP9 PUSH2 0x247C JUMP JUMPDEST SWAP1 PUSH2 0x2124 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x80 ADD MLOAD GT PUSH2 0x24E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x3B9ACA00 DUP3 GT ISZERO PUSH2 0x24F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP3 GT PUSH2 0x2517 JUMPI DUP3 MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x14C3 SWAP2 SWAP1 PUSH2 0x20CB SWAP1 DUP6 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD DUP3 GT PUSH2 0x254F JUMPI PUSH1 0x40 DUP4 ADD MLOAD DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH2 0x14C3 SWAP4 SWAP3 PUSH2 0xCC9 SWAP3 DUP2 SWAP1 SUB SWAP2 PUSH2 0x20CB SWAP2 DUP9 SUB SWAP1 DUP6 SWAP1 SUB PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0xC20 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xCC9 DUP6 PUSH1 0x20 ADD MLOAD PUSH4 0x3B9ACA00 SUB PUSH2 0x20CB DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD SUB DUP9 PUSH1 0x20 ADD MLOAD DUP9 SUB PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x2596 DUP8 DUP7 PUSH2 0x213D JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP2 POP PUSH2 0x25A8 SWAP1 DUP3 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP10 ADD MSTORE PUSH1 0x0 PUSH2 0x25BF DUP9 DUP7 PUSH2 0x213D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25CD DUP10 DUP10 PUSH2 0x213D JUMP JUMPDEST SWAP11 SWAP2 SWAP10 POP SWAP1 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25F5 PUSH2 0x2B7F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH2 0xFFFF DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x2626 DUP4 PUSH2 0x2DB4 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xA SWAP2 SWAP1 SWAP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB AND PUSH1 0x1 PUSH1 0xA8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x1D PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2669 PUSH2 0x2DE5 JUMP JUMPDEST PUSH2 0xFFFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x26A1 DUP10 DUP9 PUSH2 0x2DF2 JUMP JUMPDEST DUP10 MLOAD SWAP1 SWAP6 POP SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x26C8 SWAP1 PUSH2 0x26BD SWAP1 DUP12 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH4 0x3B9ACA00 SWAP1 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP PUSH2 0x2702 PUSH2 0x26F7 PUSH4 0x1DA9C00 PUSH2 0x26DF DUP6 DUP6 PUSH2 0x1F6D JUMP JUMPDEST DUP2 PUSH2 0x26E6 JUMPI INVALID JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP2 SWAP1 DIV PUSH2 0x11AB JUMP JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD SWAP1 PUSH2 0x27B6 JUMP JUMPDEST SWAP7 POP PUSH2 0x2724 PUSH2 0x2719 PUSH4 0x1DA9C00 PUSH2 0x26DF DUP8 DUP6 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD MLOAD SWAP1 PUSH2 0x27B6 JUMP JUMPDEST SWAP6 POP DUP2 DUP4 EQ ISZERO PUSH2 0x273B JUMPI POP PUSH1 0x0 SWAP4 POP PUSH2 0x2790 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275D PUSH2 0x2752 PUSH4 0x1DA9C00 PUSH2 0x26DF DUP8 DUP7 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0xE0 DUP12 ADD MLOAD SWAP1 PUSH2 0x27B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x276B DUP10 DUP4 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP PUSH2 0x2788 DUP9 PUSH2 0x20CB DUP4 DUP14 PUSH1 0x40 ADD MLOAD PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 PUSH2 0x27B0 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1F6D JUMP JUMPDEST DUP4 PUSH2 0x2A14 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 PUSH2 0x27C5 DUP5 DUP5 PUSH2 0x1F6D JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A14 JUMP JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x58 SHL SUB DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x281A PUSH2 0x2183 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xAD1C095D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP DUP2 SWAP1 PUSH4 0xAD1C095D SWAP1 PUSH2 0x2862 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x4127 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x287C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT PUSH2 0x28A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP6 GT ISZERO PUSH2 0x28AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x28B9 DUP5 PUSH2 0x1731 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP7 DUP2 GT PUSH2 0x2911 JUMPI PUSH1 0x0 PUSH2 0x28DA PUSH2 0x28D3 DUP4 PUSH2 0x168D JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x11AB JUMP JUMPDEST SWAP1 POP DUP7 DUP2 EQ ISZERO PUSH2 0x28F2 JUMPI POP SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2317 SWAP1 POP JUMP JUMPDEST DUP7 DUP2 GT ISZERO PUSH2 0x2908 JUMPI POP SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x2317 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x28BE JUMP JUMPDEST POP PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2922 PUSH2 0x2E8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x76A700 PUSH2 0x2933 DUP6 PUSH2 0x1731 JUMP JUMPDEST PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP12 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND DUP2 PUSH2 0x299A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C2 SWAP1 PUSH2 0x417E JUMP JUMPDEST PUSH2 0x29A7 DUP2 DUP5 DUP5 DUP13 DUP13 PUSH2 0x2C46 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP7 LT PUSH2 0x29C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP3 LT PUSH2 0x29D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 LT PUSH2 0x29F6 JUMPI PUSH2 0x29EF DUP5 PUSH2 0xCC9 DUP9 DUP9 SUB PUSH2 0x20CB DUP4 DUP9 SUB DUP12 DUP9 SUB PUSH2 0x1F6D JUMP JUMPDEST SWAP1 POP PUSH2 0x535 JUMP JUMPDEST PUSH2 0x29EF PUSH2 0x2A0D DUP8 DUP8 SUB PUSH2 0x20CB DUP7 DUP9 SUB DUP11 DUP8 SUB PUSH2 0x1F6D JUMP JUMPDEST DUP6 SWAP1 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2A22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2A2B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0x7FFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 SHL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND PUSH1 0x0 EQ ISZERO PUSH2 0x2A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0x40 DUP6 PUSH1 0xF SIGNEXTEND SWAP1 SHL DUP2 PUSH2 0x2A79 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x2A9B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO JUMPDEST PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x2AB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2AD6 JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST PUSH2 0x554 PUSH1 0x80 DUP4 PUSH1 0xF SIGNEXTEND PUSH17 0x171547652B82FE1777D0FFDA0D23A7D12 MUL SWAP1 SAR PUSH2 0x2E9A JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF DUP4 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND MUL PUSH1 0x40 SAR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB NOT DUP2 SLT DUP1 ISZERO SWAP1 PUSH2 0x2A9B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 SGT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF SIGNEXTEND PUSH1 0x40 SAR SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT EQ DUP1 ISZERO PUSH2 0x2B4E JUMPI POP PUSH1 0x1 PUSH1 0xFF SHL DUP4 EQ JUMPDEST ISZERO PUSH2 0x2B58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2B61 JUMPI INVALID JUMPDEST SDIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SLT PUSH2 0x2B78 JUMPI DUP2 PUSH2 0xC20 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x6 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B96 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 DUP11 MSTORE SWAP1 DUP10 ADD DUP8 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB DUP1 DUP3 AND SWAP4 DUP12 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x50 SHL DUP2 DIV SWAP1 SWAP3 AND PUSH1 0x60 DUP11 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 SHL DUP4 DIV DUP2 AND PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND PUSH1 0xE0 DUP10 ADD MSTORE SWAP1 SWAP2 POP DUP1 DUP5 ISZERO PUSH2 0x2C35 JUMPI PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP10 ADD MSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x2C54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0x2C63 JUMPI POP DUP4 PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C6F DUP4 DUP9 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2C82 JUMPI DUP6 SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8E DUP3 DUP7 PUSH2 0x3953 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2CA0 PUSH4 0x3B9ACA00 DUP4 PUSH2 0xD0A JUMP JUMPDEST SWAP1 POP PUSH2 0x127C PUSH4 0x3B9ACA00 PUSH2 0x20CB PUSH2 0x2CB7 DUP11 DUP6 PUSH2 0x1F6D JUMP JUMPDEST PUSH2 0xCC9 DUP13 DUP8 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x1B PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x2CD6 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE1 DUP5 PUSH2 0x3966 JUMP JUMPDEST PUSH2 0xFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP SWAP1 PUSH1 0x4 DUP7 LT PUSH2 0x2D07 JUMPI PUSH1 0x1 PUSH2 0x2D0A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x2 DUP2 LT PUSH2 0x2D17 JUMPI INVALID JUMPDEST ADD SLOAD SWAP1 POP PUSH2 0x2D25 DUP3 DUP3 PUSH2 0x399F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2D4E PUSH1 0x64 PUSH2 0x20CB DUP8 PUSH1 0xE0 ADD MLOAD DUP8 PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xA0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2D63 JUMPI POP PUSH1 0xA0 DUP5 ADD MLOAD JUMPDEST DUP5 PUSH1 0xC0 ADD MLOAD DUP2 GT ISZERO PUSH2 0x2D76 JUMPI POP PUSH1 0xC0 DUP5 ADD MLOAD JUMPDEST DUP3 ISZERO PUSH2 0x2D8D JUMPI PUSH2 0x2D86 DUP5 DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0xF89 JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x2D9C JUMPI DUP1 DUP5 SUB PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 ADD MLOAD PUSH1 0x18 SHR PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLT DUP1 ISZERO SWAP1 PUSH2 0xAF4 JUMPI POP PUSH11 0x7FFFFFFFFFFFFFFFFFFFFF DUP3 SGT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0x1F PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x2E3F JUMPI PUSH2 0x2E3C PUSH2 0x2E23 DUP7 PUSH1 0xC0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x1F6D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE0 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0x2E36 SWAP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP1 PUSH2 0x3953 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2E4A DUP8 PUSH2 0x3ABE JUMP JUMPDEST SWAP1 POP PUSH2 0x2E56 DUP2 DUP4 PUSH2 0x24D5 JUMP JUMPDEST SWAP5 POP DUP2 ISZERO PUSH2 0x2E6D JUMPI PUSH2 0x2E6A DUP2 DUP7 PUSH1 0x1 PUSH2 0x2D2F JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD ISZERO PUSH2 0x2E84 JUMPI PUSH2 0x2E81 DUP6 DUP4 PUSH2 0x3AF1 JUMP JUMPDEST SWAP3 POP JUMPDEST POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x554 PUSH1 0xA PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x46 SHL DUP3 PUSH1 0xF SIGNEXTEND SLT PUSH2 0x2EAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH9 0x3FFFFFFFFFFFFFFFFF NOT DUP3 PUSH1 0xF SIGNEXTEND SLT ISZERO PUSH2 0x2ECC JUMPI POP PUSH1 0x0 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7F SHL PUSH1 0x0 PUSH8 0x8000000000000000 DUP5 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2EFE JUMPI PUSH17 0x16A09E667F3BCC908B2FB1366EA957D3E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x4000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2F2B JUMPI PUSH17 0x1306FE0A31B7152DE8D5A46305C85EDEC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x2000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2F58 JUMPI PUSH17 0x1172B83C7D517ADCDF7C8C50EB14A791F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x1000000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2F85 JUMPI PUSH17 0x10B5586CF9890F6298B92B71842A98363 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x800000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2FB2 JUMPI PUSH17 0x1059B0D31585743AE7C548EB68CA417FD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x400000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x2FDF JUMPI PUSH17 0x102C9A3E778060EE6F7CACA4F7A29BDE8 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x200000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x300C JUMPI PUSH17 0x10163DA9FB33356D84A66AE336DCDFA3F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH8 0x100000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3039 JUMPI PUSH17 0x100B1AFA5ABCBED6129AB13EC11DC9543 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x80000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3065 JUMPI PUSH17 0x10058C86DA1C09EA1FF19D294CF2F679B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x40000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3091 JUMPI PUSH17 0x1002C605E2E8CEC506D21BFC89A23A00F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x20000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x30BD JUMPI PUSH17 0x100162F3904051FA128BCA9C55C31E5DF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x10000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x30E9 JUMPI PUSH17 0x1000B175EFFDC76BA38E31671CA939725 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x8000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3115 JUMPI PUSH17 0x100058BA01FB9F96D6CACD4B180917C3D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x4000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3141 JUMPI PUSH17 0x10002C5CC37DA9491D0985C348C68E7B3 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x2000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x316D JUMPI PUSH17 0x1000162E525EE054754457D5995292026 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH7 0x1000000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3199 JUMPI PUSH17 0x10000B17255775C040618BF4A4ADE83FC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x800000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x31C4 JUMPI PUSH17 0x1000058B91B5BC9AE2EED81E9B7D4CFAB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x400000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x31EF JUMPI PUSH17 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x200000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x321A JUMPI PUSH17 0x10000162E43F4F831060E02D839A9D16D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x100000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3245 JUMPI PUSH17 0x100000B1721BCFC99D9F890EA06911763 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x80000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3270 JUMPI PUSH17 0x10000058B90CF1E6D97F9CA14DBCC1628 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x40000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x329B JUMPI PUSH17 0x1000002C5C863B73F016468F6BAC5CA2B MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x20000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x32C6 JUMPI PUSH17 0x100000162E430E5A18F6119E3C02282A5 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH6 0x10000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x32F1 JUMPI PUSH17 0x1000000B1721835514B86E6D96EFD1BFE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x8000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x331B JUMPI PUSH17 0x100000058B90C0B48C6BE5DF846C5B2EF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x4000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3345 JUMPI PUSH17 0x10000002C5C8601CC6B9E94213C72737A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x2000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x336F JUMPI PUSH17 0x1000000162E42FFF037DF38AA2B219F06 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x1000000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3399 JUMPI PUSH17 0x10000000B17217FBA9C739AA5819F44F9 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x800000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x33C3 JUMPI PUSH17 0x1000000058B90BFCDEE5ACD3C1CEDC823 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x400000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x33ED JUMPI PUSH17 0x100000002C5C85FE31F35A6A30DA1BE50 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x200000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3417 JUMPI PUSH17 0x10000000162E42FF0999CE3541B9FFFCF MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH5 0x100000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3441 JUMPI PUSH17 0x100000000B17217F80F4EF5AADDA45554 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x80000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x346A JUMPI PUSH17 0x10000000058B90BFBF8479BD5A81B51AD MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x40000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3493 JUMPI PUSH17 0x1000000002C5C85FDF84BD62AE30A74CC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x20000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x34BC JUMPI PUSH17 0x100000000162E42FEFB2FED257559BDAA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x10000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x34E5 JUMPI PUSH17 0x1000000000B17217F7D5A7716BBA4A9AE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x8000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x350E JUMPI PUSH17 0x100000000058B90BFBE9DDBAC5E109CCE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x4000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3537 JUMPI PUSH17 0x10000000002C5C85FDF4B15DE6F17EB0D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x2000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3560 JUMPI PUSH17 0x1000000000162E42FEFA494F1478FDE05 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH4 0x1000000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3589 JUMPI PUSH17 0x10000000000B17217F7D20CF927C8E94C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x800000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x35B1 JUMPI PUSH17 0x1000000000058B90BFBE8F71CB4E4B33D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x400000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x35D9 JUMPI PUSH17 0x100000000002C5C85FDF477B662B26945 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x200000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3601 JUMPI PUSH17 0x10000000000162E42FEFA3AE53369388C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x100000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3629 JUMPI PUSH17 0x100000000000B17217F7D1D351A389D40 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x80000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3651 JUMPI PUSH17 0x10000000000058B90BFBE8E8B2D3D4EDE MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x40000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3679 JUMPI PUSH17 0x1000000000002C5C85FDF4741BEA6E77E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x20000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36A1 JUMPI PUSH17 0x100000000000162E42FEFA39FE95583C2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH3 0x10000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36C9 JUMPI PUSH17 0x1000000000000B17217F7D1CFB72B45E1 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x8000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x36F0 JUMPI PUSH17 0x100000000000058B90BFBE8E7CC35C3F0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x4000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3717 JUMPI PUSH17 0x10000000000002C5C85FDF473E242EA38 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x2000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x373E JUMPI PUSH17 0x1000000000000162E42FEFA39F02B772C MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x1000 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3765 JUMPI PUSH17 0x10000000000000B17217F7D1CF7D83C1A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x800 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x378C JUMPI PUSH17 0x1000000000000058B90BFBE8E7BDCBE2E MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x400 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x37B3 JUMPI PUSH17 0x100000000000002C5C85FDF473DEA871F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x200 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x37DA JUMPI PUSH17 0x10000000000000162E42FEFA39EF44D91 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x100 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3801 JUMPI PUSH17 0x100000000000000B17217F7D1CF79E949 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x80 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3827 JUMPI PUSH17 0x10000000000000058B90BFBE8E7BCE544 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x40 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x384D JUMPI PUSH17 0x1000000000000002C5C85FDF473DE6ECA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3873 JUMPI PUSH17 0x100000000000000162E42FEFA39EF366F MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x10 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3899 JUMPI PUSH17 0x1000000000000000B17217F7D1CF79AFA MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x8 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x38BF JUMPI PUSH17 0x100000000000000058B90BFBE8E7BCD6D MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x4 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x38E5 JUMPI PUSH17 0x10000000000000002C5C85FDF473DE6B2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x2 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x390B JUMPI PUSH17 0x1000000000000000162E42FEFA39EF358 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 AND PUSH1 0xF SIGNEXTEND SGT ISZERO PUSH2 0x3931 JUMPI PUSH17 0x10000000000000000B17217F7D1CF79AB MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0xF DUP4 DUP2 SIGNEXTEND PUSH1 0x40 SAR PUSH1 0x3F SUB SWAP1 SIGNEXTEND SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x7F SHL SUB DUP2 GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC20 PUSH2 0x27B0 DUP5 PUSH4 0x3B9ACA00 PUSH2 0x1F6D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 LT PUSH2 0x3975 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP3 GT ISZERO PUSH2 0x3983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x3994 JUMPI PUSH1 0x4 DUP3 SUB PUSH2 0x3996 JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x8 MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39A7 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x64 PUSH4 0x3B9ACA00 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x20 DUP2 LT PUSH2 0x39BD JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x39C6 JUMPI INVALID JUMPDEST DIV DUP2 MSTORE PUSH1 0x64 PUSH4 0x3B9ACA00 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x1 ADD PUSH1 0x20 DUP2 LT PUSH2 0x39E2 JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x39EB JUMPI INVALID JUMPDEST DIV DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3A10 DUP3 PUSH1 0x2 DUP6 PUSH1 0xFF AND ADD PUSH1 0x20 DUP2 LT PUSH2 0x3A0A JUMPI INVALID JUMPDEST BYTE PUSH2 0x3B0A JUMP JUMPDEST PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x100 SWAP1 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x3 ADD PUSH1 0x20 DUP2 LT PUSH2 0x3A2D JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x3A36 JUMPI INVALID JUMPDEST DIV PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH2 0x100 SWAP1 DUP4 PUSH1 0xFF DUP7 AND PUSH1 0x4 ADD PUSH1 0x20 DUP2 LT PUSH2 0x3A57 JUMPI INVALID JUMPDEST BYTE MUL DUP2 PUSH2 0x3A60 JUMPI INVALID JUMPDEST DIV PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0x7A120 DUP3 PUSH1 0xFF DUP6 AND PUSH1 0x5 ADD PUSH1 0x20 DUP2 LT PUSH2 0x3A7C JUMPI INVALID JUMPDEST BYTE MUL PUSH1 0xA0 DUP3 ADD MSTORE PUSH3 0x2625A0 DUP3 PUSH1 0xFF DUP6 AND PUSH1 0x6 ADD PUSH1 0x20 DUP2 LT PUSH2 0x3A99 JUMPI INVALID JUMPDEST BYTE MUL PUSH1 0xC0 DUP3 ADD MSTORE DUP2 PUSH1 0xFF DUP5 AND PUSH1 0x7 ADD PUSH1 0x20 DUP2 LT PUSH2 0x3AB2 JUMPI INVALID JUMPDEST BYTE PUSH1 0xE0 DUP3 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AC6 PUSH2 0x3CC1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD0 PUSH2 0x2CC1 JUMP JUMPDEST PUSH2 0xFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0x31C SWAP1 DUP3 PUSH2 0x399F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC20 PUSH2 0x3B00 DUP5 DUP5 PUSH2 0x1F6D JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x2A14 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x96 LT PUSH2 0x3B25 JUMPI PUSH1 0xFF DUP3 AND PUSH3 0x2625A0 MUL PUSH2 0x554 JUMP JUMPDEST POP PUSH1 0x95 NOT PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND ADD PUSH3 0xE4E1C0 MUL PUSH4 0x165A0BC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD PUSH2 0x3C03 PUSH2 0x3C10 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3C70 JUMPI INVALID JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3D2E JUMPI DUP1 DUP2 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D45 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D6F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x3D86 JUMPI INVALID JUMPDEST PUSH2 0x3D93 DUP3 DUP4 DUP6 MUL ADD PUSH2 0x4428 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD PUSH1 0xC0 DUP1 DUP8 MUL DUP10 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x3DB1 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x3E39 JUMPI DUP2 DUP4 DUP13 SUB SLT ISZERO PUSH2 0x3DC9 JUMPI DUP9 DUP10 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 ADD DUP2 DUP2 LT DUP10 DUP3 GT OR ISZERO PUSH2 0x3DDE JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x3DE9 DUP6 PUSH2 0x3E57 JUMP JUMPDEST DUP2 MSTORE DUP5 DUP10 ADD CALLDATALOAD DUP10 DUP3 ADD MSTORE DUP2 DUP6 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP6 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 PUSH2 0x3E20 DUP3 DUP7 ADD PUSH2 0x3E48 JUMP JUMPDEST SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP6 MSTORE SWAP4 DUP7 ADD SWAP4 SWAP2 DUP2 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3DB3 JUMP JUMPDEST POP SWAP2 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x4 DUP2 LT PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3E80 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3E89 DUP7 PUSH2 0x3D06 JUMP JUMPDEST SWAP5 POP PUSH2 0x3E97 PUSH1 0x20 DUP8 ADD PUSH2 0x3E57 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3EB3 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP1 DUP8 ADD SWAP1 PUSH1 0x80 DUP3 DUP11 SUB SLT ISZERO PUSH2 0x3EC6 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR ISZERO PUSH2 0x3EDB JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP3 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3EEC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3EF8 DUP12 DUP3 DUP7 ADD PUSH2 0x3D5F JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x3F0C JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x3F18 DUP12 DUP3 DUP7 ADD PUSH2 0x3D5F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP3 DUP4 ADD CALLDATALOAD DUP4 DUP3 ADD MSTORE SWAP5 POP SWAP1 DUP8 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x3F45 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x3F52 DUP9 DUP3 DUP10 ADD PUSH2 0x3D1D JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3F7A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3F83 DUP7 PUSH2 0x3D06 JUMP JUMPDEST SWAP5 POP PUSH2 0x3F91 PUSH1 0x20 DUP8 ADD PUSH2 0x3E57 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH5 0xFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3FAA JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FC5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3F52 DUP9 DUP3 DUP10 ADD PUSH2 0x3D1D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3FE5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x3FEE DUP5 PUSH2 0x3E57 JUMP JUMPDEST SWAP3 POP PUSH2 0x3FFC PUSH1 0x20 DUP6 ADD PUSH2 0x3D06 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x401E JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40A0 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH2 0xFFFF AND DUP9 MSTORE DUP4 DUP2 ADD MLOAD DUP5 DUP10 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP10 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP1 PUSH1 0x4 DUP3 LT PUSH2 0x408B JUMPI INVALID JUMPDEST DUP9 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4042 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40A0 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x4153 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x40AB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x535 DUP2 DUP6 PUSH2 0x40AB JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x13585C9AD95D081B9BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F6E206964696F73796E637261746963206D61747572697479000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x10D1CE881B9BC81B585C9AD95D1CC81B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616465206661696C65642C206C6971756964697479000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x4F766572206D617820617373657473 PUSH1 0x88 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C6964206D61747572697479 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x10D1CE881B585C9AD95D081A5B99195E08189BDD5B99 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081B585C9AD95D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420626C6F636B2074696D65000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x5472616465206661696C65642C20736C697070616765 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE DUP4 MLOAD PUSH1 0x80 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x43C8 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x402F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x3F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x43E5 DUP3 DUP3 PUSH2 0x402F JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD PUSH1 0xA0 DUP6 ADD MSTORE POP POP POP PUSH1 0x20 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x4444 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xE744 0x23 JUMP STATICCALL 0xB1 SAR 0xB5 DUP8 DUP13 0xAD 0xE4 0xC5 PUSH3 0x24D692 POP 0xBB SWAP3 0xCB 0x28 PUSH26 0xD01D6B0E3DE964B864736F6C6343000706003300000000000000 ", "sha1": "8e4ae6e56b6a890a8e869e054c4c5ebbfdcafba4", "source": "// SPDX-License-Identifier: BSUL-1.1\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport {\n    PrimeRate,\n    PortfolioState,\n    AccountContext,\n    MarketParameters,\n    CashGroupParameters,\n    PrimeRate,\n    TradeActionType\n} from \"../../global/Types.sol\";\nimport {Constants} from \"../../global/Constants.sol\";\nimport {SafeInt256} from \"../../math/SafeInt256.sol\";\nimport {SafeUint256} from \"../../math/SafeUint256.sol\";\n\nimport {Emitter} from \"../../internal/Emitter.sol\";\nimport {BalanceHandler} from \"../../internal/balances/BalanceHandler.sol\";\nimport {InterestRateCurve} from \"../../internal/markets/InterestRateCurve.sol\";\nimport {Market} from \"../../internal/markets/Market.sol\";\nimport {DateTime} from \"../../internal/markets/DateTime.sol\";\nimport {CashGroup} from \"../../internal/markets/CashGroup.sol\";\nimport {PrimeRateLib} from \"../../internal/pCash/PrimeRateLib.sol\";\nimport {PortfolioHandler} from \"../../internal/portfolio/PortfolioHandler.sol\";\nimport {BitmapAssetsHandler} from \"../../internal/portfolio/BitmapAssetsHandler.sol\";\nimport {nTokenHandler} from \"../../internal/nToken/nTokenHandler.sol\";\nimport {AccountContextHandler} from \"../../internal/AccountContextHandler.sol\";\n\nlibrary TradingAction {\n    using PortfolioHandler for PortfolioState;\n    using AccountContextHandler for AccountContext;\n    using Market for MarketParameters;\n    using CashGroup for CashGroupParameters;\n    using PrimeRateLib for PrimeRate;\n    using SafeInt256 for int256;\n    using SafeUint256 for uint256;\n\n    /// @dev Used internally to manage stack issues\n    struct TradeContext {\n        int256 cash;\n        int256 fCashAmount;\n        int256 fee;\n        int256 netCash;\n        int256 totalFee;\n        uint256 blockTime;\n    }\n\n    /// @notice Executes a trade for leveraged vaults (they can only lend or borrow).\n    /// @param currencyId the currency id to lend or borrow\n    /// @param trade the bytes32 encoded trade data\n    function executeVaultTrade(uint16 currencyId, address vault, bytes32 trade)\n        external\n        returns (int256 netPrimeCash) {\n        CashGroupParameters memory cashGroup = CashGroup.buildCashGroupStateful(currencyId);\n        MarketParameters memory market;\n        TradeActionType tradeType = TradeActionType(uint256(uint8(bytes1(trade))));\n\n        // During a vault trade, the vault executes the trade on behalf of the account\n        (netPrimeCash, /* */) = _executeLendBorrowTrade(vault, cashGroup, market, tradeType, block.timestamp, trade);\n    }\n\n    /// @notice Executes trades for a bitmapped portfolio, cannot be called directly\n    /// @param account account to put fCash assets in\n    /// @param bitmapCurrencyId currency id of the bitmap\n    /// @param nextSettleTime used to calculate the relative positions in the bitmap\n    /// @param trades tightly packed array of trades, schema is defined in global/Types.sol\n    /// @return netCash generated by trading\n    /// @return didIncurDebt if the bitmap had an fCash position go negative\n    function executeTradesBitmapBatch(\n        address account,\n        uint16 bitmapCurrencyId,\n        uint40 nextSettleTime,\n        bytes32[] calldata trades\n    ) external returns (int256, bool) {\n        CashGroupParameters memory cashGroup = CashGroup.buildCashGroupStateful(bitmapCurrencyId);\n        MarketParameters memory market;\n        bool didIncurDebt;\n        TradeContext memory c;\n        c.blockTime = block.timestamp;\n\n        for (uint256 i = 0; i < trades.length; i++) {\n            uint256 maturity;\n            (maturity, c.cash, c.fCashAmount) = _executeTrade(\n                account,\n                cashGroup,\n                market,\n                trades[i],\n                c.blockTime\n            );\n\n            c.fCashAmount = BitmapAssetsHandler.addifCashAsset(\n                account,\n                bitmapCurrencyId,\n                maturity,\n                nextSettleTime,\n                c.fCashAmount\n            );\n\n            didIncurDebt = didIncurDebt || (c.fCashAmount < 0);\n            c.netCash = c.netCash.add(c.cash);\n        }\n\n        return (c.netCash, didIncurDebt);\n    }\n\n    /// @notice Executes trades for a bitmapped portfolio, cannot be called directly\n    /// @param account account to put fCash assets in\n    /// @param currencyId currency id to trade\n    /// @param portfolioState used to update the positions in the portfolio\n    /// @param trades tightly packed array of trades, schema is defined in global/Types.sol\n    /// @return resulting portfolio state\n    /// @return netCash generated by trading\n    function executeTradesArrayBatch(\n        address account,\n        uint16 currencyId,\n        PortfolioState memory portfolioState,\n        bytes32[] calldata trades\n    ) external returns (PortfolioState memory, int256) {\n        CashGroupParameters memory cashGroup = CashGroup.buildCashGroupStateful(currencyId);\n        MarketParameters memory market;\n        TradeContext memory c;\n        c.blockTime = block.timestamp;\n\n        for (uint256 i = 0; i < trades.length; i++) {\n            TradeActionType tradeType = TradeActionType(uint256(uint8(bytes1(trades[i]))));\n\n            if (\n                tradeType == TradeActionType.AddLiquidity ||\n                tradeType == TradeActionType.RemoveLiquidity\n            ) {\n                revert();\n            } else {\n                uint256 maturity;\n                (maturity, c.cash, c.fCashAmount) = _executeTrade(\n                    account,\n                    cashGroup,\n                    market,\n                    trades[i],\n                    c.blockTime\n                );\n\n                portfolioState.addAsset(\n                    currencyId,\n                    maturity,\n                    Constants.FCASH_ASSET_TYPE,\n                    c.fCashAmount\n                );\n            }\n\n            c.netCash = c.netCash.add(c.cash);\n        }\n\n        return (portfolioState, c.netCash);\n    }\n\n    /// @notice Executes a non-liquidity token trade\n    /// @param account the initiator of the trade\n    /// @param cashGroup parameters for the trade\n    /// @param market market memory location to use\n    /// @param trade bytes32 encoding of the particular trade\n    /// @param blockTime the current block time\n    /// @return maturity of the asset that was traded\n    /// @return cashAmount - a positive or negative cash amount accrued to the account\n    /// @return fCashAmount - a positive or negative fCash amount accrued to the account\n    function _executeTrade(\n        address account,\n        CashGroupParameters memory cashGroup,\n        MarketParameters memory market,\n        bytes32 trade,\n        uint256 blockTime\n    )\n        private\n        returns (\n            uint256 maturity,\n            int256 cashAmount,\n            int256 fCashAmount\n        )\n    {\n        TradeActionType tradeType = TradeActionType(uint256(uint8(bytes1(trade))));\n        if (tradeType == TradeActionType.PurchaseNTokenResidual) {\n            (maturity, cashAmount, fCashAmount) = _purchaseNTokenResidual(\n                account, cashGroup, blockTime, trade\n            );\n        } else if (tradeType == TradeActionType.Lend || tradeType == TradeActionType.Borrow) {\n            (cashAmount, fCashAmount) = _executeLendBorrowTrade(\n                account, cashGroup, market, tradeType, blockTime, trade\n            );\n            require(cashAmount != 0, \"Trade failed, liquidity\");\n\n            // This is a little ugly but required to deal with stack issues. We know the market is loaded\n            // with the proper maturity inside _executeLendBorrowTrade\n            maturity = market.maturity;\n        } else {\n            revert();\n        }\n    }\n\n    /// @notice Executes a lend or borrow trade\n    /// @param cashGroup parameters for the trade\n    /// @param market market memory location to use\n    /// @param tradeType whether this is add or remove liquidity\n    /// @param blockTime the current block time\n    /// @param trade bytes32 encoding of the particular trade\n    /// @return cashAmount - a positive or negative cash amount accrued to the account\n    /// @return fCashAmount -  a positive or negative fCash amount accrued to the account\n    function _executeLendBorrowTrade(\n        address account,\n        CashGroupParameters memory cashGroup,\n        MarketParameters memory market,\n        TradeActionType tradeType,\n        uint256 blockTime,\n        bytes32 trade\n    )\n        private\n        returns (\n            int256 cashAmount,\n            int256 fCashAmount\n        )\n    {\n        uint256 marketIndex = uint256(uint8(bytes1(trade << 8)));\n        // NOTE: this updates the market in memory\n        cashGroup.loadMarket(market, marketIndex, false, blockTime);\n\n        fCashAmount = int256(uint88(bytes11(trade << 16)));\n        // fCash to account will be negative here\n        if (tradeType == TradeActionType.Borrow) fCashAmount = fCashAmount.neg();\n\n        uint256 postFeeInterestRate;\n        (cashAmount, postFeeInterestRate) = market.executeTrade(\n            account,\n            cashGroup,\n            fCashAmount,\n            market.maturity.sub(blockTime),\n            marketIndex\n        );\n\n        uint256 rateLimit = uint256(uint32(bytes4(trade << 104)));\n        if (rateLimit != 0) {\n            if (tradeType == TradeActionType.Borrow) {\n                // Do not allow borrows over the rate limit\n                require(postFeeInterestRate <= rateLimit, \"Trade failed, slippage\");\n            } else {\n                // Do not allow lends under the rate limit\n                require(postFeeInterestRate >= rateLimit, \"Trade failed, slippage\");\n            }\n        }\n    }\n\n    /// @notice Allows an account to purchase ntoken residuals\n    /// @param purchaser account that is purchasing the residuals\n    /// @param cashGroup parameters for the trade\n    /// @param blockTime the current block time\n    /// @param trade bytes32 encoding of the particular trade\n    /// @return maturity: the date of the idiosyncratic maturity where fCash will be exchanged\n    /// @return cashAmount: a positive or negative cash amount that the account will receive or pay\n    /// @return fCashAmount: a positive or negative fCash amount that the account will receive\n    function _purchaseNTokenResidual(\n        address purchaser,\n        CashGroupParameters memory cashGroup,\n        uint256 blockTime,\n        bytes32 trade\n    )\n        internal\n        returns (\n            uint256,\n            int256,\n            int256\n        )\n    {\n        uint256 maturity = uint256(uint32(uint256(trade) >> 216));\n        int256 fCashAmountToPurchase = int88(uint88(uint256(trade) >> 128));\n        require(maturity > blockTime, \"Invalid maturity\");\n        // Require that the residual to purchase does not fall on an existing maturity (i.e.\n        // it is an idiosyncratic maturity)\n        require(\n            !DateTime.isValidMarketMaturity(cashGroup.maxMarketIndex, maturity, blockTime),\n            \"Non idiosyncratic maturity\"\n        );\n\n        address nTokenAddress = nTokenHandler.nTokenAddress(cashGroup.currencyId);\n        // prettier-ignore\n        (\n            /* currencyId */,\n            /* incentiveRate */,\n            uint256 lastInitializedTime,\n            /* assetArrayLength */,\n            bytes6 parameters\n        ) = nTokenHandler.getNTokenContext(nTokenAddress);\n\n        // Restrict purchasing until some amount of time after the last initialized time to ensure that arbitrage\n        // opportunities are not available (by generating residuals and then immediately purchasing them at a discount)\n        // This is always relative to the last initialized time which is set at utc0 when initialized, not the\n        // reference time. Therefore we will always restrict residual purchase relative to initialization, not reference.\n        // This is safer, prevents an attack if someone forces residuals and then somehow prevents market initialization\n        // until the residual time buffer passes.\n        require(\n            blockTime >\n                lastInitializedTime.add(\n                    uint256(uint8(parameters[Constants.RESIDUAL_PURCHASE_TIME_BUFFER])) * 1 hours\n                ),\n            \"Insufficient block time\"\n        );\n\n        int256 notional =\n            BitmapAssetsHandler.getifCashNotional(nTokenAddress, cashGroup.currencyId, maturity);\n        // Check if amounts are valid and set them to the max available if necessary\n        if (notional < 0 && fCashAmountToPurchase < 0) {\n            // Does not allow purchasing more negative notional than available\n            if (fCashAmountToPurchase < notional) fCashAmountToPurchase = notional;\n        } else if (notional > 0 && fCashAmountToPurchase > 0) {\n            // Does not allow purchasing more positive notional than available\n            if (fCashAmountToPurchase > notional) fCashAmountToPurchase = notional;\n        } else {\n            // Does not allow moving notional in the opposite direction\n            revert(\"Invalid amount\");\n        }\n\n        // If fCashAmount > 0 then this will return netPrimeCash > 0, if fCashAmount < 0 this will return\n        // netPrimeCash < 0. fCashAmount will go to the purchaser and netPrimeCash will go to the nToken.\n        int256 netPrimeCashNToken =\n            _getResidualPricePrimeCash(\n                cashGroup,\n                maturity,\n                blockTime,\n                fCashAmountToPurchase,\n                parameters\n            );\n        \n        // Emit proper events for transferring cash and fCash between nToken and purchaser\n        Emitter.emitTransferPrimeCash(\n            purchaser, nTokenAddress, cashGroup.currencyId, netPrimeCashNToken\n        );\n\n        // If fCashAmountToPurchase > 0 then fCash will be transferred from nToken to purchaser. If fCashAmountToPurchase\n        // is negative, then purchaser will transfer fCash to the nToken. The addresses will be flipped inside emitTransferfCash\n        // in that case.\n        Emitter.emitTransferfCash(\n            nTokenAddress, purchaser, cashGroup.currencyId, maturity, fCashAmountToPurchase\n        );\n\n        _updateNTokenPortfolio(\n            nTokenAddress,\n            cashGroup.currencyId,\n            maturity,\n            lastInitializedTime,\n            fCashAmountToPurchase,\n            netPrimeCashNToken\n        );\n\n        return (maturity, netPrimeCashNToken.neg(), fCashAmountToPurchase);\n    }\n\n    /// @notice Returns the amount of asset cash required to purchase the nToken residual\n    function _getResidualPricePrimeCash(\n        CashGroupParameters memory cashGroup,\n        uint256 maturity,\n        uint256 blockTime,\n        int256 fCashAmount,\n        bytes6 parameters\n    ) internal view returns (int256) {\n        uint256 oracleRate = cashGroup.calculateOracleRate(maturity, blockTime);\n        // Residual purchase incentive is specified in ten basis point increments\n        uint256 purchaseIncentive =\n            uint256(uint8(parameters[Constants.RESIDUAL_PURCHASE_INCENTIVE])) *\n                Constants.TEN_BASIS_POINTS;\n\n        if (fCashAmount > 0) {\n            // When fCash is positive then we add the purchase incentive, the purchaser\n            // can pay less cash for the fCash relative to the oracle rate\n            oracleRate = oracleRate.add(purchaseIncentive);\n        } else if (oracleRate > purchaseIncentive) {\n            // When fCash is negative, we reduce the interest rate that the purchaser will\n            // borrow at, we do this check to ensure that we floor the oracle rate at zero.\n            oracleRate = oracleRate.sub(purchaseIncentive);\n        } else {\n            // If the oracle rate is less than the purchase incentive floor the interest rate at zero\n            oracleRate = 0;\n        }\n\n        int256 exchangeRate =\n            InterestRateCurve.getfCashExchangeRate(oracleRate, maturity.sub(blockTime));\n\n        // Returns the net asset cash from the nToken perspective, which is the same sign as the fCash amount\n        return\n            cashGroup.primeRate.convertFromUnderlying(fCashAmount.divInRatePrecision(exchangeRate));\n    }\n\n    function _updateNTokenPortfolio(\n        address nTokenAddress,\n        uint16 currencyId,\n        uint256 maturity,\n        uint256 lastInitializedTime,\n        int256 fCashAmountToPurchase,\n        int256 netPrimeCashNToken\n    ) private {\n        int256 finalNotional = BitmapAssetsHandler.addifCashAsset(\n            nTokenAddress,\n            currencyId,\n            maturity,\n            lastInitializedTime,\n            fCashAmountToPurchase.neg() // the nToken takes on the negative position\n        );\n\n        // Defensive check to ensure that fCash amounts do not flip signs\n        require(\n            (fCashAmountToPurchase > 0 && finalNotional >= 0) ||\n            (fCashAmountToPurchase < 0 && finalNotional <= 0)\n        );\n\n        int256 nTokenCashBalance = BalanceHandler.getPositiveCashBalance(nTokenAddress, currencyId);\n        nTokenCashBalance = nTokenCashBalance.add(netPrimeCashNToken);\n\n        // This will ensure that the cash balance is not negative\n        BalanceHandler.setBalanceStorageForNToken(nTokenAddress, currencyId, nTokenCashBalance);\n    }\n}\n", "sourceMap": "1203:16084:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/external/actions/TradingAction.sol", "type": "library", "deployment": {"address": "0xCAc9c01d1207e5D06bB0fD5b854832F35FE97E68", "chainid": "1", "blockHeight": 19485799}}