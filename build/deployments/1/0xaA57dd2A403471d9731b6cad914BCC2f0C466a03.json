{"abi": [{"inputs": [{"internalType": "string", "name": "name_", "type": "string"}, {"internalType": "string", "name": "symbol_", "type": "string"}, {"internalType": "uint8", "name": "decimals_", "type": "uint8"}, {"internalType": "uint256", "name": "fee", "type": "uint256"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "subtractedValue", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bool", "name": "returnValue", "type": "bool"}], "name": "setTransferReturnValue", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "transferFee", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"131": "contracts/mocks/MockERC20.sol", "15": "/home/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/token/ERC20/IERC20.sol", "18": "/home/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/utils/Context.sol"}, "ast": {"absolutePath": "contracts/mocks/MockERC20.sol", "exportedSymbols": {"Context": [95648], "IERC20": [91384], "MockERC20": [73473]}, "id": 73474, "license": "BSUL-1.1", "nodeType": "SourceUnit", "nodes": [{"id": 72921, "literals": ["solidity", "=", "0.7", ".6"], "nodeType": "PragmaDirective", "src": "37:23:131"}, {"absolutePath": "/home/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 72922, "nodeType": "ImportDirective", "scope": 73474, "sourceUnit": 91385, "src": "62:56:131", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/jwu/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/contracts/GSN/Context.sol", "file": "@openzeppelin/contracts/GSN/Context.sol", "id": 72923, "nodeType": "ImportDirective", "scope": 73474, "sourceUnit": 94963, "src": "119:49:131", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 72924, "name": "IERC20", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 91384, "src": "192:6:131", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$91384", "typeString": "contract IERC20"}}, "id": 72925, "nodeType": "InheritanceSpecifier", "src": "192:6:131"}, {"baseName": {"id": 72926, "name": "Context", "nodeType": "UserDefinedTypeName", "referencedDeclaration": 95648, "src": "200:7:131", "typeDescriptions": {"typeIdentifier": "t_contract$_Context_$95648", "typeString": "contract Context"}}, "id": 72927, "nodeType": "InheritanceSpecifier", "src": "200:7:131"}], "contractDependencies": [91384, 95648], "contractKind": "contract", "fullyImplemented": true, "id": 73473, "linearizedBaseContracts": [73473, 95648, 91384], "name": "MockERC20", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "acb2ad6f", "id": 72929, "mutability": "mutable", "name": "transferFee", "nodeType": "VariableDeclaration", "scope": 73473, "src": "214:23:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 72928, "name": "uint", "nodeType": "ElementaryTypeName", "src": "214:4:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": true, "id": 72932, "mutability": "constant", "name": "transferFeeDecimals", "nodeType": "VariableDeclaration", "scope": 73473, "src": "243:49:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 72930, "name": "uint", "nodeType": "ElementaryTypeName", "src": "243:4:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31653138", "id": 72931, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "288:4:131", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "visibility": "internal"}, {"constant": false, "id": 72936, "mutability": "mutable", "name": "_balances", "nodeType": "VariableDeclaration", "scope": 73473, "src": "299:46:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 72935, "keyType": {"id": 72933, "name": "address", "nodeType": "ElementaryTypeName", "src": "308:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "299:28:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 72934, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "319:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "private"}, {"constant": false, "id": 72942, "mutability": "mutable", "name": "_allowances", "nodeType": "VariableDeclaration", "scope": 73473, "src": "352:69:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "typeName": {"id": 72941, "keyType": {"id": 72937, "name": "address", "nodeType": "ElementaryTypeName", "src": "361:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "352:49:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}, "valueType": {"id": 72940, "keyType": {"id": 72938, "name": "address", "nodeType": "ElementaryTypeName", "src": "381:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "372:28:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 72939, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "392:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}}, "visibility": "private"}, {"constant": false, "id": 72944, "mutability": "mutable", "name": "_totalSupply", "nodeType": "VariableDeclaration", "scope": 73473, "src": "428:28:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 72943, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "428:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "private"}, {"constant": false, "id": 72946, "mutability": "mutable", "name": "_name", "nodeType": "VariableDeclaration", "scope": 73473, "src": "463:20:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 72945, "name": "string", "nodeType": "ElementaryTypeName", "src": "463:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 72948, "mutability": "mutable", "name": "_symbol", "nodeType": "VariableDeclaration", "scope": 73473, "src": "489:22:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string"}, "typeName": {"id": 72947, "name": "string", "nodeType": "ElementaryTypeName", "src": "489:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "private"}, {"constant": false, "id": 72950, "mutability": "mutable", "name": "_decimals", "nodeType": "VariableDeclaration", "scope": 73473, "src": "517:23:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 72949, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "517:5:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "private"}, {"constant": false, "id": 72952, "mutability": "mutable", "name": "_returnValue", "nodeType": "VariableDeclaration", "scope": 73473, "src": "546:25:131", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 72951, "name": "bool", "nodeType": "ElementaryTypeName", "src": "546:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "private"}, {"body": {"id": 72994, "nodeType": "Block", "src": "1003:193:131", "statements": [{"expression": {"id": 72966, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72964, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72946, "src": "1013:5:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 72965, "name": "name_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72955, "src": "1021:5:131", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1013:13:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 72967, "nodeType": "ExpressionStatement", "src": "1013:13:131"}, {"expression": {"id": 72970, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72968, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72948, "src": "1036:7:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 72969, "name": "symbol_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72957, "src": "1046:7:131", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "src": "1036:17:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "id": 72971, "nodeType": "ExpressionStatement", "src": "1036:17:131"}, {"expression": {"id": 72974, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72972, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72950, "src": "1063:9:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 72973, "name": "decimals_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72959, "src": "1075:9:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "1063:21:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "id": 72975, "nodeType": "ExpressionStatement", "src": "1063:21:131"}, {"expression": {"arguments": [{"expression": {"id": 72977, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1100:3:131", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 72978, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1100:10:131", "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 72983, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 72981, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 72979, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1112:2:131", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"id": 72980, "name": "decimals_", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72959, "src": "1116:9:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "1112:13:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "31653233", "id": 72982, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1128:4:131", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000000_by_1", "typeString": "int_const 100000000000000000000000"}, "value": "1e23"}, "src": "1112:20:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 72976, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73360, "src": "1094:5:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 72984, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1094:39:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 72985, "nodeType": "ExpressionStatement", "src": "1094:39:131"}, {"expression": {"id": 72988, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72986, "name": "transferFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72929, "src": "1143:11:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 72987, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72961, "src": "1157:3:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1143:17:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 72989, "nodeType": "ExpressionStatement", "src": "1143:17:131"}, {"expression": {"id": 72992, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 72990, "name": "_returnValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72952, "src": "1170:12:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 72991, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1185:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1170:19:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 72993, "nodeType": "ExpressionStatement", "src": "1170:19:131"}]}, "documentation": {"id": 72953, "nodeType": "StructuredDocumentation", "src": "578:299:131", "text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All three of these values are immutable: they can only be set once during\n construction."}, "id": 72995, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nodeType": "FunctionDefinition", "parameters": {"id": 72962, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 72955, "mutability": "mutable", "name": "name_", "nodeType": "VariableDeclaration", "scope": 72995, "src": "903:19:131", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 72954, "name": "string", "nodeType": "ElementaryTypeName", "src": "903:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 72957, "mutability": "mutable", "name": "symbol_", "nodeType": "VariableDeclaration", "scope": 72995, "src": "932:21:131", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 72956, "name": "string", "nodeType": "ElementaryTypeName", "src": "932:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 72959, "mutability": "mutable", "name": "decimals_", "nodeType": "VariableDeclaration", "scope": 72995, "src": "963:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 72958, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "963:5:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}, {"constant": false, "id": 72961, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "scope": 72995, "src": "988:8:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 72960, "name": "uint", "nodeType": "ElementaryTypeName", "src": "988:4:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "893:109:131"}, "returnParameters": {"id": 72963, "nodeType": "ParameterList", "parameters": [], "src": "1003:0:131"}, "scope": 73473, "src": "882:314:131", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 73004, "nodeType": "Block", "src": "1261:43:131", "statements": [{"expression": {"id": 73002, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 73000, "name": "_returnValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72952, "src": "1271:12:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 73001, "name": "returnValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72997, "src": "1286:11:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1271:26:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 73003, "nodeType": "ExpressionStatement", "src": "1271:26:131"}]}, "functionSelector": "804df59e", "id": 73005, "implemented": true, "kind": "function", "modifiers": [], "name": "setTransferReturnValue", "nodeType": "FunctionDefinition", "parameters": {"id": 72998, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 72997, "mutability": "mutable", "name": "returnValue", "nodeType": "VariableDeclaration", "scope": 73005, "src": "1234:16:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 72996, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1234:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "1233:18:131"}, "returnParameters": {"id": 72999, "nodeType": "ParameterList", "parameters": [], "src": "1261:0:131"}, "scope": 73473, "src": "1202:102:131", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 73013, "nodeType": "Block", "src": "1429:29:131", "statements": [{"expression": {"id": 73011, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72946, "src": "1446:5:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 73010, "id": 73012, "nodeType": "Return", "src": "1439:12:131"}]}, "documentation": {"id": 73006, "nodeType": "StructuredDocumentation", "src": "1310:54:131", "text": " @dev Returns the name of the token."}, "functionSelector": "06fdde03", "id": 73014, "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nodeType": "FunctionDefinition", "parameters": {"id": 73007, "nodeType": "ParameterList", "parameters": [], "src": "1382:2:131"}, "returnParameters": {"id": 73010, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73009, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73014, "src": "1414:13:131", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 73008, "name": "string", "nodeType": "ElementaryTypeName", "src": "1414:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1413:15:131"}, "scope": 73473, "src": "1369:89:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 73022, "nodeType": "Block", "src": "1633:31:131", "statements": [{"expression": {"id": 73020, "name": "_symbol", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72948, "src": "1650:7:131", "typeDescriptions": {"typeIdentifier": "t_string_storage", "typeString": "string storage ref"}}, "functionReturnParameters": 73019, "id": 73021, "nodeType": "Return", "src": "1643:14:131"}]}, "documentation": {"id": 73015, "nodeType": "StructuredDocumentation", "src": "1464:102:131", "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."}, "functionSelector": "95d89b41", "id": 73023, "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nodeType": "FunctionDefinition", "parameters": {"id": 73016, "nodeType": "ParameterList", "parameters": [], "src": "1586:2:131"}, "returnParameters": {"id": 73019, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73018, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73023, "src": "1618:13:131", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 73017, "name": "string", "nodeType": "ElementaryTypeName", "src": "1618:6:131", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "1617:15:131"}, "scope": 73473, "src": "1571:93:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"body": {"id": 73031, "nodeType": "Block", "src": "2344:33:131", "statements": [{"expression": {"id": 73029, "name": "_decimals", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72950, "src": "2361:9:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "functionReturnParameters": 73028, "id": 73030, "nodeType": "Return", "src": "2354:16:131"}]}, "documentation": {"id": 73024, "nodeType": "StructuredDocumentation", "src": "1670:613:131", "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overloaded;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."}, "functionSelector": "313ce567", "id": 73032, "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nodeType": "FunctionDefinition", "parameters": {"id": 73025, "nodeType": "ParameterList", "parameters": [], "src": "2305:2:131"}, "returnParameters": {"id": 73028, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73027, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73032, "src": "2337:5:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 73026, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "2337:5:131", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "src": "2336:7:131"}, "scope": 73473, "src": "2288:89:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [91315], "body": {"id": 73041, "nodeType": "Block", "src": "2507:36:131", "statements": [{"expression": {"id": 73039, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72944, "src": "2524:12:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 73038, "id": 73040, "nodeType": "Return", "src": "2517:19:131"}]}, "documentation": {"id": 73033, "nodeType": "StructuredDocumentation", "src": "2383:49:131", "text": " @dev See {IERC20-totalSupply}."}, "functionSelector": "18160ddd", "id": 73042, "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nodeType": "FunctionDefinition", "overrides": {"id": 73035, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2480:8:131"}, "parameters": {"id": 73034, "nodeType": "ParameterList", "parameters": [], "src": "2457:2:131"}, "returnParameters": {"id": 73038, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73037, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73042, "src": "2498:7:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73036, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2498:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2497:9:131"}, "scope": 73473, "src": "2437:106:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [91323], "body": {"id": 73055, "nodeType": "Block", "src": "2684:42:131", "statements": [{"expression": {"baseExpression": {"id": 73051, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "2701:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73053, "indexExpression": {"id": 73052, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73045, "src": "2711:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2701:18:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 73050, "id": 73054, "nodeType": "Return", "src": "2694:25:131"}]}, "documentation": {"id": 73043, "nodeType": "StructuredDocumentation", "src": "2549:47:131", "text": " @dev See {IERC20-balanceOf}."}, "functionSelector": "70a08231", "id": 73056, "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nodeType": "FunctionDefinition", "overrides": {"id": 73047, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2657:8:131"}, "parameters": {"id": 73046, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73045, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 73056, "src": "2620:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73044, "name": "address", "nodeType": "ElementaryTypeName", "src": "2620:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2619:17:131"}, "returnParameters": {"id": 73050, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73049, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73056, "src": "2675:7:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73048, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2675:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2674:9:131"}, "scope": 73473, "src": "2601:125:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [91333], "body": {"id": 73076, "nodeType": "Block", "src": "3021:88:131", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 73068, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "3041:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73069, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3041:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73070, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73059, "src": "3055:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73071, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73061, "src": "3066:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73067, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73313, "src": "3031:9:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73072, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3031:42:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73073, "nodeType": "ExpressionStatement", "src": "3031:42:131"}, {"expression": {"id": 73074, "name": "_returnValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72952, "src": "3090:12:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 73066, "id": 73075, "nodeType": "Return", "src": "3083:19:131"}]}, "documentation": {"id": 73057, "nodeType": "StructuredDocumentation", "src": "2732:192:131", "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."}, "functionSelector": "a9059cbb", "id": 73077, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nodeType": "FunctionDefinition", "overrides": {"id": 73063, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2997:8:131"}, "parameters": {"id": 73062, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73059, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 73077, "src": "2947:17:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73058, "name": "address", "nodeType": "ElementaryTypeName", "src": "2947:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73061, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73077, "src": "2966:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73060, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2966:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2946:35:131"}, "returnParameters": {"id": 73066, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73065, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73077, "src": "3015:4:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 73064, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3015:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3014:6:131"}, "scope": 73473, "src": "2929:180:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [91343], "body": {"id": 73094, "nodeType": "Block", "src": "3265:51:131", "statements": [{"expression": {"baseExpression": {"baseExpression": {"id": 73088, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "3282:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73090, "indexExpression": {"id": 73089, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73080, "src": "3294:5:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3282:18:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73092, "indexExpression": {"id": 73091, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73082, "src": "3301:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3282:27:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 73087, "id": 73093, "nodeType": "Return", "src": "3275:34:131"}]}, "documentation": {"id": 73078, "nodeType": "StructuredDocumentation", "src": "3115:47:131", "text": " @dev See {IERC20-allowance}."}, "functionSelector": "dd62ed3e", "id": 73095, "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nodeType": "FunctionDefinition", "overrides": {"id": 73084, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3238:8:131"}, "parameters": {"id": 73083, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73080, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 73095, "src": "3186:13:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73079, "name": "address", "nodeType": "ElementaryTypeName", "src": "3186:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73082, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 73095, "src": "3201:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73081, "name": "address", "nodeType": "ElementaryTypeName", "src": "3201:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3185:32:131"}, "returnParameters": {"id": 73087, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73086, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73095, "src": "3256:7:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73085, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3256:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3255:9:131"}, "scope": 73473, "src": "3167:149:131", "stateMutability": "view", "virtual": true, "visibility": "public"}, {"baseFunctions": [91353], "body": {"id": 73115, "nodeType": "Block", "src": "3543:77:131", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 73107, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "3562:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73108, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3562:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73109, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73098, "src": "3576:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73110, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73100, "src": "3585:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73106, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73461, "src": "3553:8:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73111, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "3553:39:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73112, "nodeType": "ExpressionStatement", "src": "3553:39:131"}, {"expression": {"hexValue": "74727565", "id": 73113, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3609:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 73105, "id": 73114, "nodeType": "Return", "src": "3602:11:131"}]}, "documentation": {"id": 73096, "nodeType": "StructuredDocumentation", "src": "3322:127:131", "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "095ea7b3", "id": 73116, "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nodeType": "FunctionDefinition", "overrides": {"id": 73102, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3519:8:131"}, "parameters": {"id": 73101, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73098, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 73116, "src": "3471:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73097, "name": "address", "nodeType": "ElementaryTypeName", "src": "3471:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73100, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73116, "src": "3488:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73099, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3488:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3470:33:131"}, "returnParameters": {"id": 73105, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73104, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73116, "src": "3537:4:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 73103, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3537:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "3536:6:131"}, "scope": 73473, "src": "3454:166:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"baseFunctions": [91365], "body": {"id": 73163, "nodeType": "Block", "src": "4199:274:131", "statements": [{"expression": {"arguments": [{"id": 73130, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73119, "src": "4219:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73131, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73121, "src": "4227:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73132, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73123, "src": "4238:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73129, "name": "_transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73313, "src": "4209:9:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73133, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4209:36:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73134, "nodeType": "ExpressionStatement", "src": "4209:36:131"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73143, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 73136, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "4264:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73138, "indexExpression": {"id": 73137, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73119, "src": "4276:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4264:19:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73141, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 73139, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "4284:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73140, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4284:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4264:33:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 73142, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73123, "src": "4301:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4264:43:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365", "id": 73144, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4309:42:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330", "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""}, "value": "ERC20: transfer amount exceeds allowance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330", "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""}], "id": 73135, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "4256:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73145, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4256:96:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73146, "nodeType": "ExpressionStatement", "src": "4256:96:131"}, {"expression": {"arguments": [{"id": 73148, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73119, "src": "4371:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [], "expression": {"argumentTypes": [], "id": 73149, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "4379:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4379:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73158, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 73151, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "4393:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73153, "indexExpression": {"id": 73152, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73119, "src": "4405:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4393:19:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73156, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 73154, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "4413:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73155, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4413:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4393:33:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 73157, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73123, "src": "4429:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4393:42:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73147, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73461, "src": "4362:8:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73159, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4362:74:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73160, "nodeType": "ExpressionStatement", "src": "4362:74:131"}, {"expression": {"id": 73161, "name": "_returnValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72952, "src": "4454:12:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 73128, "id": 73162, "nodeType": "Return", "src": "4447:19:131"}]}, "documentation": {"id": 73117, "nodeType": "StructuredDocumentation", "src": "3626:456:131", "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."}, "functionSelector": "23b872dd", "id": 73164, "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nodeType": "FunctionDefinition", "overrides": {"id": 73125, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4175:8:131"}, "parameters": {"id": 73124, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73119, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 73164, "src": "4109:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73118, "name": "address", "nodeType": "ElementaryTypeName", "src": "4109:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73121, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 73164, "src": "4125:17:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73120, "name": "address", "nodeType": "ElementaryTypeName", "src": "4125:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73123, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73164, "src": "4144:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73122, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4144:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4108:51:131"}, "returnParameters": {"id": 73128, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73127, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73164, "src": "4193:4:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 73126, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4193:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4192:6:131"}, "scope": 73473, "src": "4087:386:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 73190, "nodeType": "Block", "src": "4962:118:131", "statements": [{"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 73175, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "4981:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73176, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4981:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73177, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73167, "src": "4995:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 73178, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "5004:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73181, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 73179, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "5016:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73180, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5016:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5004:25:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73183, "indexExpression": {"id": 73182, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73167, "src": "5030:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5004:34:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 73184, "name": "addedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73169, "src": "5041:10:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5004:47:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73174, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73461, "src": "4972:8:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73186, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "4972:80:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73187, "nodeType": "ExpressionStatement", "src": "4972:80:131"}, {"expression": {"hexValue": "74727565", "id": 73188, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5069:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 73173, "id": 73189, "nodeType": "Return", "src": "5062:11:131"}]}, "documentation": {"id": 73165, "nodeType": "StructuredDocumentation", "src": "4479:384:131", "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."}, "functionSelector": "39509351", "id": 73191, "implemented": true, "kind": "function", "modifiers": [], "name": "increaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 73170, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73167, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 73191, "src": "4895:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73166, "name": "address", "nodeType": "ElementaryTypeName", "src": "4895:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73169, "mutability": "mutable", "name": "addedValue", "nodeType": "VariableDeclaration", "scope": 73191, "src": "4912:18:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73168, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4912:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4894:37:131"}, "returnParameters": {"id": 73173, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73172, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73191, "src": "4956:4:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 73171, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4956:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "4955:6:131"}, "scope": 73473, "src": "4868:212:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 73229, "nodeType": "Block", "src": "5666:237:131", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 73202, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "5684:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73205, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 73203, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "5696:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73204, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5696:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5684:25:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73207, "indexExpression": {"id": 73206, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73194, "src": "5710:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5684:34:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 73208, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73196, "src": "5722:15:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5684:53:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f", "id": 73210, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5739:39:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}, "value": "ERC20: decreased allowance below zero"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8", "typeString": "literal_string \"ERC20: decreased allowance below zero\""}], "id": 73201, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5676:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73211, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5676:103:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73212, "nodeType": "ExpressionStatement", "src": "5676:103:131"}, {"expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "id": 73214, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "5798:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73215, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5798:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73216, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73194, "src": "5812:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73224, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"baseExpression": {"id": 73217, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "5821:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73220, "indexExpression": {"arguments": [], "expression": {"argumentTypes": [], "id": 73218, "name": "_msgSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 95636, "src": "5833:10:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$", "typeString": "function () view returns (address payable)"}}, "id": 73219, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5833:12:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5821:25:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73222, "indexExpression": {"id": 73221, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73194, "src": "5847:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5821:34:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 73223, "name": "subtractedValue", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73196, "src": "5858:15:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5821:52:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73213, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73461, "src": "5789:8:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73225, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "5789:85:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73226, "nodeType": "ExpressionStatement", "src": "5789:85:131"}, {"expression": {"hexValue": "74727565", "id": 73227, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5892:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 73200, "id": 73228, "nodeType": "Return", "src": "5885:11:131"}]}, "documentation": {"id": 73192, "nodeType": "StructuredDocumentation", "src": "5086:476:131", "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."}, "functionSelector": "a457c2d7", "id": 73230, "implemented": true, "kind": "function", "modifiers": [], "name": "decreaseAllowance", "nodeType": "FunctionDefinition", "parameters": {"id": 73197, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73194, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 73230, "src": "5594:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73193, "name": "address", "nodeType": "ElementaryTypeName", "src": "5594:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73196, "mutability": "mutable", "name": "subtractedValue", "nodeType": "VariableDeclaration", "scope": 73230, "src": "5611:23:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73195, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5611:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5593:42:131"}, "returnParameters": {"id": 73200, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73199, "mutability": "mutable", "name": "", "nodeType": "VariableDeclaration", "scope": 73230, "src": "5660:4:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 73198, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5660:4:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5659:6:131"}, "scope": 73473, "src": "5567:336:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "public"}, {"body": {"id": 73312, "nodeType": "Block", "src": "6464:572:131", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73246, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73241, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73233, "src": "6482:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73244, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6500:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73243, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6492:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73242, "name": "address", "nodeType": "ElementaryTypeName", "src": "6492:7:131", "typeDescriptions": {}}}, "id": 73245, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6492:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "6482:20:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373", "id": 73247, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6504:39:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}, "value": "ERC20: transfer from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea", "typeString": "literal_string \"ERC20: transfer from the zero address\""}], "id": 73240, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6474:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73248, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6474:70:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73249, "nodeType": "ExpressionStatement", "src": "6474:70:131"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73256, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73251, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73235, "src": "6562:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73254, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6583:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73253, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6575:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73252, "name": "address", "nodeType": "ElementaryTypeName", "src": "6575:7:131", "typeDescriptions": {}}}, "id": 73255, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6575:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "6562:23:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373", "id": 73257, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6587:37:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}, "value": "ERC20: transfer to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f", "typeString": "literal_string \"ERC20: transfer to the zero address\""}], "id": 73250, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6554:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73258, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6554:71:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73259, "nodeType": "ExpressionStatement", "src": "6554:71:131"}, {"expression": {"arguments": [{"id": 73261, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73233, "src": "6657:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73262, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73235, "src": "6665:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73263, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6676:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73260, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73472, "src": "6636:20:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73264, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6636:47:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73265, "nodeType": "ExpressionStatement", "src": "6636:47:131"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73271, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 73267, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "6702:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73269, "indexExpression": {"id": 73268, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73233, "src": "6712:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "6702:17:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 73270, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6723:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6702:27:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365", "id": 73272, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6731:40:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}, "value": "ERC20: transfer amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6", "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""}], "id": 73266, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6694:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73273, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6694:78:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73274, "nodeType": "ExpressionStatement", "src": "6694:78:131"}, {"expression": {"id": 73279, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 73275, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "6782:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73277, "indexExpression": {"id": 73276, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73233, "src": "6792:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6782:17:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 73278, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6803:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6782:27:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73280, "nodeType": "ExpressionStatement", "src": "6782:27:131"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73283, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73281, "name": "transferFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72929, "src": "6823:11:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 73282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6838:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "6823:16:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 73299, "nodeType": "IfStatement", "src": "6819:120:131", "trueBody": {"id": 73298, "nodeType": "Block", "src": "6841:98:131", "statements": [{"assignments": [73285], "declarations": [{"constant": false, "id": 73285, "mutability": "mutable", "name": "fee", "nodeType": "VariableDeclaration", "scope": 73298, "src": "6855:8:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73284, "name": "uint", "nodeType": "ElementaryTypeName", "src": "6855:4:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 73291, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73290, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73286, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6866:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 73287, "name": "transferFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72929, "src": "6875:11:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6866:20:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "31653138", "id": 73289, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "6889:4:131", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "6866:27:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "6855:38:131"}, {"expression": {"id": 73296, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 73292, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6907:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73295, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73293, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6916:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 73294, "name": "fee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73285, "src": "6925:3:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6916:12:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6907:21:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73297, "nodeType": "ExpressionStatement", "src": "6907:21:131"}]}}, {"expression": {"id": 73304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 73300, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "6948:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73302, "indexExpression": {"id": 73301, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73235, "src": "6958:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "6948:20:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 73303, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "6972:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6948:30:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73305, "nodeType": "ExpressionStatement", "src": "6948:30:131"}, {"eventCall": {"arguments": [{"id": 73307, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73233, "src": "7003:6:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73308, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73235, "src": "7011:9:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73309, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73237, "src": "7022:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73306, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 91374, "src": "6994:8:131", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "6994:35:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73311, "nodeType": "EmitStatement", "src": "6989:40:131"}]}, "documentation": {"id": 73231, "nodeType": "StructuredDocumentation", "src": "5909:463:131", "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."}, "id": 73313, "implemented": true, "kind": "function", "modifiers": [], "name": "_transfer", "nodeType": "FunctionDefinition", "parameters": {"id": 73238, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73233, "mutability": "mutable", "name": "sender", "nodeType": "VariableDeclaration", "scope": 73313, "src": "6396:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73232, "name": "address", "nodeType": "ElementaryTypeName", "src": "6396:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73235, "mutability": "mutable", "name": "recipient", "nodeType": "VariableDeclaration", "scope": 73313, "src": "6412:17:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73234, "name": "address", "nodeType": "ElementaryTypeName", "src": "6412:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73237, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73313, "src": "6431:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73236, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6431:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "6395:51:131"}, "returnParameters": {"id": 73239, "nodeType": "ParameterList", "parameters": [], "src": "6464:0:131"}, "scope": 73473, "src": "6377:659:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 73359, "nodeType": "Block", "src": "7372:265:131", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73327, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73322, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73316, "src": "7390:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73325, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7409:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73324, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7401:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73323, "name": "address", "nodeType": "ElementaryTypeName", "src": "7401:7:131", "typeDescriptions": {}}}, "id": 73326, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7401:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "7390:21:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373", "id": 73328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "7413:33:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}, "value": "ERC20: mint to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e", "typeString": "literal_string \"ERC20: mint to the zero address\""}], "id": 73321, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "7382:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73329, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7382:65:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73330, "nodeType": "ExpressionStatement", "src": "7382:65:131"}, {"expression": {"arguments": [{"arguments": [{"hexValue": "30", "id": 73334, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7487:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73333, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7479:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73332, "name": "address", "nodeType": "ElementaryTypeName", "src": "7479:7:131", "typeDescriptions": {}}}, "id": 73335, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7479:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73336, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73316, "src": "7491:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73337, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73318, "src": "7500:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73331, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73472, "src": "7458:20:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73338, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7458:49:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73339, "nodeType": "ExpressionStatement", "src": "7458:49:131"}, {"expression": {"id": 73342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 73340, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72944, "src": "7518:12:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 73341, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73318, "src": "7534:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7518:22:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73343, "nodeType": "ExpressionStatement", "src": "7518:22:131"}, {"expression": {"id": 73348, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 73344, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "7550:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73346, "indexExpression": {"id": 73345, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73316, "src": "7560:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "7550:18:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 73347, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73318, "src": "7572:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "7550:28:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73349, "nodeType": "ExpressionStatement", "src": "7550:28:131"}, {"eventCall": {"arguments": [{"arguments": [{"hexValue": "30", "id": 73353, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "7610:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73352, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "7602:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73351, "name": "address", "nodeType": "ElementaryTypeName", "src": "7602:7:131", "typeDescriptions": {}}}, "id": 73354, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7602:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73355, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73316, "src": "7614:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73356, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73318, "src": "7623:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73350, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 91374, "src": "7593:8:131", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73357, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "7593:37:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73358, "nodeType": "EmitStatement", "src": "7588:42:131"}]}, "documentation": {"id": 73314, "nodeType": "StructuredDocumentation", "src": "7042:260:131", "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."}, "id": 73360, "implemented": true, "kind": "function", "modifiers": [], "name": "_mint", "nodeType": "FunctionDefinition", "parameters": {"id": 73319, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73316, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 73360, "src": "7322:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73315, "name": "address", "nodeType": "ElementaryTypeName", "src": "7322:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73318, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73360, "src": "7339:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73317, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7339:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7321:33:131"}, "returnParameters": {"id": 73320, "nodeType": "ParameterList", "parameters": [], "src": "7372:0:131"}, "scope": 73473, "src": "7307:330:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 73415, "nodeType": "Block", "src": "8022:353:131", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73374, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73369, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73363, "src": "8040:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73372, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8059:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73371, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8051:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73370, "name": "address", "nodeType": "ElementaryTypeName", "src": "8051:7:131", "typeDescriptions": {}}}, "id": 73373, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8051:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "8040:21:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373", "id": 73375, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8063:35:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}, "value": "ERC20: burn from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f", "typeString": "literal_string \"ERC20: burn from the zero address\""}], "id": 73368, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8032:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73376, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8032:67:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73377, "nodeType": "ExpressionStatement", "src": "8032:67:131"}, {"expression": {"arguments": [{"id": 73379, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73363, "src": "8131:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 73382, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8148:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73381, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8140:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73380, "name": "address", "nodeType": "ElementaryTypeName", "src": "8140:7:131", "typeDescriptions": {}}}, "id": 73383, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8140:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73384, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73365, "src": "8152:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73378, "name": "_beforeTokenTransfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73472, "src": "8110:20:131", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73385, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8110:49:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73386, "nodeType": "ExpressionStatement", "src": "8110:49:131"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 73392, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 73388, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "8178:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73390, "indexExpression": {"id": 73389, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73363, "src": "8188:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "8178:18:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 73391, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73365, "src": "8200:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8178:28:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365", "id": 73393, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8208:36:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}, "value": "ERC20: burn amount exceeds balance"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd", "typeString": "literal_string \"ERC20: burn amount exceeds balance\""}], "id": 73387, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8170:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73394, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8170:75:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73395, "nodeType": "ExpressionStatement", "src": "8170:75:131"}, {"expression": {"id": 73400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 73396, "name": "_balances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72936, "src": "8255:9:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73398, "indexExpression": {"id": 73397, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73363, "src": "8265:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "8255:18:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 73399, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73365, "src": "8277:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8255:28:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73401, "nodeType": "ExpressionStatement", "src": "8255:28:131"}, {"expression": {"id": 73404, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 73402, "name": "_totalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72944, "src": "8293:12:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "-=", "rightHandSide": {"id": 73403, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73365, "src": "8309:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "8293:22:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73405, "nodeType": "ExpressionStatement", "src": "8293:22:131"}, {"eventCall": {"arguments": [{"id": 73407, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73363, "src": "8340:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"hexValue": "30", "id": 73410, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8357:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73409, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8349:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73408, "name": "address", "nodeType": "ElementaryTypeName", "src": "8349:7:131", "typeDescriptions": {}}}, "id": 73411, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8349:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, {"id": 73412, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73365, "src": "8361:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address_payable", "typeString": "address payable"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73406, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 91374, "src": "8331:8:131", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73413, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8331:37:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73414, "nodeType": "EmitStatement", "src": "8326:42:131"}]}, "documentation": {"id": 73361, "nodeType": "StructuredDocumentation", "src": "7643:309:131", "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."}, "id": 73416, "implemented": true, "kind": "function", "modifiers": [], "name": "_burn", "nodeType": "FunctionDefinition", "parameters": {"id": 73366, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73363, "mutability": "mutable", "name": "account", "nodeType": "VariableDeclaration", "scope": 73416, "src": "7972:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73362, "name": "address", "nodeType": "ElementaryTypeName", "src": "7972:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73365, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73416, "src": "7989:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73364, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7989:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "7971:33:131"}, "returnParameters": {"id": 73367, "nodeType": "ParameterList", "parameters": [], "src": "8022:0:131"}, "scope": 73473, "src": "7957:418:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 73460, "nodeType": "Block", "src": "8881:257:131", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73427, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73419, "src": "8899:5:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8916:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73429, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8908:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73428, "name": "address", "nodeType": "ElementaryTypeName", "src": "8908:7:131", "typeDescriptions": {}}}, "id": 73431, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8908:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "8899:19:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373", "id": 73433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "8920:38:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}, "value": "ERC20: approve from the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208", "typeString": "literal_string \"ERC20: approve from the zero address\""}], "id": 73426, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8891:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8891:68:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73435, "nodeType": "ExpressionStatement", "src": "8891:68:131"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 73442, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 73437, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73421, "src": "8977:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 73440, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "8996:1:131", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 73439, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "8988:7:131", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 73438, "name": "address", "nodeType": "ElementaryTypeName", "src": "8988:7:131", "typeDescriptions": {}}}, "id": 73441, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8988:10:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address_payable", "typeString": "address payable"}}, "src": "8977:21:131", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373", "id": 73443, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9000:36:131", "typeDescriptions": {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}, "value": "ERC20: approve to the zero address"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029", "typeString": "literal_string \"ERC20: approve to the zero address\""}], "id": 73436, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "8969:7:131", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 73444, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "8969:68:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73445, "nodeType": "ExpressionStatement", "src": "8969:68:131"}, {"expression": {"id": 73452, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"baseExpression": {"id": 73446, "name": "_allowances", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 72942, "src": "9048:11:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$", "typeString": "mapping(address => mapping(address => uint256))"}}, "id": 73449, "indexExpression": {"id": 73447, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73419, "src": "9060:5:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9048:18:131", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 73450, "indexExpression": {"id": 73448, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73421, "src": "9067:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "9048:27:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 73451, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73423, "src": "9078:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "9048:36:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 73453, "nodeType": "ExpressionStatement", "src": "9048:36:131"}, {"eventCall": {"arguments": [{"id": 73455, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73419, "src": "9108:5:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73456, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73421, "src": "9115:7:131", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 73457, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 73423, "src": "9124:6:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 73454, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 91383, "src": "9099:8:131", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 73458, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "9099:32:131", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 73459, "nodeType": "EmitStatement", "src": "9094:37:131"}]}, "documentation": {"id": 73417, "nodeType": "StructuredDocumentation", "src": "8381:412:131", "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."}, "id": 73461, "implemented": true, "kind": "function", "modifiers": [], "name": "_approve", "nodeType": "FunctionDefinition", "parameters": {"id": 73424, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73419, "mutability": "mutable", "name": "owner", "nodeType": "VariableDeclaration", "scope": 73461, "src": "8816:13:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73418, "name": "address", "nodeType": "ElementaryTypeName", "src": "8816:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73421, "mutability": "mutable", "name": "spender", "nodeType": "VariableDeclaration", "scope": 73461, "src": "8831:15:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73420, "name": "address", "nodeType": "ElementaryTypeName", "src": "8831:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73423, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73461, "src": "8848:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73422, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "8848:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "8815:48:131"}, "returnParameters": {"id": 73425, "nodeType": "ParameterList", "parameters": [], "src": "8881:0:131"}, "scope": 73473, "src": "8798:340:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}, {"body": {"id": 73471, "nodeType": "Block", "src": "9814:3:131", "statements": []}, "documentation": {"id": 73462, "nodeType": "StructuredDocumentation", "src": "9144:576:131", "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."}, "id": 73472, "implemented": true, "kind": "function", "modifiers": [], "name": "_beforeTokenTransfer", "nodeType": "FunctionDefinition", "parameters": {"id": 73469, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 73464, "mutability": "mutable", "name": "from", "nodeType": "VariableDeclaration", "scope": 73472, "src": "9755:12:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73463, "name": "address", "nodeType": "ElementaryTypeName", "src": "9755:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73466, "mutability": "mutable", "name": "to", "nodeType": "VariableDeclaration", "scope": 73472, "src": "9769:10:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 73465, "name": "address", "nodeType": "ElementaryTypeName", "src": "9769:7:131", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 73468, "mutability": "mutable", "name": "amount", "nodeType": "VariableDeclaration", "scope": 73472, "src": "9781:14:131", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 73467, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9781:7:131", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "9754:42:131"}, "returnParameters": {"id": 73470, "nodeType": "ParameterList", "parameters": [], "src": "9814:0:131"}, "scope": 73473, "src": "9725:92:131", "stateMutability": "nonpayable", "virtual": true, "visibility": "internal"}], "scope": 73474, "src": "170:9649:131"}], "src": "37:9782:131"}, "bytecode": "60806040523480156200001157600080fd5b5060405162000e1a38038062000e1a833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b506040908152602082810151929091015186519294509250620001c191600491870190620002ef565b508251620001d7906005906020860190620002ef565b506006805460ff191660ff841690811790915562000206903390600a0a69152d02c7e14af68000000262000221565b60005550506006805461ff001916610100179055506200039b565b6001600160a01b0382166200027d576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200028b60008383620002ea565b60038054820190556001600160a01b0382166000818152600160209081526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050565b505050565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000327576000855562000372565b82601f106200034257805160ff191683800117855562000372565b8280016001018555821562000372579182015b828111156200037257825182559160200191906001019062000355565b506200038092915062000384565b5090565b5b8082111562000380576000815560010162000385565b610a6f80620003ab6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461027a578063a9059cbb146102a6578063acb2ad6f146102d2578063dd62ed3e146102da576100cf565b806370a082311461022b578063804df59e1461025157806395d89b4114610272576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc610308565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103bb565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103c1565b6101e96104b6565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b0381351690602001356104bf565b6101996004803603602081101561024157600080fd5b50356001600160a01b031661050a565b6102706004803603602081101561026757600080fd5b50351515610525565b005b6100dc61053f565b61017d6004803603604081101561029057600080fd5b506001600160a01b0381351690602001356105a0565b61017d600480360360408110156102bc57600080fd5b506001600160a01b03813516906020013561065f565b610199610685565b610199600480360360408110156102f057600080fd5b506001600160a01b038135811691602001351661068b565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b60006103b26103ab6106b6565b84846106ba565b50600192915050565b60035490565b60006103ce8484846107a6565b6001600160a01b038416600090815260026020526040812083916103f06106b6565b6001600160a01b03166001600160a01b0316815260200190815260200160002054101561044e5760405162461bcd60e51b81526004018080602001828103825260288152602001806109a46028913960400191505060405180910390fd5b6104a38461045a6106b6565b6001600160a01b0387166000908152600260205260408120869161047c6106b6565b6001600160a01b03166001600160a01b0316815260200190815260200160002054036106ba565b5050600654610100900460ff1692915050565b60065460ff1690565b60006103b26104cc6106b6565b8484600260006104da6106b6565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054016106ba565b6001600160a01b031660009081526001602052604090205490565b600680549115156101000261ff0019909216919091179055565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103945780601f1061036957610100808354040283529160200191610394565b600081600260006105af6106b6565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205410156106165760405162461bcd60e51b8152600401808060200182810382526025815260200180610a156025913960400191505060405180910390fd5b6103b26106216106b6565b84846002600061062f6106b6565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054036106ba565b600061067361066c6106b6565b84846107a6565b5050600654610100900460ff16919050565b60005481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106ff5760405162461bcd60e51b81526004018080602001828103825260248152602001806109f16024913960400191505060405180910390fd5b6001600160a01b0382166107445760405162461bcd60e51b815260040180806020018281038252602281526020018061095c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107eb5760405162461bcd60e51b81526004018080602001828103825260258152602001806109cc6025913960400191505060405180910390fd5b6001600160a01b0382166108305760405162461bcd60e51b81526004018080602001828103825260238152602001806109396023913960400191505060405180910390fd5b61083b838383610933565b6001600160a01b0383166000908152600160205260409020548111156108925760405162461bcd60e51b815260040180806020018281038252602681526020018061097e6026913960400191505060405180910390fd5b6001600160a01b03831660009081526001602052604081208054839003905554156108d5576000670de0b6b3a76400006000548302816108ce57fe5b0490910390505b6001600160a01b038083166000818152600160209081526040918290208054860190558151858152915192938716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b185dddbf3d16b70c9fea3a915a6c910247b93a5762644cd27034b1cbe455de564736f6c63430007060033", "bytecodeSha1": "19fcca235830e911f6ca285187cd6e56abfa0677", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.7.6+commit.7338295f"}, "contractName": "MockERC20", "coverageMap": {"branches": {"131": {"MockERC20._approve": {"33": [8899, 8918, true], "34": [8977, 8998, true]}, "MockERC20._transfer": {"35": [6482, 6502, true], "36": [6562, 6585, true], "37": [6702, 6729, true], "38": [6823, 6839, false]}, "MockERC20.decreaseAllowance": {"32": [5684, 5737, true]}, "MockERC20.transferFrom": {"31": [4264, 4307, true]}}, "15": {}, "18": {}}, "statements": {"131": {"MockERC20._approve": {"19": [8891, 8959], "20": [8969, 9037], "21": [9048, 9084], "22": [9094, 9131]}, "MockERC20._transfer": {"23": [6474, 6544], "24": [6554, 6625], "25": [6636, 6683], "26": [6694, 6772], "27": [6782, 6809], "28": [6907, 6928], "29": [6948, 6978], "30": [6989, 7029]}, "MockERC20.allowance": {"17": [3275, 3309]}, "MockERC20.approve": {"1": [3553, 3592], "2": [3602, 3613]}, "MockERC20.balanceOf": {"10": [2694, 2719]}, "MockERC20.decimals": {"8": [2354, 2370]}, "MockERC20.decreaseAllowance": {"13": [5676, 5779], "14": [5789, 5874]}, "MockERC20.increaseAllowance": {"9": [4972, 5052]}, "MockERC20.name": {"0": [1439, 1451]}, "MockERC20.setTransferReturnValue": {"11": [1271, 1297]}, "MockERC20.symbol": {"12": [1643, 1657]}, "MockERC20.totalSupply": {"3": [2517, 2536]}, "MockERC20.transfer": {"15": [3031, 3073], "16": [3083, 3102]}, "MockERC20.transferFrom": {"4": [4209, 4245], "5": [4256, 4352], "6": [4362, 4436], "7": [4447, 4466]}}, "15": {}, "18": {"Context._msgSender": {"18": [678, 695]}}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/Context", "OpenZeppelin/openzeppelin-contracts@3.4.2-solc-0.7/IERC20"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d71461027a578063a9059cbb146102a6578063acb2ad6f146102d2578063dd62ed3e146102da576100cf565b806370a082311461022b578063804df59e1461025157806395d89b4114610272576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab578063313ce567146101e157806339509351146101ff575b600080fd5b6100dc610308565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b03813516906020013561039e565b604080519115158252519081900360200190f35b6101996103bb565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b038135811691602081013590911690604001356103c1565b6101e96104b6565b6040805160ff9092168252519081900360200190f35b61017d6004803603604081101561021557600080fd5b506001600160a01b0381351690602001356104bf565b6101996004803603602081101561024157600080fd5b50356001600160a01b031661050a565b6102706004803603602081101561026757600080fd5b50351515610525565b005b6100dc61053f565b61017d6004803603604081101561029057600080fd5b506001600160a01b0381351690602001356105a0565b61017d600480360360408110156102bc57600080fd5b506001600160a01b03813516906020013561065f565b610199610685565b610199600480360360408110156102f057600080fd5b506001600160a01b038135811691602001351661068b565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103945780601f1061036957610100808354040283529160200191610394565b820191906000526020600020905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b60006103b26103ab6106b6565b84846106ba565b50600192915050565b60035490565b60006103ce8484846107a6565b6001600160a01b038416600090815260026020526040812083916103f06106b6565b6001600160a01b03166001600160a01b0316815260200190815260200160002054101561044e5760405162461bcd60e51b81526004018080602001828103825260288152602001806109a46028913960400191505060405180910390fd5b6104a38461045a6106b6565b6001600160a01b0387166000908152600260205260408120869161047c6106b6565b6001600160a01b03166001600160a01b0316815260200190815260200160002054036106ba565b5050600654610100900460ff1692915050565b60065460ff1690565b60006103b26104cc6106b6565b8484600260006104da6106b6565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054016106ba565b6001600160a01b031660009081526001602052604090205490565b600680549115156101000261ff0019909216919091179055565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103945780601f1061036957610100808354040283529160200191610394565b600081600260006105af6106b6565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205410156106165760405162461bcd60e51b8152600401808060200182810382526025815260200180610a156025913960400191505060405180910390fd5b6103b26106216106b6565b84846002600061062f6106b6565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054036106ba565b600061067361066c6106b6565b84846107a6565b5050600654610100900460ff16919050565b60005481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106ff5760405162461bcd60e51b81526004018080602001828103825260248152602001806109f16024913960400191505060405180910390fd5b6001600160a01b0382166107445760405162461bcd60e51b815260040180806020018281038252602281526020018061095c6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166107eb5760405162461bcd60e51b81526004018080602001828103825260258152602001806109cc6025913960400191505060405180910390fd5b6001600160a01b0382166108305760405162461bcd60e51b81526004018080602001828103825260238152602001806109396023913960400191505060405180910390fd5b61083b838383610933565b6001600160a01b0383166000908152600160205260409020548111156108925760405162461bcd60e51b815260040180806020018281038252602681526020018061097e6026913960400191505060405180910390fd5b6001600160a01b03831660009081526001602052604081208054839003905554156108d5576000670de0b6b3a76400006000548302816108ce57fe5b0490910390505b6001600160a01b038083166000818152600160209081526040918290208054860190558151858152915192938716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b185dddbf3d16b70c9fea3a915a6c910247b93a5762644cd27034b1cbe455de564736f6c63430007060033", "deployedSourceMap": "170:9649:131:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3454:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3454:166:131;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2437:106;;;:::i;:::-;;;;;;;;;;;;;;;;4087:386;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4087:386:131;;;;;;;;;;;;;;;;;:::i;2288:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4868:212;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4868:212:131;;;;;;;;:::i;2601:125::-;;;;;;;;;;;;;;;;-1:-1:-1;2601:125:131;-1:-1:-1;;;;;2601:125:131;;:::i;1202:102::-;;;;;;;;;;;;;;;;-1:-1:-1;1202:102:131;;;;:::i;:::-;;1571:93;;;:::i;5567:336::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5567:336:131;;;;;;;;:::i;2929:180::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2929:180:131;;;;;;;;:::i;214:23::-;;;:::i;3167:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3167:149:131;;;;;;;;;;:::i;1369:89::-;1446:5;1439:12;;;;;;;;-1:-1:-1;;1439:12:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:13;;1439:12;;1446:5;;1439:12;;1446:5;1439:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:89;:::o;3454:166::-;3537:4;3553:39;3562:12;:10;:12::i;:::-;3576:7;3585:6;3553:8;:39::i;:::-;-1:-1:-1;3609:4:131;3454:166;;;;:::o;2437:106::-;2524:12;;2437:106;:::o;4087:386::-;4193:4;4209:36;4219:6;4227:9;4238:6;4209:9;:36::i;:::-;-1:-1:-1;;;;;4264:19:131;;;;;;:11;:19;;;;;4301:6;;4284:12;:10;:12::i;:::-;-1:-1:-1;;;;;4264:33:131;-1:-1:-1;;;;;4264:33:131;;;;;;;;;;;;;:43;;4256:96;;;;-1:-1:-1;;;4256:96:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4362:74;4371:6;4379:12;:10;:12::i;:::-;-1:-1:-1;;;;;4393:19:131;;;;;;:11;:19;;;;;4429:6;;4413:12;:10;:12::i;:::-;-1:-1:-1;;;;;4393:33:131;-1:-1:-1;;;;;4393:33:131;;;;;;;;;;;;;:42;4362:8;:74::i;:::-;-1:-1:-1;;4454:12:131;;;;;;;;4087:386;-1:-1:-1;;4087:386:131:o;2288:89::-;2361:9;;;;2288:89;:::o;4868:212::-;4956:4;4972:80;4981:12;:10;:12::i;:::-;4995:7;5041:10;5004:11;:25;5016:12;:10;:12::i;:::-;-1:-1:-1;;;;;5004:25:131;;;;;;;;;;;;;;;;;-1:-1:-1;5004:25:131;;;:34;;;;;;;;;;:47;4972:8;:80::i;2601:125::-;-1:-1:-1;;;;;2701:18:131;2675:7;2701:18;;;:9;:18;;;;;;;2601:125::o;1202:102::-;1271:12;:26;;;;;;;-1:-1:-1;;1271:26:131;;;;;;;;;1202:102::o;1571:93::-;1650:7;1643:14;;;;;;;;-1:-1:-1;;1643:14:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1618:13;;1643:14;;1650:7;;1643:14;;1650:7;1643:14;;;;;;;;;;;;;;;;;;;;;;;;5567:336;5660:4;5722:15;5684:11;:25;5696:12;:10;:12::i;:::-;-1:-1:-1;;;;;5684:25:131;;;;;;;;;;;;;;;;;-1:-1:-1;5684:25:131;;;:34;;;;;;;;;;:53;;5676:103;;;;-1:-1:-1;;;5676:103:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5789:85;5798:12;:10;:12::i;:::-;5812:7;5858:15;5821:11;:25;5833:12;:10;:12::i;:::-;-1:-1:-1;;;;;5821:25:131;;;;;;;;;;;;;;;;;-1:-1:-1;5821:25:131;;;:34;;;;;;;;;;:52;5789:8;:85::i;2929:180::-;3015:4;3031:42;3041:12;:10;:12::i;:::-;3055:9;3066:6;3031:9;:42::i;:::-;-1:-1:-1;;3090:12:131;;;;;;;;2929:180;-1:-1:-1;2929:180:131:o;214:23::-;;;;:::o;3167:149::-;-1:-1:-1;;;;;3282:18:131;;;3256:7;3282:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3167:149::o;598:104:18:-;685:10;598:104;:::o;8798:340:131:-;-1:-1:-1;;;;;8899:19:131;;8891:68;;;;-1:-1:-1;;;8891:68:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8977:21:131;;8969:68;;;;-1:-1:-1;;;8969:68:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9048:18:131;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9099:32;;;;;;;;;;;;;;;;;8798:340;;;:::o;6377:659::-;-1:-1:-1;;;;;6482:20:131;;6474:70;;;;-1:-1:-1;;;6474:70:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6562:23:131;;6554:71;;;;-1:-1:-1;;;6554:71:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6636:47;6657:6;6665:9;6676:6;6636:20;:47::i;:::-;-1:-1:-1;;;;;6702:17:131;;;;;;:9;:17;;;;;;:27;-1:-1:-1;6702:27:131;6694:78;;;;-1:-1:-1;;;6694:78:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6782:17:131;;;;;;:9;:17;;;;;:27;;;;;;;6823:11;:16;6819:120;;6855:8;6889:4;6875:11;;6866:6;:20;:27;;;;;;6916:12;;;;-1:-1:-1;6819:120:131;-1:-1:-1;;;;;6948:20:131;;;;;;;:9;:20;;;;;;;;;:30;;;;;;6994:35;;;;;;;6948:20;;6994:35;;;;;;;;;;;;;6377:659;;;:::o;9725:92::-;;;;:::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "constructor": {"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All three of these values are immutable: they can only be set once during construction."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."}}, "version": 1}, "offset": [170, 9819], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xACB2AD6F EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DA JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x804DF59E EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x272 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1FF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x50A JUMP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x525 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDC PUSH2 0x53F JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x65F JUMP JUMPDEST PUSH2 0x199 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x68B JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x394 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x377 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x3AB PUSH2 0x6B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x6BA JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP2 PUSH2 0x3F0 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9A4 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A3 DUP5 PUSH2 0x45A PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 SWAP2 PUSH2 0x47C PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB PUSH2 0x6BA JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x4CC PUSH2 0x6B6 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4DA PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD ADD PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x394 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x369 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x5AF PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP9 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA15 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3B2 PUSH2 0x621 PUSH2 0x6B6 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x2 PUSH1 0x0 PUSH2 0x62F PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP12 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SUB PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 PUSH2 0x66C PUSH2 0x6B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x7A6 JUMP JUMPDEST POP POP PUSH1 0x6 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F1 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x95C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9CC PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x939 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83B DUP4 DUP4 DUP4 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x892 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x97E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE SLOAD ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SLOAD DUP4 MUL DUP2 PUSH2 0x8CE JUMPI INVALID JUMPDEST DIV SWAP1 SWAP2 SUB SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220B185 0xDD 0xDB RETURN 0xD1 PUSH12 0x70C9FEA3A915A6C910247B93 0xA5 PUSH23 0x2644CD27034B1CBE455DE564736F6C6343000706003300 ", "sha1": "23997ec65c7eabab51024ba29df749215ffb0045", "source": "// SPDX-License-Identifier: BSUL-1.1\npragma solidity =0.7.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/GSN/Context.sol\";\n\ncontract MockERC20 is IERC20, Context {\n    uint public transferFee;\n    uint internal constant transferFeeDecimals = 1e18;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n    bool private _returnValue;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint8 decimals_,\n        uint fee\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = decimals_;\n        _mint(msg.sender, 10**decimals_ * 1e23);\n        transferFee = fee;\n        _returnValue = true;\n    }\n\n    function setTransferReturnValue(bool returnValue) external {\n        _returnValue = returnValue;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overloaded;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return _returnValue;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        require(_allowances[sender][_msgSender()] >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\n\n        return _returnValue;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        require(_allowances[_msgSender()][spender] >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        require(_balances[sender] >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] -= amount;\n        if (transferFee != 0) {\n            uint fee = amount * transferFee / 1e18;\n            amount = amount - fee;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        require(_balances[account] >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] -= amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}", "sourceMap": "170:9649:131:-:0;;;882:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;882:314:131;;;;;;;;;;-1:-1:-1;882:314:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;882:314:131;;;;;;;;;;-1:-1:-1;882:314:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;882:314:131;;;;;;;;;;;;;;1013:13;;882:314;;-1:-1:-1;882:314:131;-1:-1:-1;1013:13:131;;:5;;:13;;;;:::i;:::-;-1:-1:-1;1036:17:131;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;1063:9:131;:21;;-1:-1:-1;;1063:21:131;;;;;;;;;;1094:39;;1100:10;;1112:2;:13;1128:4;1112:20;1094:5;:39::i;:::-;1143:11;:17;-1:-1:-1;;1170:12:131;:19;;-1:-1:-1;;1170:19:131;;;;;-1:-1:-1;170:9649:131;;7307:330;-1:-1:-1;;;;;7390:21:131;;7382:65;;;;;-1:-1:-1;;;7382:65:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;7458:49;7487:1;7491:7;7500:6;7458:20;:49::i;:::-;7518:12;:22;;;;;;-1:-1:-1;;;;;7550:18:131;;7518:12;7550:18;;;-1:-1:-1;7550:18:131;;;;;;;;:28;;;;;;7593:37;;;;;;;;;;;;;;;;;;7307:330;;:::o;9725:92::-;;;;:::o;170:9649::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;170:9649:131;;;-1:-1:-1;170:9649:131;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/mocks/MockERC20.sol", "type": "contract", "deployment": {"address": "0xaA57dd2A403471d9731b6cad914BCC2f0C466a03", "chainid": "1", "blockHeight": 19353561}}